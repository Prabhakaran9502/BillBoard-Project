{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridColumnReorder = exports.columnReorderStateInitializer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _styles = require(\"@mui/material/styles\");\n\nvar _xDataGrid = require(\"@mui/x-data-grid\");\n\nvar _columnReorderSelector = require(\"./columnReorderSelector\");\n\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n      t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\n\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n\n  var t = _getRequireWildcardCache(r);\n\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n    __proto__: null\n  },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n\n  return n.default = e, t && t.set(e, n), n;\n}\n\nconst CURSOR_MOVE_DIRECTION_LEFT = 'left';\nconst CURSOR_MOVE_DIRECTION_RIGHT = 'right';\n\nconst getCursorMoveDirectionX = (currentCoordinates, nextCoordinates) => {\n  return currentCoordinates.x <= nextCoordinates.x ? CURSOR_MOVE_DIRECTION_RIGHT : CURSOR_MOVE_DIRECTION_LEFT;\n};\n\nconst hasCursorPositionChanged = (currentCoordinates, nextCoordinates) => currentCoordinates.x !== nextCoordinates.x || currentCoordinates.y !== nextCoordinates.y;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    columnHeaderDragging: ['columnHeader--dragging']\n  };\n  return (0, _utils.unstable_composeClasses)(slots, _xDataGrid.getDataGridUtilityClass, classes);\n};\n\nconst columnReorderStateInitializer = state => (0, _extends2.default)({}, state, {\n  columnReorder: {\n    dragCol: ''\n  }\n});\n/**\n * @requires useGridColumns (method)\n */\n\n\nexports.columnReorderStateInitializer = columnReorderStateInitializer;\n\nconst useGridColumnReorder = (apiRef, props) => {\n  const logger = (0, _xDataGrid.useGridLogger)(apiRef, 'useGridColumnReorder');\n  const dragColNode = React.useRef(null);\n  const cursorPosition = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const originColumnIndex = React.useRef(null);\n  const forbiddenIndexes = React.useRef({});\n  const removeDnDStylesTimeout = React.useRef();\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = (0, _styles.useTheme)();\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(removeDnDStylesTimeout.current);\n    };\n  }, []);\n  const handleDragStart = React.useCallback((params, event) => {\n    if (props.disableColumnReorder || params.colDef.disableReorder) {\n      return;\n    }\n\n    logger.debug(`Start dragging col ${params.field}`); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    dragColNode.current = event.currentTarget;\n    dragColNode.current.classList.add(classes.columnHeaderDragging);\n\n    if (event.dataTransfer) {\n      event.dataTransfer.effectAllowed = 'move';\n    }\n\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      columnReorder: (0, _extends2.default)({}, state.columnReorder, {\n        dragCol: params.field\n      })\n    }));\n    apiRef.current.forceUpdate();\n    removeDnDStylesTimeout.current = setTimeout(() => {\n      dragColNode.current.classList.remove(classes.columnHeaderDragging);\n    });\n    originColumnIndex.current = apiRef.current.getColumnIndex(params.field, false);\n    const draggingColumnGroupPath = apiRef.current.getColumnGroupPath(params.field);\n    const columnIndex = originColumnIndex.current;\n    const allColumns = apiRef.current.getAllColumns();\n    const groupsLookup = apiRef.current.getAllGroupDetails();\n\n    const getGroupPathFromColumnIndex = colIndex => {\n      const field = allColumns[colIndex].field;\n      return apiRef.current.getColumnGroupPath(field);\n    }; // The limitingGroupId is the id of the group from which the dragged column should not escape\n\n\n    let limitingGroupId = null;\n    draggingColumnGroupPath.forEach(groupId => {\n      if (!groupsLookup[groupId]?.freeReordering) {\n        // Only consider group that are made of more than one column\n        if (columnIndex > 0 && getGroupPathFromColumnIndex(columnIndex - 1).includes(groupId)) {\n          limitingGroupId = groupId;\n        } else if (columnIndex + 1 < allColumns.length && getGroupPathFromColumnIndex(columnIndex + 1).includes(groupId)) {\n          limitingGroupId = groupId;\n        }\n      }\n    });\n    forbiddenIndexes.current = {};\n\n    for (let indexToForbid = 0; indexToForbid < allColumns.length; indexToForbid += 1) {\n      const leftIndex = indexToForbid <= columnIndex ? indexToForbid - 1 : indexToForbid;\n      const rightIndex = indexToForbid < columnIndex ? indexToForbid : indexToForbid + 1;\n\n      if (limitingGroupId !== null) {\n        // verify this indexToForbid will be linked to the limiting group. Otherwise forbid it\n        let allowIndex = false;\n\n        if (leftIndex >= 0 && getGroupPathFromColumnIndex(leftIndex).includes(limitingGroupId)) {\n          allowIndex = true;\n        } else if (rightIndex < allColumns.length && getGroupPathFromColumnIndex(rightIndex).includes(limitingGroupId)) {\n          allowIndex = true;\n        }\n\n        if (!allowIndex) {\n          forbiddenIndexes.current[indexToForbid] = true;\n        }\n      } // Verify we are not splitting another group\n\n\n      if (leftIndex >= 0 && rightIndex < allColumns.length) {\n        getGroupPathFromColumnIndex(rightIndex).forEach(groupId => {\n          if (getGroupPathFromColumnIndex(leftIndex).includes(groupId)) {\n            if (!draggingColumnGroupPath.includes(groupId)) {\n              // moving here split the group groupId in two distincts chunks\n              if (!groupsLookup[groupId]?.freeReordering) {\n                forbiddenIndexes.current[indexToForbid] = true;\n              }\n            }\n          }\n        });\n      }\n    }\n  }, [props.disableColumnReorder, classes.columnHeaderDragging, logger, apiRef]);\n  const handleDragEnter = React.useCallback((params, event) => {\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n  }, []);\n  const handleDragOver = React.useCallback((params, event) => {\n    const dragColField = (0, _columnReorderSelector.gridColumnReorderDragColSelector)(apiRef);\n\n    if (!dragColField) {\n      return;\n    }\n\n    logger.debug(`Dragging over col ${params.field}`);\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    const coordinates = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (params.field !== dragColField && hasCursorPositionChanged(cursorPosition.current, coordinates)) {\n      const targetColIndex = apiRef.current.getColumnIndex(params.field, false);\n      const targetColVisibleIndex = apiRef.current.getColumnIndex(params.field, true);\n      const targetCol = apiRef.current.getColumn(params.field);\n      const dragColIndex = apiRef.current.getColumnIndex(dragColField, false);\n      const visibleColumns = apiRef.current.getVisibleColumns();\n      const allColumns = apiRef.current.getAllColumns();\n      const cursorMoveDirectionX = getCursorMoveDirectionX(cursorPosition.current, coordinates);\n      const hasMovedLeft = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_LEFT && (theme.direction === 'rtl' ? dragColIndex < targetColIndex : targetColIndex < dragColIndex);\n      const hasMovedRight = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_RIGHT && (theme.direction === 'rtl' ? targetColIndex < dragColIndex : dragColIndex < targetColIndex);\n\n      if (hasMovedLeft || hasMovedRight) {\n        let canBeReordered;\n        let indexOffsetInHiddenColumns = 0;\n\n        if (!targetCol.disableReorder) {\n          canBeReordered = true;\n        } else if (hasMovedLeft) {\n          canBeReordered = targetColVisibleIndex > 0 && !visibleColumns[targetColVisibleIndex - 1].disableReorder;\n        } else {\n          canBeReordered = targetColVisibleIndex < visibleColumns.length - 1 && !visibleColumns[targetColVisibleIndex + 1].disableReorder;\n        }\n\n        if (forbiddenIndexes.current[targetColIndex]) {\n          let nextVisibleColumnField;\n          let indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n\n          if (hasMovedLeft) {\n            nextVisibleColumnField = targetColVisibleIndex > 0 ? visibleColumns[targetColVisibleIndex - 1].field : null;\n\n            while (indexWithOffset > 0 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\n              indexOffsetInHiddenColumns -= 1;\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n            }\n          } else {\n            nextVisibleColumnField = targetColVisibleIndex + 1 < visibleColumns.length ? visibleColumns[targetColVisibleIndex + 1].field : null;\n\n            while (indexWithOffset < allColumns.length - 1 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\n              indexOffsetInHiddenColumns += 1;\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n            }\n          }\n\n          if (forbiddenIndexes.current[indexWithOffset] || allColumns[indexWithOffset].field === nextVisibleColumnField) {\n            // If we ended up on a visible column, or a forbidden one, we cannot do the reorder\n            canBeReordered = false;\n          }\n        }\n\n        const canBeReorderedProcessed = apiRef.current.unstable_applyPipeProcessors('canBeReordered', canBeReordered, {\n          targetIndex: targetColVisibleIndex\n        });\n\n        if (canBeReorderedProcessed) {\n          apiRef.current.setColumnIndex(dragColField, targetColIndex + indexOffsetInHiddenColumns);\n        }\n      }\n\n      cursorPosition.current = coordinates;\n    }\n  }, [apiRef, logger, theme.direction]);\n  const handleDragEnd = React.useCallback((params, event) => {\n    const dragColField = (0, _columnReorderSelector.gridColumnReorderDragColSelector)(apiRef);\n\n    if (props.disableColumnReorder || !dragColField) {\n      return;\n    }\n\n    logger.debug('End dragging col');\n    event.preventDefault(); // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n\n    event.stopPropagation();\n    clearTimeout(removeDnDStylesTimeout.current);\n    dragColNode.current = null; // Check if the column was dropped outside the grid.\n\n    if (event.dataTransfer.dropEffect === 'none' && !props.keepColumnPositionIfDraggedOutside) {\n      // Accessing params.field may contain the wrong field as header elements are reused\n      apiRef.current.setColumnIndex(dragColField, originColumnIndex.current);\n      originColumnIndex.current = null;\n    } else {\n      // Emit the columnOrderChange event only once when the reordering stops.\n      const columnOrderChangeParams = {\n        column: apiRef.current.getColumn(dragColField),\n        targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(dragColField),\n        oldIndex: originColumnIndex.current\n      };\n      apiRef.current.publishEvent('columnOrderChange', columnOrderChangeParams);\n    }\n\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      columnReorder: (0, _extends2.default)({}, state.columnReorder, {\n        dragCol: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [props.disableColumnReorder, props.keepColumnPositionIfDraggedOutside, logger, apiRef]);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragStart', handleDragStart);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragEnter', handleDragEnter);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragOver', handleDragOver);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragEnd', handleDragEnd);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellDragEnter', handleDragEnter);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellDragOver', handleDragOver);\n  (0, _xDataGrid.useGridApiOptionHandler)(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n};\n\nexports.useGridColumnReorder = useGridColumnReorder;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useGridColumnReorder","columnReorderStateInitializer","_extends2","React","_interopRequireWildcard","_utils","_styles","_xDataGrid","_columnReorderSelector","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","CURSOR_MOVE_DIRECTION_LEFT","CURSOR_MOVE_DIRECTION_RIGHT","getCursorMoveDirectionX","currentCoordinates","nextCoordinates","x","hasCursorPositionChanged","y","useUtilityClasses","ownerState","classes","slots","columnHeaderDragging","unstable_composeClasses","getDataGridUtilityClass","state","columnReorder","dragCol","apiRef","props","logger","useGridLogger","dragColNode","useRef","cursorPosition","originColumnIndex","forbiddenIndexes","removeDnDStylesTimeout","theme","useTheme","useEffect","clearTimeout","current","handleDragStart","useCallback","params","event","disableColumnReorder","colDef","disableReorder","debug","field","stopPropagation","currentTarget","classList","add","dataTransfer","effectAllowed","setState","forceUpdate","setTimeout","remove","getColumnIndex","draggingColumnGroupPath","getColumnGroupPath","columnIndex","allColumns","getAllColumns","groupsLookup","getAllGroupDetails","getGroupPathFromColumnIndex","colIndex","limitingGroupId","forEach","groupId","freeReordering","includes","length","indexToForbid","leftIndex","rightIndex","allowIndex","handleDragEnter","preventDefault","handleDragOver","dragColField","gridColumnReorderDragColSelector","coordinates","clientX","clientY","targetColIndex","targetColVisibleIndex","targetCol","getColumn","dragColIndex","visibleColumns","getVisibleColumns","cursorMoveDirectionX","hasMovedLeft","direction","hasMovedRight","canBeReordered","indexOffsetInHiddenColumns","nextVisibleColumnField","indexWithOffset","canBeReorderedProcessed","unstable_applyPipeProcessors","targetIndex","setColumnIndex","handleDragEnd","dropEffect","keepColumnPositionIfDraggedOutside","columnOrderChangeParams","column","getColumnIndexRelativeToVisibleColumns","oldIndex","publishEvent","useGridApiEventHandler","useGridApiOptionHandler","onColumnOrderChange"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-pro/hooks/features/columnReorder/useGridColumnReorder.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridColumnReorder = exports.columnReorderStateInitializer = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"@mui/utils\");\nvar _styles = require(\"@mui/material/styles\");\nvar _xDataGrid = require(\"@mui/x-data-grid\");\nvar _columnReorderSelector = require(\"./columnReorderSelector\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nconst CURSOR_MOVE_DIRECTION_LEFT = 'left';\nconst CURSOR_MOVE_DIRECTION_RIGHT = 'right';\nconst getCursorMoveDirectionX = (currentCoordinates, nextCoordinates) => {\n  return currentCoordinates.x <= nextCoordinates.x ? CURSOR_MOVE_DIRECTION_RIGHT : CURSOR_MOVE_DIRECTION_LEFT;\n};\nconst hasCursorPositionChanged = (currentCoordinates, nextCoordinates) => currentCoordinates.x !== nextCoordinates.x || currentCoordinates.y !== nextCoordinates.y;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    columnHeaderDragging: ['columnHeader--dragging']\n  };\n  return (0, _utils.unstable_composeClasses)(slots, _xDataGrid.getDataGridUtilityClass, classes);\n};\nconst columnReorderStateInitializer = state => (0, _extends2.default)({}, state, {\n  columnReorder: {\n    dragCol: ''\n  }\n});\n\n/**\n * @requires useGridColumns (method)\n */\nexports.columnReorderStateInitializer = columnReorderStateInitializer;\nconst useGridColumnReorder = (apiRef, props) => {\n  const logger = (0, _xDataGrid.useGridLogger)(apiRef, 'useGridColumnReorder');\n  const dragColNode = React.useRef(null);\n  const cursorPosition = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const originColumnIndex = React.useRef(null);\n  const forbiddenIndexes = React.useRef({});\n  const removeDnDStylesTimeout = React.useRef();\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = (0, _styles.useTheme)();\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(removeDnDStylesTimeout.current);\n    };\n  }, []);\n  const handleDragStart = React.useCallback((params, event) => {\n    if (props.disableColumnReorder || params.colDef.disableReorder) {\n      return;\n    }\n    logger.debug(`Start dragging col ${params.field}`);\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    dragColNode.current = event.currentTarget;\n    dragColNode.current.classList.add(classes.columnHeaderDragging);\n    if (event.dataTransfer) {\n      event.dataTransfer.effectAllowed = 'move';\n    }\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      columnReorder: (0, _extends2.default)({}, state.columnReorder, {\n        dragCol: params.field\n      })\n    }));\n    apiRef.current.forceUpdate();\n    removeDnDStylesTimeout.current = setTimeout(() => {\n      dragColNode.current.classList.remove(classes.columnHeaderDragging);\n    });\n    originColumnIndex.current = apiRef.current.getColumnIndex(params.field, false);\n    const draggingColumnGroupPath = apiRef.current.getColumnGroupPath(params.field);\n    const columnIndex = originColumnIndex.current;\n    const allColumns = apiRef.current.getAllColumns();\n    const groupsLookup = apiRef.current.getAllGroupDetails();\n    const getGroupPathFromColumnIndex = colIndex => {\n      const field = allColumns[colIndex].field;\n      return apiRef.current.getColumnGroupPath(field);\n    };\n\n    // The limitingGroupId is the id of the group from which the dragged column should not escape\n    let limitingGroupId = null;\n    draggingColumnGroupPath.forEach(groupId => {\n      if (!groupsLookup[groupId]?.freeReordering) {\n        // Only consider group that are made of more than one column\n        if (columnIndex > 0 && getGroupPathFromColumnIndex(columnIndex - 1).includes(groupId)) {\n          limitingGroupId = groupId;\n        } else if (columnIndex + 1 < allColumns.length && getGroupPathFromColumnIndex(columnIndex + 1).includes(groupId)) {\n          limitingGroupId = groupId;\n        }\n      }\n    });\n    forbiddenIndexes.current = {};\n    for (let indexToForbid = 0; indexToForbid < allColumns.length; indexToForbid += 1) {\n      const leftIndex = indexToForbid <= columnIndex ? indexToForbid - 1 : indexToForbid;\n      const rightIndex = indexToForbid < columnIndex ? indexToForbid : indexToForbid + 1;\n      if (limitingGroupId !== null) {\n        // verify this indexToForbid will be linked to the limiting group. Otherwise forbid it\n        let allowIndex = false;\n        if (leftIndex >= 0 && getGroupPathFromColumnIndex(leftIndex).includes(limitingGroupId)) {\n          allowIndex = true;\n        } else if (rightIndex < allColumns.length && getGroupPathFromColumnIndex(rightIndex).includes(limitingGroupId)) {\n          allowIndex = true;\n        }\n        if (!allowIndex) {\n          forbiddenIndexes.current[indexToForbid] = true;\n        }\n      }\n\n      // Verify we are not splitting another group\n      if (leftIndex >= 0 && rightIndex < allColumns.length) {\n        getGroupPathFromColumnIndex(rightIndex).forEach(groupId => {\n          if (getGroupPathFromColumnIndex(leftIndex).includes(groupId)) {\n            if (!draggingColumnGroupPath.includes(groupId)) {\n              // moving here split the group groupId in two distincts chunks\n              if (!groupsLookup[groupId]?.freeReordering) {\n                forbiddenIndexes.current[indexToForbid] = true;\n              }\n            }\n          }\n        });\n      }\n    }\n  }, [props.disableColumnReorder, classes.columnHeaderDragging, logger, apiRef]);\n  const handleDragEnter = React.useCallback((params, event) => {\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n  }, []);\n  const handleDragOver = React.useCallback((params, event) => {\n    const dragColField = (0, _columnReorderSelector.gridColumnReorderDragColSelector)(apiRef);\n    if (!dragColField) {\n      return;\n    }\n    logger.debug(`Dragging over col ${params.field}`);\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    const coordinates = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    if (params.field !== dragColField && hasCursorPositionChanged(cursorPosition.current, coordinates)) {\n      const targetColIndex = apiRef.current.getColumnIndex(params.field, false);\n      const targetColVisibleIndex = apiRef.current.getColumnIndex(params.field, true);\n      const targetCol = apiRef.current.getColumn(params.field);\n      const dragColIndex = apiRef.current.getColumnIndex(dragColField, false);\n      const visibleColumns = apiRef.current.getVisibleColumns();\n      const allColumns = apiRef.current.getAllColumns();\n      const cursorMoveDirectionX = getCursorMoveDirectionX(cursorPosition.current, coordinates);\n      const hasMovedLeft = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_LEFT && (theme.direction === 'rtl' ? dragColIndex < targetColIndex : targetColIndex < dragColIndex);\n      const hasMovedRight = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_RIGHT && (theme.direction === 'rtl' ? targetColIndex < dragColIndex : dragColIndex < targetColIndex);\n      if (hasMovedLeft || hasMovedRight) {\n        let canBeReordered;\n        let indexOffsetInHiddenColumns = 0;\n        if (!targetCol.disableReorder) {\n          canBeReordered = true;\n        } else if (hasMovedLeft) {\n          canBeReordered = targetColVisibleIndex > 0 && !visibleColumns[targetColVisibleIndex - 1].disableReorder;\n        } else {\n          canBeReordered = targetColVisibleIndex < visibleColumns.length - 1 && !visibleColumns[targetColVisibleIndex + 1].disableReorder;\n        }\n        if (forbiddenIndexes.current[targetColIndex]) {\n          let nextVisibleColumnField;\n          let indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n          if (hasMovedLeft) {\n            nextVisibleColumnField = targetColVisibleIndex > 0 ? visibleColumns[targetColVisibleIndex - 1].field : null;\n            while (indexWithOffset > 0 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\n              indexOffsetInHiddenColumns -= 1;\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n            }\n          } else {\n            nextVisibleColumnField = targetColVisibleIndex + 1 < visibleColumns.length ? visibleColumns[targetColVisibleIndex + 1].field : null;\n            while (indexWithOffset < allColumns.length - 1 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\n              indexOffsetInHiddenColumns += 1;\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n            }\n          }\n          if (forbiddenIndexes.current[indexWithOffset] || allColumns[indexWithOffset].field === nextVisibleColumnField) {\n            // If we ended up on a visible column, or a forbidden one, we cannot do the reorder\n            canBeReordered = false;\n          }\n        }\n        const canBeReorderedProcessed = apiRef.current.unstable_applyPipeProcessors('canBeReordered', canBeReordered, {\n          targetIndex: targetColVisibleIndex\n        });\n        if (canBeReorderedProcessed) {\n          apiRef.current.setColumnIndex(dragColField, targetColIndex + indexOffsetInHiddenColumns);\n        }\n      }\n      cursorPosition.current = coordinates;\n    }\n  }, [apiRef, logger, theme.direction]);\n  const handleDragEnd = React.useCallback((params, event) => {\n    const dragColField = (0, _columnReorderSelector.gridColumnReorderDragColSelector)(apiRef);\n    if (props.disableColumnReorder || !dragColField) {\n      return;\n    }\n    logger.debug('End dragging col');\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    clearTimeout(removeDnDStylesTimeout.current);\n    dragColNode.current = null;\n\n    // Check if the column was dropped outside the grid.\n    if (event.dataTransfer.dropEffect === 'none' && !props.keepColumnPositionIfDraggedOutside) {\n      // Accessing params.field may contain the wrong field as header elements are reused\n      apiRef.current.setColumnIndex(dragColField, originColumnIndex.current);\n      originColumnIndex.current = null;\n    } else {\n      // Emit the columnOrderChange event only once when the reordering stops.\n      const columnOrderChangeParams = {\n        column: apiRef.current.getColumn(dragColField),\n        targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(dragColField),\n        oldIndex: originColumnIndex.current\n      };\n      apiRef.current.publishEvent('columnOrderChange', columnOrderChangeParams);\n    }\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      columnReorder: (0, _extends2.default)({}, state.columnReorder, {\n        dragCol: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [props.disableColumnReorder, props.keepColumnPositionIfDraggedOutside, logger, apiRef]);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragStart', handleDragStart);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragEnter', handleDragEnter);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragOver', handleDragOver);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'columnHeaderDragEnd', handleDragEnd);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellDragEnter', handleDragEnter);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellDragOver', handleDragOver);\n  (0, _xDataGrid.useGridApiOptionHandler)(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n};\nexports.useGridColumnReorder = useGridColumnReorder;"],"mappings":"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"},"metadata":{},"sourceType":"script"}