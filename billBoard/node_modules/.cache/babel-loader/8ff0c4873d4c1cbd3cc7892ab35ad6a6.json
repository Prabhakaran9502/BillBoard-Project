{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _defineProperty = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nexports.DayPeriodParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\"); // in the morning, in the afternoon, in the evening, at night\n\n\nvar DayPeriodParser = /*#__PURE__*/function (_Parser$Parser) {\n  _inherits(DayPeriodParser, _Parser$Parser);\n\n  var _super = _createSuper(DayPeriodParser);\n\n  function DayPeriodParser() {\n    var _this;\n\n    _classCallCheck(this, DayPeriodParser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 80);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"a\", \"b\", \"t\", \"T\"]);\n\n    return _this;\n  }\n\n  _createClass(DayPeriodParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        case \"B\":\n        case \"BB\":\n        case \"BBB\":\n          return match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n\n        case \"BBBBB\":\n          return match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n\n        case \"BBBB\":\n        default:\n          return match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);\n      return date;\n    }\n  }]);\n\n  return DayPeriodParser;\n}(_Parser.Parser);\n\nexports.DayPeriodParser = DayPeriodParser;","map":{"version":3,"names":["exports","DayPeriodParser","_Parser","require","_utils","dateString","token","match","dayPeriod","width","context","date","_flags","value","setHours","dayPeriodEnumToHours","Parser"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js"],"sourcesContent":["\"use strict\";\nexports.DayPeriodParser = void 0;\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\n// in the morning, in the afternoon, in the evening, at night\nclass DayPeriodParser extends _Parser.Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours((0, _utils.dayPeriodEnumToHours)(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\nexports.DayPeriodParser = DayPeriodParser;\n"],"mappings":"AAAA;;;;;;;;;;;;;;AACAA,OAAO,CAACC,eAAR,GAA0B,KAAK,CAA/B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB,C,CAEA;;;IACMF,e;;;;;;;;;;;;;;;;+DACO,E;;yEA+CU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,C;;;;;;;WA7CrB,eAAMI,UAAN,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;MAC9B,QAAQD,KAAR;QACE,KAAK,GAAL;QACA,KAAK,IAAL;QACA,KAAK,KAAL;UACE,OACEC,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;YAC1BI,KAAK,EAAE,aADmB;YAE1BC,OAAO,EAAE;UAFiB,CAA5B,KAIAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;YAC1BI,KAAK,EAAE,QADmB;YAE1BC,OAAO,EAAE;UAFiB,CAA5B,CALF;;QAWF,KAAK,OAAL;UACE,OAAOH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;YACjCI,KAAK,EAAE,QAD0B;YAEjCC,OAAO,EAAE;UAFwB,CAA5B,CAAP;;QAIF,KAAK,MAAL;QACA;UACE,OACEH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;YAC1BI,KAAK,EAAE,MADmB;YAE1BC,OAAO,EAAE;UAFiB,CAA5B,KAIAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;YAC1BI,KAAK,EAAE,aADmB;YAE1BC,OAAO,EAAE;UAFiB,CAA5B,CAJA,IAQAH,KAAK,CAACC,SAAN,CAAgBH,UAAhB,EAA4B;YAC1BI,KAAK,EAAE,QADmB;YAE1BC,OAAO,EAAE;UAFiB,CAA5B,CATF;MAtBJ;IAqCD;;;WAED,aAAIC,IAAJ,EAAUC,MAAV,EAAkBC,KAAlB,EAAyB;MACvBF,IAAI,CAACG,QAAL,CAAc,CAAC,GAAGV,MAAM,CAACW,oBAAX,EAAiCF,KAAjC,CAAd,EAAuD,CAAvD,EAA0D,CAA1D,EAA6D,CAA7D;MACA,OAAOF,IAAP;IACD;;;;EA9C2BT,OAAO,CAACc,M;;AAkDtChB,OAAO,CAACC,eAAR,GAA0BA,eAA1B"},"metadata":{},"sourceType":"script"}