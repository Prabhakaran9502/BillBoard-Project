{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar inspect = require('object-inspect');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/6.0/#sec-get-o-p\n\n\nmodule.exports = function Get(O, P) {\n  // 7.3.1.1\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  } // 7.3.1.2\n\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n  } // 7.3.1.3\n\n\n  return O[P];\n};","map":{"version":3,"names":["$TypeError","require","inspect","IsPropertyKey","Type","module","exports","Get","O","P"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-abstract/2021/Get.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar inspect = require('object-inspect');\n\nvar IsPropertyKey = require('./IsPropertyKey');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-get-o-p\n\nmodule.exports = function Get(O, P) {\n\t// 7.3.1.1\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\t// 7.3.1.2\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true, got ' + inspect(P));\n\t}\n\t// 7.3.1.3\n\treturn O[P];\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AAEA,IAAIE,aAAa,GAAGF,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;EACnC;EACA,IAAIL,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;IACzB,MAAM,IAAIR,UAAJ,CAAe,yCAAf,CAAN;EACA,CAJkC,CAKnC;;;EACA,IAAI,CAACG,aAAa,CAACM,CAAD,CAAlB,EAAuB;IACtB,MAAM,IAAIT,UAAJ,CAAe,yDAAyDE,OAAO,CAACO,CAAD,CAA/E,CAAN;EACA,CARkC,CASnC;;;EACA,OAAOD,CAAC,CAACC,CAAD,CAAR;AACA,CAXD"},"metadata":{},"sourceType":"script"}