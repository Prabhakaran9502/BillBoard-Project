{"ast":null,"code":"import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = new WeakMap();\nconst missingInstanceIdWarning = buildWarning(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\n\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = function (a, b, c, d, e, f) {\n  if ((arguments.length <= 6 ? 0 : arguments.length - 6) > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n\n  let selector;\n\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  } // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n\n    const fn = reselectCreateSelector(...args);\n\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n};","map":{"version":3,"names":["createSelector","reselectCreateSelector","buildWarning","cache","WeakMap","missingInstanceIdWarning","checkIsAPIRef","value","current","DEFAULT_INSTANCE_ID","id","a","b","c","d","e","f","Error","selector","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","state","va","vb","vc","vd","ve","acceptsApiRef","createSelectorMemoized","args","cacheKey","process","env","NODE_ENV","cacheArgsInit","get","cacheArgs","Map","cacheFn","fn","set"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/utils/createSelector.js"],"sourcesContent":["import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = new WeakMap();\nconst missingInstanceIdWarning = buildWarning(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}