{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const headerFilteringStateInitializer = (state, props) => _extends({}, state, {\n  headerFiltering: {\n    enabled: props.headerFilters ?? false,\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n\n      return _extends({}, state, {\n        headerFiltering: {\n          enabled: props.headerFilters ?? false,\n          editing: headerFilterState.editing ?? null,\n          menuOpen: headerFilterState.menuOpen ?? null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature, props.headerFilters]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef); // If the column was removed from the grid, we need to find the closest visible field\n\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      } // If the field to focus is hidden, we need to find the closest visible field\n\n\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n  /*\n   * EFFECTS\n   */\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      apiRef.current.setHeaderFilterState({\n        enabled: props.headerFilters ?? false\n      });\n    }\n  }, [apiRef, props.headerFilters]);\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","useGridLogger","gridColumnLookupSelector","gridColumnVisibilityModelSelector","gridColumnFieldsSelector","headerFilteringStateInitializer","state","props","headerFiltering","enabled","headerFilters","editing","menuOpen","useGridHeaderFiltering","apiRef","logger","setHeaderFilterState","useCallback","headerFilterState","current","setState","signature","forceUpdate","startHeaderFilterEditMode","field","debug","stopHeaderFilterEditMode","showHeaderFilterMenu","hideHeaderFilterMenu","fieldToFocus","columnLookup","columnVisibilityModel","orderedFields","visibleOrderedFields","filter","fieldIndex","indexOf","setColumnHeaderFilterFocus","headerFilterPrivateApi","headerFilterApi","isFirstRender","useRef","useEffect"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/hooks/features/headerFiltering/useGridHeaderFiltering.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const headerFilteringStateInitializer = (state, props) => _extends({}, state, {\n  headerFiltering: {\n    enabled: props.headerFilters ?? false,\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n      return _extends({}, state, {\n        headerFiltering: {\n          enabled: props.headerFilters ?? false,\n          editing: headerFilterState.editing ?? null,\n          menuOpen: headerFilterState.menuOpen ?? null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature, props.headerFilters]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n\n  /*\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      apiRef.current.setHeaderFilterState({\n        enabled: props.headerFilters ?? false\n      });\n    }\n  }, [apiRef, props.headerFilters]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}