{"ast":null,"code":"import { Chance } from 'chance';\nimport { COLORS, COMMODITY_OPTIONS, CONTRACT_TYPE_OPTIONS, COUNTRY_ISO_OPTIONS, CURRENCY_OPTIONS, INCOTERM_OPTIONS, RATE_TYPE_OPTIONS, STATUS_OPTIONS, TAXCODE_OPTIONS } from './static-data';\nlet chance;\nlet chanceGuid;\n\nif (typeof DISABLE_CHANCE_RANDOM !== 'undefined' && DISABLE_CHANCE_RANDOM) {\n  chance = new Chance(() => 0.5);\n  chanceGuid = new Chance(42);\n} else {\n  chance = new Chance();\n  chanceGuid = chance;\n}\n/**\n * Wrap a data generator that returns a string and add a prefix if the value generated has already been given\n */\n\n\nconst uniquenessHandler = generator => (data, context) => {\n  const rawValue = generator(data, context);\n\n  if (!context.values) {\n    return rawValue;\n  }\n\n  const valueCount = (context.values[rawValue] ?? 0) + 1;\n  context.values[rawValue] = valueCount + 1;\n\n  if (valueCount > 1) {\n    return `${rawValue} ${valueCount}`;\n  }\n\n  return rawValue;\n};\n\nfunction dateFuture(years, refDate) {\n  let date = new Date();\n\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  }; // some time from now to N years later, in milliseconds\n\n  const past = date.getTime() + chance.integer(range);\n  date.setTime(past);\n  return date;\n}\n\nfunction dateRecent(days, refDate) {\n  let date = new Date();\n\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n\n  const range = {\n    min: 1000,\n    max: (days || 1) * 24 * 3600 * 1000\n  }; // some time from now to N days ago, in milliseconds\n\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\n\nfunction datePast(years, refDate) {\n  let date = new Date();\n\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  }; // some time from now to N years ago, in milliseconds\n\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\n\nexport const random = (min, max) => chance.floating({\n  min,\n  max\n});\nexport const randomInt = (min, max) => chance.integer({\n  min,\n  max\n});\nexport const randomPrice = function () {\n  let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000;\n  return Number(random(min, max).toFixed(2));\n};\nexport const randomRate = () => random(0, 1);\nexport const randomDate = (start, end) => new Date(start.getTime() + chance.floating({\n  min: 0,\n  max: 1\n}) * (end.getTime() - start.getTime()));\nexport const randomArrayItem = arr => arr[randomInt(0, arr.length - 1)];\nexport const randomBoolean = () => randomArrayItem([true, false]);\nexport const randomColor = () => randomArrayItem(COLORS);\nexport const randomId = () => chanceGuid.guid();\nexport const randomDesk = () => `D-${chance.integer({\n  min: 0,\n  max: 10000\n})}`;\nexport const randomCommodity = () => randomArrayItem(COMMODITY_OPTIONS);\nexport const randomTraderName = () => chance.name();\nexport const randomUserName = () => chance.twitter();\nexport const randomEmail = () => chance.email();\nexport const randomUrl = () => chance.url();\nexport const randomPhoneNumber = () => chance.phone();\nexport const randomUnitPrice = () => randomPrice(1, 100);\nexport const randomUnitPriceCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomQuantity = () => randomInt(1000, 100000);\nexport const randomFeeRate = () => Number(random(0.1, 0.4).toFixed(3));\nexport const randomIncoterm = () => randomArrayItem(INCOTERM_OPTIONS);\nexport const randomStatusOptions = () => randomArrayItem(STATUS_OPTIONS);\nexport const randomPnL = () => random(-100000000, 100000000);\nexport const randomMaturityDate = () => dateFuture();\nexport const randomTradeDate = () => dateRecent();\nexport const randomBrokerId = () => chance.guid();\nexport const randomCompanyName = () => chance.company();\nexport const randomCountry = () => randomArrayItem(COUNTRY_ISO_OPTIONS);\nexport const randomCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomAddress = () => chance.address();\nexport const randomCity = () => chance.city();\nexport const randomTaxCode = () => randomArrayItem(TAXCODE_OPTIONS);\nexport const randomContractType = () => randomArrayItem(CONTRACT_TYPE_OPTIONS);\nexport const randomRateType = () => randomArrayItem(RATE_TYPE_OPTIONS);\nexport const randomCreatedDate = () => datePast();\nexport const randomUpdatedDate = () => dateRecent();\nexport const randomJobTitle = () => chance.profession();\nexport const randomRating = () => randomInt(1, 5);\nexport const randomName = uniquenessHandler(() => chance.name());\nexport const generateFilledQuantity = data => Number((data.quantity * randomRate()).toFixed()) / data.quantity;\nexport const generateIsFilled = data => data.quantity === data.filledQuantity;","map":{"version":3,"names":["Chance","COLORS","COMMODITY_OPTIONS","CONTRACT_TYPE_OPTIONS","COUNTRY_ISO_OPTIONS","CURRENCY_OPTIONS","INCOTERM_OPTIONS","RATE_TYPE_OPTIONS","STATUS_OPTIONS","TAXCODE_OPTIONS","chance","chanceGuid","DISABLE_CHANCE_RANDOM","uniquenessHandler","generator","data","context","rawValue","values","valueCount","dateFuture","years","refDate","date","Date","parse","range","min","max","past","getTime","integer","setTime","dateRecent","days","datePast","random","floating","randomInt","randomPrice","Number","toFixed","randomRate","randomDate","start","end","randomArrayItem","arr","length","randomBoolean","randomColor","randomId","guid","randomDesk","randomCommodity","randomTraderName","name","randomUserName","twitter","randomEmail","email","randomUrl","url","randomPhoneNumber","phone","randomUnitPrice","randomUnitPriceCurrency","randomQuantity","randomFeeRate","randomIncoterm","randomStatusOptions","randomPnL","randomMaturityDate","randomTradeDate","randomBrokerId","randomCompanyName","company","randomCountry","randomCurrency","randomAddress","address","randomCity","city","randomTaxCode","randomContractType","randomRateType","randomCreatedDate","randomUpdatedDate","randomJobTitle","profession","randomRating","randomName","generateFilledQuantity","quantity","generateIsFilled","filledQuantity"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid-generator/services/random-generator.js"],"sourcesContent":["import { Chance } from 'chance';\nimport { COLORS, COMMODITY_OPTIONS, CONTRACT_TYPE_OPTIONS, COUNTRY_ISO_OPTIONS, CURRENCY_OPTIONS, INCOTERM_OPTIONS, RATE_TYPE_OPTIONS, STATUS_OPTIONS, TAXCODE_OPTIONS } from './static-data';\nlet chance;\nlet chanceGuid;\nif (typeof DISABLE_CHANCE_RANDOM !== 'undefined' && DISABLE_CHANCE_RANDOM) {\n  chance = new Chance(() => 0.5);\n  chanceGuid = new Chance(42);\n} else {\n  chance = new Chance();\n  chanceGuid = chance;\n}\n/**\n * Wrap a data generator that returns a string and add a prefix if the value generated has already been given\n */\nconst uniquenessHandler = generator => (data, context) => {\n  const rawValue = generator(data, context);\n  if (!context.values) {\n    return rawValue;\n  }\n  const valueCount = (context.values[rawValue] ?? 0) + 1;\n  context.values[rawValue] = valueCount + 1;\n  if (valueCount > 1) {\n    return `${rawValue} ${valueCount}`;\n  }\n  return rawValue;\n};\nfunction dateFuture(years, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  };\n\n  // some time from now to N years later, in milliseconds\n  const past = date.getTime() + chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nfunction dateRecent(days, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (days || 1) * 24 * 3600 * 1000\n  };\n\n  // some time from now to N days ago, in milliseconds\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nfunction datePast(years, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  };\n\n  // some time from now to N years ago, in milliseconds\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nexport const random = (min, max) => chance.floating({\n  min,\n  max\n});\nexport const randomInt = (min, max) => chance.integer({\n  min,\n  max\n});\nexport const randomPrice = (min = 0, max = 100000) => Number(random(min, max).toFixed(2));\nexport const randomRate = () => random(0, 1);\nexport const randomDate = (start, end) => new Date(start.getTime() + chance.floating({\n  min: 0,\n  max: 1\n}) * (end.getTime() - start.getTime()));\nexport const randomArrayItem = arr => arr[randomInt(0, arr.length - 1)];\nexport const randomBoolean = () => randomArrayItem([true, false]);\nexport const randomColor = () => randomArrayItem(COLORS);\nexport const randomId = () => chanceGuid.guid();\nexport const randomDesk = () => `D-${chance.integer({\n  min: 0,\n  max: 10000\n})}`;\nexport const randomCommodity = () => randomArrayItem(COMMODITY_OPTIONS);\nexport const randomTraderName = () => chance.name();\nexport const randomUserName = () => chance.twitter();\nexport const randomEmail = () => chance.email();\nexport const randomUrl = () => chance.url();\nexport const randomPhoneNumber = () => chance.phone();\nexport const randomUnitPrice = () => randomPrice(1, 100);\nexport const randomUnitPriceCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomQuantity = () => randomInt(1000, 100000);\nexport const randomFeeRate = () => Number(random(0.1, 0.4).toFixed(3));\nexport const randomIncoterm = () => randomArrayItem(INCOTERM_OPTIONS);\nexport const randomStatusOptions = () => randomArrayItem(STATUS_OPTIONS);\nexport const randomPnL = () => random(-100000000, 100000000);\nexport const randomMaturityDate = () => dateFuture();\nexport const randomTradeDate = () => dateRecent();\nexport const randomBrokerId = () => chance.guid();\nexport const randomCompanyName = () => chance.company();\nexport const randomCountry = () => randomArrayItem(COUNTRY_ISO_OPTIONS);\nexport const randomCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomAddress = () => chance.address();\nexport const randomCity = () => chance.city();\nexport const randomTaxCode = () => randomArrayItem(TAXCODE_OPTIONS);\nexport const randomContractType = () => randomArrayItem(CONTRACT_TYPE_OPTIONS);\nexport const randomRateType = () => randomArrayItem(RATE_TYPE_OPTIONS);\nexport const randomCreatedDate = () => datePast();\nexport const randomUpdatedDate = () => dateRecent();\nexport const randomJobTitle = () => chance.profession();\nexport const randomRating = () => randomInt(1, 5);\nexport const randomName = uniquenessHandler(() => chance.name());\nexport const generateFilledQuantity = data => Number((data.quantity * randomRate()).toFixed()) / data.quantity;\nexport const generateIsFilled = data => data.quantity === data.filledQuantity;"],"mappings":"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"},"metadata":{},"sourceType":"module"}