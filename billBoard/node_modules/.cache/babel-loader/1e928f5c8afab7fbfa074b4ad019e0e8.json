{"ast":null,"code":"'use strict';\n\nvar floor = require('./floor');\n\nvar $TypeError = require('es-errors/type'); // https://262.ecma-international.org/14.0/#eqn-truncate\n\n\nmodule.exports = function truncate(x) {\n  if (typeof x !== 'number' && typeof x !== 'bigint') {\n    throw new $TypeError('argument must be a Number or a BigInt');\n  }\n\n  var result = x < 0 ? -floor(-x) : floor(x);\n  return result === 0 ? 0 : result; // in the spec, these are math values, so we filter out -0 here\n};","map":{"version":3,"names":["floor","require","$TypeError","module","exports","truncate","x","result"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-abstract/2024/truncate.js"],"sourcesContent":["'use strict';\n\nvar floor = require('./floor');\n\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/14.0/#eqn-truncate\n\nmodule.exports = function truncate(x) {\n\tif (typeof x !== 'number' && typeof x !== 'bigint') {\n\t\tthrow new $TypeError('argument must be a Number or a BigInt');\n\t}\n\tvar result = x < 0 ? -floor(-x) : floor(x);\n\treturn result === 0 ? 0 : result; // in the spec, these are math values, so we filter out -0 here\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB,C,CAEA;;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,CAAlB,EAAqB;EACrC,IAAI,OAAOA,CAAP,KAAa,QAAb,IAAyB,OAAOA,CAAP,KAAa,QAA1C,EAAoD;IACnD,MAAM,IAAIJ,UAAJ,CAAe,uCAAf,CAAN;EACA;;EACD,IAAIK,MAAM,GAAGD,CAAC,GAAG,CAAJ,GAAQ,CAACN,KAAK,CAAC,CAACM,CAAF,CAAd,GAAqBN,KAAK,CAACM,CAAD,CAAvC;EACA,OAAOC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B,CALqC,CAKH;AAClC,CAND"},"metadata":{},"sourceType":"script"}