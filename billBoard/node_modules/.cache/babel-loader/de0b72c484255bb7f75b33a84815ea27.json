{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"unstableStartFieldRef\", \"unstableEndFieldRef\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Stack from '@mui/material/Stack';\nimport MuiTextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { useSlotProps } from '@mui/base/utils';\nimport { unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass, unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport { splitFieldInternalAndForwardedProps, convertFieldResponseIntoMuiTextFieldProps } from '@mui/x-date-pickers/internals';\nimport { PickersTextField } from '@mui/x-date-pickers/PickersTextField';\nimport { useMultiInputDateRangeField } from '../internals/hooks/useMultiInputRangeField/useMultiInputDateRangeField';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const multiInputDateRangeFieldClasses = generateUtilityClasses('MuiMultiInputDateRangeField', ['root', 'separator']);\nexport const getMultiInputDateRangeFieldUtilityClass = slot => generateUtilityClass('MuiMultiInputDateRangeField', slot);\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getMultiInputDateRangeFieldUtilityClass, classes);\n};\n\nconst MultiInputDateRangeFieldRoot = styled( /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Stack, _extends({\n  ref: ref,\n  spacing: 2,\n  direction: \"row\",\n  alignItems: \"center\"\n}, props))), {\n  name: 'MuiMultiInputDateRangeField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst MultiInputDateRangeFieldSeparator = styled(Typography, {\n  name: 'MuiMultiInputDateRangeField',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  lineHeight: '1.4375em' // 23px\n\n});\n/**\n * Demos:\n *\n * - [DateRangeField](http://mui.com/x/react-date-pickers/date-range-field/)\n * - [Fields](https://mui.com/x/react-date-pickers/fields/)\n *\n * API:\n *\n * - [MultiInputDateRangeField API](https://mui.com/x/api/multi-input-date-range-field/)\n */\n\nconst MultiInputDateRangeField = /*#__PURE__*/React.forwardRef(function MultiInputDateRangeField(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiMultiInputDateRangeField'\n  });\n  const {\n    internalProps,\n    forwardedProps\n  } = splitFieldInternalAndForwardedProps(themeProps, 'date');\n\n  const {\n    slots,\n    slotProps,\n    unstableStartFieldRef,\n    unstableEndFieldRef,\n    className\n  } = forwardedProps,\n        otherForwardedProps = _objectWithoutPropertiesLoose(forwardedProps, _excluded);\n\n  const ownerState = themeProps;\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots?.root ?? MultiInputDateRangeFieldRoot;\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps?.root,\n    externalForwardedProps: otherForwardedProps,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: clsx(className, classes.root)\n  });\n  const TextField = slots?.textField ?? (inProps.enableAccessibleFieldDOMStructure ? PickersTextField : MuiTextField);\n  const startTextFieldProps = useSlotProps({\n    elementType: TextField,\n    externalSlotProps: slotProps?.textField,\n    ownerState: _extends({}, ownerState, {\n      position: 'start'\n    })\n  });\n  const endTextFieldProps = useSlotProps({\n    elementType: TextField,\n    externalSlotProps: slotProps?.textField,\n    ownerState: _extends({}, ownerState, {\n      position: 'end'\n    })\n  });\n  const Separator = slots?.separator ?? MultiInputDateRangeFieldSeparator;\n  const separatorProps = useSlotProps({\n    elementType: Separator,\n    externalSlotProps: slotProps?.separator,\n    additionalProps: {\n      children: ` ${internalProps.dateSeparator ?? '–'} `\n    },\n    ownerState,\n    className: classes.separator\n  });\n  const fieldResponse = useMultiInputDateRangeField({\n    sharedProps: internalProps,\n    startTextFieldProps,\n    endTextFieldProps,\n    unstableStartFieldRef,\n    unstableEndFieldRef\n  });\n  const startDateProps = convertFieldResponseIntoMuiTextFieldProps(fieldResponse.startDate);\n  const endDateProps = convertFieldResponseIntoMuiTextFieldProps(fieldResponse.endDate);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(TextField, _extends({\n      fullWidth: true\n    }, startDateProps)), /*#__PURE__*/_jsx(Separator, _extends({}, separatorProps)), /*#__PURE__*/_jsx(TextField, _extends({\n      fullWidth: true\n    }, endDateProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MultiInputDateRangeField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n\n  /**\n   * String displayed between the start and the end dates.\n   * @default \"–\"\n   */\n  dateSeparator: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * @default false\n   */\n  enableAccessibleFieldDOMStructure: PropTypes.bool,\n\n  /**\n   * Format of the date when rendered in the input(s).\n   */\n  format: PropTypes.string,\n\n  /**\n   * Density of the format when rendered in the input.\n   * Setting `formatDensity` to `\"spacious\"` will add a space before and after each `/`, `-` and `.` character.\n   * @default \"dense\"\n   */\n  formatDensity: PropTypes.oneOf(['dense', 'spacious']),\n\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.object,\n\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.object,\n\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The new value.\n   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the error associated to the current value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TError} error The new error.\n   * @param {TValue} value The value associated to the error.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback fired when the selected sections change.\n   * @param {FieldSelectedSections} newValue The new selected sections.\n   */\n  onSelectedSectionsChange: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.\n   * For example, on time fields it will be used to determine the date to set.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.\n   */\n  referenceDate: PropTypes.object,\n\n  /**\n   * The currently selected sections.\n   * This prop accepts four formats:\n   * 1. If a number is provided, the section at this index will be selected.\n   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.\n   * 3. If `\"all\"` is provided, all the sections will be selected.\n   * 4. If `null` is provided, no section will be selected.\n   * If not provided, the selected sections will be handled internally.\n   */\n  selectedSections: PropTypes.oneOfType([PropTypes.oneOf(['all', 'day', 'empty', 'hours', 'meridiem', 'minutes', 'month', 'seconds', 'weekDay', 'year']), PropTypes.number]),\n\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)\n   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)\n   *\n   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: \"DD\"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.\n   *\n   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.\n   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\\u200e/g, '')`.\n   *\n   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.\n   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.\n   *\n   * @default false\n   */\n  shouldRespectLeadingZeros: PropTypes.bool,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  style: PropTypes.object,\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  unstableEndFieldRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  unstableStartFieldRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool,\n\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.object)\n} : void 0;\nexport { MultiInputDateRangeField };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","Stack","MuiTextField","Typography","styled","useThemeProps","useSlotProps","unstable_composeClasses","composeClasses","unstable_generateUtilityClass","generateUtilityClass","unstable_generateUtilityClasses","generateUtilityClasses","splitFieldInternalAndForwardedProps","convertFieldResponseIntoMuiTextFieldProps","PickersTextField","useMultiInputDateRangeField","jsx","_jsx","jsxs","_jsxs","multiInputDateRangeFieldClasses","getMultiInputDateRangeFieldUtilityClass","slot","useUtilityClasses","ownerState","classes","slots","root","separator","MultiInputDateRangeFieldRoot","forwardRef","props","ref","spacing","direction","alignItems","name","overridesResolver","styles","MultiInputDateRangeFieldSeparator","lineHeight","MultiInputDateRangeField","inProps","themeProps","internalProps","forwardedProps","slotProps","unstableStartFieldRef","unstableEndFieldRef","className","otherForwardedProps","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","TextField","textField","enableAccessibleFieldDOMStructure","startTextFieldProps","position","endTextFieldProps","Separator","separatorProps","children","dateSeparator","fieldResponse","sharedProps","startDateProps","startDate","endDateProps","endDate","fullWidth","process","env","NODE_ENV","propTypes","autoFocus","bool","object","string","component","defaultValue","arrayOf","oneOfType","oneOf","disabled","disableFuture","disablePast","divider","node","format","formatDensity","maxDate","minDate","onChange","func","onError","onSelectedSectionsChange","readOnly","referenceDate","selectedSections","number","shouldDisableDate","shouldRespectLeadingZeros","style","sx","timezone","useFlexGap","value"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-date-pickers-pro/MultiInputDateRangeField/MultiInputDateRangeField.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"unstableStartFieldRef\", \"unstableEndFieldRef\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Stack from '@mui/material/Stack';\nimport MuiTextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { useSlotProps } from '@mui/base/utils';\nimport { unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass, unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport { splitFieldInternalAndForwardedProps, convertFieldResponseIntoMuiTextFieldProps } from '@mui/x-date-pickers/internals';\nimport { PickersTextField } from '@mui/x-date-pickers/PickersTextField';\nimport { useMultiInputDateRangeField } from '../internals/hooks/useMultiInputRangeField/useMultiInputDateRangeField';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const multiInputDateRangeFieldClasses = generateUtilityClasses('MuiMultiInputDateRangeField', ['root', 'separator']);\nexport const getMultiInputDateRangeFieldUtilityClass = slot => generateUtilityClass('MuiMultiInputDateRangeField', slot);\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getMultiInputDateRangeFieldUtilityClass, classes);\n};\nconst MultiInputDateRangeFieldRoot = styled( /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Stack, _extends({\n  ref: ref,\n  spacing: 2,\n  direction: \"row\",\n  alignItems: \"center\"\n}, props))), {\n  name: 'MuiMultiInputDateRangeField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst MultiInputDateRangeFieldSeparator = styled(Typography, {\n  name: 'MuiMultiInputDateRangeField',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  lineHeight: '1.4375em' // 23px\n});\n/**\n * Demos:\n *\n * - [DateRangeField](http://mui.com/x/react-date-pickers/date-range-field/)\n * - [Fields](https://mui.com/x/react-date-pickers/fields/)\n *\n * API:\n *\n * - [MultiInputDateRangeField API](https://mui.com/x/api/multi-input-date-range-field/)\n */\nconst MultiInputDateRangeField = /*#__PURE__*/React.forwardRef(function MultiInputDateRangeField(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiMultiInputDateRangeField'\n  });\n  const {\n    internalProps,\n    forwardedProps\n  } = splitFieldInternalAndForwardedProps(themeProps, 'date');\n  const {\n      slots,\n      slotProps,\n      unstableStartFieldRef,\n      unstableEndFieldRef,\n      className\n    } = forwardedProps,\n    otherForwardedProps = _objectWithoutPropertiesLoose(forwardedProps, _excluded);\n  const ownerState = themeProps;\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots?.root ?? MultiInputDateRangeFieldRoot;\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps?.root,\n    externalForwardedProps: otherForwardedProps,\n    additionalProps: {\n      ref\n    },\n    ownerState,\n    className: clsx(className, classes.root)\n  });\n  const TextField = slots?.textField ?? (inProps.enableAccessibleFieldDOMStructure ? PickersTextField : MuiTextField);\n  const startTextFieldProps = useSlotProps({\n    elementType: TextField,\n    externalSlotProps: slotProps?.textField,\n    ownerState: _extends({}, ownerState, {\n      position: 'start'\n    })\n  });\n  const endTextFieldProps = useSlotProps({\n    elementType: TextField,\n    externalSlotProps: slotProps?.textField,\n    ownerState: _extends({}, ownerState, {\n      position: 'end'\n    })\n  });\n  const Separator = slots?.separator ?? MultiInputDateRangeFieldSeparator;\n  const separatorProps = useSlotProps({\n    elementType: Separator,\n    externalSlotProps: slotProps?.separator,\n    additionalProps: {\n      children: ` ${internalProps.dateSeparator ?? '–'} `\n    },\n    ownerState,\n    className: classes.separator\n  });\n  const fieldResponse = useMultiInputDateRangeField({\n    sharedProps: internalProps,\n    startTextFieldProps,\n    endTextFieldProps,\n    unstableStartFieldRef,\n    unstableEndFieldRef\n  });\n  const startDateProps = convertFieldResponseIntoMuiTextFieldProps(fieldResponse.startDate);\n  const endDateProps = convertFieldResponseIntoMuiTextFieldProps(fieldResponse.endDate);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    children: [/*#__PURE__*/_jsx(TextField, _extends({\n      fullWidth: true\n    }, startDateProps)), /*#__PURE__*/_jsx(Separator, _extends({}, separatorProps)), /*#__PURE__*/_jsx(TextField, _extends({\n      fullWidth: true\n    }, endDateProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MultiInputDateRangeField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  component: PropTypes.elementType,\n  /**\n   * String displayed between the start and the end dates.\n   * @default \"–\"\n   */\n  dateSeparator: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * @default false\n   */\n  enableAccessibleFieldDOMStructure: PropTypes.bool,\n  /**\n   * Format of the date when rendered in the input(s).\n   */\n  format: PropTypes.string,\n  /**\n   * Density of the format when rendered in the input.\n   * Setting `formatDensity` to `\"spacious\"` will add a space before and after each `/`, `-` and `.` character.\n   * @default \"dense\"\n   */\n  formatDensity: PropTypes.oneOf(['dense', 'spacious']),\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.object,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.object,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TValue} value The new value.\n   * @param {FieldChangeHandlerContext<TError>} context The context containing the validation result of the current value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the error associated to the current value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TError The validation error type. Will be either `string` or a `null`. Can be in `[start, end]` format in case of range value.\n   * @param {TError} error The new error.\n   * @param {TValue} value The value associated to the error.\n   */\n  onError: PropTypes.func,\n  /**\n   * Callback fired when the selected sections change.\n   * @param {FieldSelectedSections} newValue The new selected sections.\n   */\n  onSelectedSectionsChange: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * The date used to generate a part of the new value that is not present in the format when both `value` and `defaultValue` are empty.\n   * For example, on time fields it will be used to determine the date to set.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`. Value is rounded to the most granular section used.\n   */\n  referenceDate: PropTypes.object,\n  /**\n   * The currently selected sections.\n   * This prop accepts four formats:\n   * 1. If a number is provided, the section at this index will be selected.\n   * 2. If a string of type `FieldSectionType` is provided, the first section with that name will be selected.\n   * 3. If `\"all\"` is provided, all the sections will be selected.\n   * 4. If `null` is provided, no section will be selected.\n   * If not provided, the selected sections will be handled internally.\n   */\n  selectedSections: PropTypes.oneOfType([PropTypes.oneOf(['all', 'day', 'empty', 'hours', 'meridiem', 'minutes', 'month', 'seconds', 'weekDay', 'year']), PropTypes.number]),\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * If `true`, the format will respect the leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `8/16/2018`)\n   * If `false`, the format will always add leading zeroes (e.g: on dayjs, the format `M/D/YYYY` will render `08/16/2018`)\n   *\n   * Warning n°1: Luxon is not able to respect the leading zeroes when using macro tokens (e.g: \"DD\"), so `shouldRespectLeadingZeros={true}` might lead to inconsistencies when using `AdapterLuxon`.\n   *\n   * Warning n°2: When `shouldRespectLeadingZeros={true}`, the field will add an invisible character on the sections containing a single digit to make sure `onChange` is fired.\n   * If you need to get the clean value from the input, you can remove this character using `input.value.replace(/\\u200e/g, '')`.\n   *\n   * Warning n°3: When used in strict mode, dayjs and moment require to respect the leading zeros.\n   * This mean that when using `shouldRespectLeadingZeros={false}`, if you retrieve the value directly from the input (not listening to `onChange`) and your format contains tokens without leading zeros, the value will not be parsed by your library.\n   *\n   * @default false\n   */\n  shouldRespectLeadingZeros: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  style: PropTypes.object,\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  unstableEndFieldRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  unstableStartFieldRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.object)\n} : void 0;\nexport { MultiInputDateRangeField };"],"mappings":"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"},"metadata":{},"sourceType":"module"}