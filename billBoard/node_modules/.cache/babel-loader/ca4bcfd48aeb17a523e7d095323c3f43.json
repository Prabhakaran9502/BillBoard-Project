{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar _assertThisInitialized = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\n\nvar _inherits = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/inherits.js\").default;\n\nvar _createSuper = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n\nvar _defineProperty = require(\"C:/Users/kb/Downloads/billBoard/billBoard/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nexports.QuarterParser = void 0;\n\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nvar QuarterParser = /*#__PURE__*/function (_Parser$Parser) {\n  _inherits(QuarterParser, _Parser$Parser);\n\n  var _super = _createSuper(QuarterParser);\n\n  function QuarterParser() {\n    var _this;\n\n    _classCallCheck(this, QuarterParser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"priority\", 120);\n\n    _defineProperty(_assertThisInitialized(_this), \"incompatibleTokens\", [\"Y\", \"R\", \"q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"D\", \"i\", \"e\", \"c\", \"t\", \"T\"]);\n\n    return _this;\n  }\n\n  _createClass(QuarterParser, [{\n    key: \"parse\",\n    value: function parse(dateString, token, match) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case \"Q\":\n        case \"QQ\":\n          // 01, 02, 03, 04\n          return (0, _utils.parseNDigits)(token.length, dateString);\n        // 1st, 2nd, 3rd, 4th\n\n        case \"Qo\":\n          return match.ordinalNumber(dateString, {\n            unit: \"quarter\"\n          });\n        // Q1, Q2, Q3, Q4\n\n        case \"QQQ\":\n          return match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case \"QQQQQ\":\n          return match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case \"QQQQ\":\n        default:\n          return match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\"\n          }) || match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\"\n          });\n      }\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(_date, value) {\n      return value >= 1 && value <= 4;\n    }\n  }, {\n    key: \"set\",\n    value: function set(date, _flags, value) {\n      date.setMonth((value - 1) * 3, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n  }]);\n\n  return QuarterParser;\n}(_Parser.Parser);\n\nexports.QuarterParser = QuarterParser;","map":{"version":3,"names":["exports","QuarterParser","_Parser","require","_utils","dateString","token","match","parseNDigits","length","ordinalNumber","unit","quarter","width","context","_date","value","date","_flags","setMonth","setHours","Parser"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/date-fns/parse/_lib/parsers/QuarterParser.js"],"sourcesContent":["\"use strict\";\nexports.QuarterParser = void 0;\nvar _Parser = require(\"../Parser.js\");\n\nvar _utils = require(\"../utils.js\");\n\nclass QuarterParser extends _Parser.Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return (0, _utils.parseNDigits)(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\nexports.QuarterParser = QuarterParser;\n"],"mappings":"AAAA;;;;;;;;;;;;;;AACAA,OAAO,CAACC,aAAR,GAAwB,KAAK,CAA7B;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,aAAD,CAApB;;IAEMF,a;;;;;;;;;;;;;;;;+DACO,G;;yEA4DU,CACnB,GADmB,EAEnB,GAFmB,EAGnB,GAHmB,EAInB,GAJmB,EAKnB,GALmB,EAMnB,GANmB,EAOnB,GAPmB,EAQnB,GARmB,EASnB,GATmB,EAUnB,GAVmB,EAWnB,GAXmB,EAYnB,GAZmB,EAanB,GAbmB,EAcnB,GAdmB,C;;;;;;;WA1DrB,eAAMI,UAAN,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;MAC9B,QAAQD,KAAR;QACE;QACA,KAAK,GAAL;QACA,KAAK,IAAL;UAAW;UACT,OAAO,CAAC,GAAGF,MAAM,CAACI,YAAX,EAAyBF,KAAK,CAACG,MAA/B,EAAuCJ,UAAvC,CAAP;QACF;;QACA,KAAK,IAAL;UACE,OAAOE,KAAK,CAACG,aAAN,CAAoBL,UAApB,EAAgC;YAAEM,IAAI,EAAE;UAAR,CAAhC,CAAP;QACF;;QACA,KAAK,KAAL;UACE,OACEJ,KAAK,CAACK,OAAN,CAAcP,UAAd,EAA0B;YACxBQ,KAAK,EAAE,aADiB;YAExBC,OAAO,EAAE;UAFe,CAA1B,KAIAP,KAAK,CAACK,OAAN,CAAcP,UAAd,EAA0B;YACxBQ,KAAK,EAAE,QADiB;YAExBC,OAAO,EAAE;UAFe,CAA1B,CALF;QAWF;;QACA,KAAK,OAAL;UACE,OAAOP,KAAK,CAACK,OAAN,CAAcP,UAAd,EAA0B;YAC/BQ,KAAK,EAAE,QADwB;YAE/BC,OAAO,EAAE;UAFsB,CAA1B,CAAP;QAIF;;QACA,KAAK,MAAL;QACA;UACE,OACEP,KAAK,CAACK,OAAN,CAAcP,UAAd,EAA0B;YACxBQ,KAAK,EAAE,MADiB;YAExBC,OAAO,EAAE;UAFe,CAA1B,KAIAP,KAAK,CAACK,OAAN,CAAcP,UAAd,EAA0B;YACxBQ,KAAK,EAAE,aADiB;YAExBC,OAAO,EAAE;UAFe,CAA1B,CAJA,IAQAP,KAAK,CAACK,OAAN,CAAcP,UAAd,EAA0B;YACxBQ,KAAK,EAAE,QADiB;YAExBC,OAAO,EAAE;UAFe,CAA1B,CATF;MA9BJ;IA6CD;;;WAED,kBAASC,KAAT,EAAgBC,KAAhB,EAAuB;MACrB,OAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAA9B;IACD;;;WAED,aAAIC,IAAJ,EAAUC,MAAV,EAAkBF,KAAlB,EAAyB;MACvBC,IAAI,CAACE,QAAL,CAAc,CAACH,KAAK,GAAG,CAAT,IAAc,CAA5B,EAA+B,CAA/B;MACAC,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;MACA,OAAOH,IAAP;IACD;;;;EA3DyBf,OAAO,CAACmB,M;;AA8EpCrB,OAAO,CAACC,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}