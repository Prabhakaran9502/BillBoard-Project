{"ast":null,"code":"'use strict';\n\nvar callBound = require('call-bind/callBound');\n\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\n\nvar $TypeError = require('es-errors/type');\n\nmodule.exports = function regexTester(regex) {\n  if (!isRegex(regex)) {\n    throw new $TypeError('`regex` must be a RegExp');\n  }\n\n  return function test(s) {\n    return $exec(regex, s) !== null;\n  };\n};","map":{"version":3,"names":["callBound","require","isRegex","$exec","$TypeError","module","exports","regexTester","regex","test","s"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/safe-regex-test/index.js"],"sourcesContent":["'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = require('es-errors/type');\n\nmodule.exports = function regexTester(regex) {\n\tif (!isRegex(regex)) {\n\t\tthrow new $TypeError('`regex` must be a RegExp');\n\t}\n\treturn function test(s) {\n\t\treturn $exec(regex, s) !== null;\n\t};\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAvB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAIE,KAAK,GAAGH,SAAS,CAAC,uBAAD,CAArB;;AACA,IAAII,UAAU,GAAGH,OAAO,CAAC,gBAAD,CAAxB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAC5C,IAAI,CAACN,OAAO,CAACM,KAAD,CAAZ,EAAqB;IACpB,MAAM,IAAIJ,UAAJ,CAAe,0BAAf,CAAN;EACA;;EACD,OAAO,SAASK,IAAT,CAAcC,CAAd,EAAiB;IACvB,OAAOP,KAAK,CAACK,KAAD,EAAQE,CAAR,CAAL,KAAoB,IAA3B;EACA,CAFD;AAGA,CAPD"},"metadata":{},"sourceType":"script"}