{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"value\", \"defaultValue\", \"referenceDate\", \"onChange\", \"className\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"shouldDisableDate\", \"reduceAnimations\", \"onMonthChange\", \"rangePosition\", \"defaultRangePosition\", \"onRangePositionChange\", \"calendars\", \"currentMonthCalendarPosition\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"disableHighlightToday\", \"readOnly\", \"disabled\", \"showDaysOutsideCurrentMonth\", \"dayOfWeekFormatter\", \"disableAutoMonthSwitching\", \"autoFocus\", \"fixedWeekNumber\", \"disableDragEditing\", \"displayWeekNumber\", \"timezone\", \"availableRangePositions\", \"views\", \"view\", \"openTo\", \"onViewChange\"],\n      _excluded2 = [\"isDragging\", \"rangeDragDay\", \"draggingDatePosition\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { resolveComponentProps, useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport { Watermark } from '@mui/x-license';\nimport { applyDefaultDate, DayCalendar, useDefaultReduceAnimations, useCalendarState, useDefaultDates, useUtils, useNow, DEFAULT_DESKTOP_MODE_MEDIA_QUERY, buildWarning, useControlledValueWithTimezone, useViews } from '@mui/x-date-pickers/internals';\nimport { getReleaseInfo } from '../internals/utils/releaseInfo';\nimport { dateRangeCalendarClasses, getDateRangeCalendarUtilityClass } from './dateRangeCalendarClasses';\nimport { isEndOfRange, isRangeValid, isStartOfRange, isWithinRange } from '../internals/utils/date-utils';\nimport { calculateRangeChange, calculateRangePreview } from '../internals/utils/date-range-manager';\nimport { DateRangePickerDay, dateRangePickerDayClasses as dayClasses } from '../DateRangePickerDay';\nimport { rangeValueManager } from '../internals/utils/valueManagers';\nimport { useDragRange } from './useDragRange';\nimport { useRangePosition } from '../internals/hooks/useRangePosition';\nimport { DAY_RANGE_SIZE, DAY_MARGIN } from '../internals/constants/dimensions';\nimport { PickersRangeCalendarHeader } from '../PickersRangeCalendarHeader';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nconst DateRangeCalendarRoot = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangeCalendarMonthContainer = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Container',\n  overridesResolver: (_, styles) => styles.monthContainer\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n    }\n  };\n});\nconst weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nconst warnInvalidCurrentMonthCalendarPosition = buildWarning(['The `currentMonthCalendarPosition` prop must be an integer between `1` and the amount of calendars rendered.', 'For example if you have 2 calendars rendered, it should be equal to either 1 or 2.']);\nconst DayCalendarForRange = styled(DayCalendar)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    minWidth: 312,\n    minHeight: weeksContainerHeight,\n    [`&.${dateRangeCalendarClasses.dayDragging}`]: {\n      [`& .${dayClasses.day}`]: {\n        cursor: 'grabbing'\n      },\n      [`& .${dayClasses.root}:not(.${dayClasses.rangeIntervalDayHighlightStart}):not(.${dayClasses.rangeIntervalDayHighlightEnd}) .${dayClasses.day}:not(.${dayClasses.notSelectedDate})`]: {\n        // we can't override `PickersDay` background color here, because it's styles take precedence\n        opacity: 0.6\n      }\n    },\n    [`&:not(.${dateRangeCalendarClasses.dayDragging}) .${dayClasses.dayOutsideRangeInterval}`]: {\n      '@media (pointer: fine)': {\n        '&:hover': {\n          border: `1px solid ${(theme.vars || theme).palette.grey[500]}`\n        }\n      }\n    }\n  };\n});\n\nfunction useDateRangeCalendarDefaultizedProps(props, name) {\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({}, themeProps, {\n    renderLoading: themeProps.renderLoading ?? (() => /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    })),\n    reduceAnimations: themeProps.reduceAnimations ?? defaultReduceAnimations,\n    loading: props.loading ?? false,\n    disablePast: props.disablePast ?? false,\n    disableFuture: props.disableFuture ?? false,\n    openTo: themeProps.openTo ?? 'day',\n    views: themeProps.views ?? ['day'],\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    calendars: themeProps.calendars ?? 2,\n    disableDragEditing: themeProps.disableDragEditing ?? false,\n    availableRangePositions: themeProps.availableRangePositions ?? ['start', 'end']\n  });\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isDragging\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    monthContainer: ['monthContainer'],\n    dayCalendar: [isDragging && 'dayDragging']\n  };\n  return composeClasses(slots, getDateRangeCalendarUtilityClass, classes);\n};\n/**\n * Demos:\n *\n * - [DateRangePicker](https://mui.com/x/react-date-pickers/date-range-picker/)\n * - [DateRangeCalendar](https://mui.com/x/react-date-pickers/date-range-calendar/)\n *\n * API:\n *\n * - [DateRangeCalendar API](https://mui.com/x/api/date-pickers/date-range-calendar/)\n */\n\n\nconst DateRangeCalendar = /*#__PURE__*/React.forwardRef(function DateRangeCalendar(inProps, ref) {\n  const props = useDateRangeCalendarDefaultizedProps(inProps, 'MuiDateRangeCalendar');\n  const shouldHavePreview = useMediaQuery(DEFAULT_DESKTOP_MODE_MEDIA_QUERY, {\n    defaultMatches: false\n  });\n\n  const {\n    value: valueProp,\n    defaultValue,\n    referenceDate,\n    onChange,\n    className,\n    disableFuture,\n    disablePast,\n    minDate,\n    maxDate,\n    shouldDisableDate,\n    reduceAnimations,\n    onMonthChange,\n    rangePosition: rangePositionProp,\n    defaultRangePosition: inDefaultRangePosition,\n    onRangePositionChange: inOnRangePositionChange,\n    calendars,\n    currentMonthCalendarPosition = 1,\n    slots,\n    slotProps,\n    loading,\n    renderLoading,\n    disableHighlightToday,\n    readOnly,\n    disabled,\n    showDaysOutsideCurrentMonth,\n    dayOfWeekFormatter,\n    disableAutoMonthSwitching,\n    autoFocus,\n    fixedWeekNumber,\n    disableDragEditing,\n    displayWeekNumber,\n    timezone: timezoneProp,\n    availableRangePositions,\n    views,\n    view: inView,\n    openTo,\n    onViewChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DateRangeCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: rangeValueManager\n  });\n  const {\n    setValueAndGoToNextView,\n    view\n  } = useViews({\n    view: inView,\n    views,\n    openTo,\n    onChange: handleValueChange,\n    onViewChange,\n    autoFocus\n  });\n  const utils = useUtils();\n  const now = useNow(timezone);\n  const id = useId();\n  const {\n    rangePosition,\n    onRangePositionChange\n  } = useRangePosition({\n    rangePosition: rangePositionProp,\n    defaultRangePosition: inDefaultRangePosition,\n    onRangePositionChange: inOnRangePositionChange\n  });\n  const handleDatePositionChange = useEventCallback(position => {\n    if (rangePosition !== position) {\n      onRangePositionChange(position);\n    }\n  });\n  const handleSelectedDayChange = useEventCallback(function (newDate, selectionState) {\n    let allowRangeFlip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: value,\n      rangePosition,\n      allowRangeFlip,\n      shouldMergeDateAndTime: true\n    });\n    const isNextSectionAvailable = availableRangePositions.includes(nextSelection);\n\n    if (isNextSectionAvailable) {\n      onRangePositionChange(nextSelection);\n    }\n\n    const isFullRangeSelected = rangePosition === 'end' && isRangeValid(utils, newRange);\n    setValueAndGoToNextView(newRange, isFullRangeSelected || !isNextSectionAvailable ? 'finish' : 'partial', view);\n  });\n  const handleDrop = useEventCallback(newDate => {\n    handleSelectedDayChange(newDate, undefined, true);\n  });\n  const shouldDisableDragEditing = disableDragEditing || disabled || readOnly; // Range going for the start of the start day to the end of the end day.\n  // This makes sure that `isWithinRange` works with any time in the start and end day.\n\n  const valueDayRange = React.useMemo(() => [value[0] == null || !utils.isValid(value[0]) ? value[0] : utils.startOfDay(value[0]), value[1] == null || !utils.isValid(value[1]) ? value[1] : utils.endOfDay(value[1])], [value, utils]);\n\n  const _useDragRange = useDragRange({\n    disableDragEditing: shouldDisableDragEditing,\n    onDrop: handleDrop,\n    onDatePositionChange: handleDatePositionChange,\n    utils,\n    dateRange: valueDayRange,\n    timezone\n  }),\n        {\n    isDragging,\n    rangeDragDay,\n    draggingDatePosition\n  } = _useDragRange,\n        dragEventHandlers = _objectWithoutPropertiesLoose(_useDragRange, _excluded2);\n\n  const ownerState = _extends({}, props, {\n    isDragging\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const draggingRange = React.useMemo(() => {\n    if (!valueDayRange[0] || !valueDayRange[1] || !rangeDragDay) {\n      return [null, null];\n    }\n\n    const newRange = calculateRangeChange({\n      utils,\n      range: valueDayRange,\n      newDate: rangeDragDay,\n      rangePosition,\n      allowRangeFlip: true\n    }).newRange;\n    return newRange[0] !== null && newRange[1] !== null ? [utils.startOfDay(newRange[0]), utils.endOfDay(newRange[1])] : newRange;\n  }, [rangePosition, rangeDragDay, utils, valueDayRange]);\n  const wrappedShouldDisableDate = React.useMemo(() => {\n    if (!shouldDisableDate) {\n      return undefined;\n    }\n\n    return dayToTest => shouldDisableDate(dayToTest, draggingDatePosition || rangePosition);\n  }, [shouldDisableDate, rangePosition, draggingDatePosition]);\n  const {\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    handleChangeMonth,\n    onMonthSwitchingAnimationEnd\n  } = useCalendarState({\n    value: value[0] || value[1],\n    referenceDate,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate: wrappedShouldDisableDate,\n    timezone\n  });\n  const CalendarHeader = slots?.calendarHeader ?? PickersRangeCalendarHeader;\n  const calendarHeaderProps = useSlotProps({\n    elementType: CalendarHeader,\n    externalSlotProps: slotProps?.calendarHeader,\n    additionalProps: {\n      calendars,\n      views: ['day'],\n      view: 'day',\n      currentMonth: calendarState.currentMonth,\n      onMonthChange: (newMonth, direction) => handleChangeMonth({\n        newMonth,\n        direction\n      }),\n      minDate,\n      maxDate,\n      disabled,\n      disablePast,\n      disableFuture,\n      reduceAnimations,\n      timezone,\n      slots,\n      slotProps\n    },\n    ownerState: props\n  });\n  const prevValue = React.useRef(null);\n  React.useEffect(() => {\n    const date = rangePosition === 'start' ? value[0] : value[1];\n\n    if (!date || !utils.isValid(date)) {\n      return;\n    }\n\n    const prevDate = rangePosition === 'start' ? prevValue.current?.[0] : prevValue.current?.[1];\n    prevValue.current = value; // The current date did not change, this call comes either from a `rangePosition` change or a change in the other date.\n    // In both cases, we don't want to change the visible month(s).\n\n    if (disableAutoMonthSwitching && prevDate && utils.isEqual(prevDate, date)) {\n      return;\n    }\n\n    const displayingMonthRange = calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(date);\n\n    if (!utils.isSameYear(calendarState.currentMonth, date) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = rangePosition === 'start' ? date : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(date, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  }, [rangePosition, value]); // eslint-disable-line\n\n  const baseDateValidationProps = {\n    disablePast,\n    disableFuture,\n    maxDate,\n    minDate\n  };\n  const commonViewProps = {\n    disableHighlightToday,\n    readOnly,\n    disabled\n  };\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: valueDayRange,\n    newDate: rangePreviewDay,\n    rangePosition\n  });\n  const handleDayMouseEnter = useEventCallback((event, newPreviewRequest) => {\n    if (!isWithinRange(utils, newPreviewRequest, valueDayRange)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  });\n\n  const slotsForDayCalendar = _extends({\n    day: DateRangePickerDay\n  }, slots);\n\n  const slotPropsForDayCalendar = _extends({}, slotProps, {\n    day: dayOwnerState => {\n      const {\n        day\n      } = dayOwnerState;\n      const isSelectedStartDate = isStartOfRange(utils, day, valueDayRange);\n      const isSelectedEndDate = isEndOfRange(utils, day, valueDayRange);\n      const shouldInitDragging = !shouldDisableDragEditing && valueDayRange[0] && valueDayRange[1];\n      const isElementDraggable = shouldInitDragging && (isSelectedStartDate || isSelectedEndDate);\n      let datePosition;\n\n      if (isSelectedStartDate) {\n        datePosition = 'start';\n      } else if (isSelectedEndDate) {\n        datePosition = 'end';\n      }\n\n      const isStartOfHighlighting = isDragging ? isStartOfRange(utils, day, draggingRange) : isSelectedStartDate;\n      const isEndOfHighlighting = isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate;\n      return _extends({\n        isPreviewing: shouldHavePreview ? isWithinRange(utils, day, previewingRange) : false,\n        isStartOfPreviewing: shouldHavePreview ? isStartOfRange(utils, day, previewingRange) : false,\n        isEndOfPreviewing: shouldHavePreview ? isEndOfRange(utils, day, previewingRange) : false,\n        isHighlighting: isWithinRange(utils, day, isDragging ? draggingRange : valueDayRange),\n        isStartOfHighlighting,\n        isEndOfHighlighting: isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate,\n        onMouseEnter: shouldHavePreview ? handleDayMouseEnter : undefined,\n        // apply selected styling to the dragging start or end day\n        isVisuallySelected: dayOwnerState.selected || isDragging && (isStartOfHighlighting || isEndOfHighlighting),\n        'data-position': datePosition\n      }, dragEventHandlers, {\n        draggable: isElementDraggable ? true : undefined\n      }, resolveComponentProps(slotProps?.day, dayOwnerState) ?? {});\n    }\n  });\n\n  const calendarMonths = React.useMemo(() => Array.from({\n    length: calendars\n  }).map((_, index) => index), [calendars]);\n  const visibleMonths = React.useMemo(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (currentMonthCalendarPosition > calendars || currentMonthCalendarPosition < 1) {\n        warnInvalidCurrentMonthCalendarPosition();\n      }\n    }\n\n    const firstMonth = utils.addMonths(calendarState.currentMonth, 1 - currentMonthCalendarPosition);\n    return Array.from({\n      length: calendars\n    }).map((_, index) => utils.addMonths(firstMonth, index));\n  }, [utils, calendarState.currentMonth, calendars, currentMonthCalendarPosition]);\n  const focusedMonth = React.useMemo(() => {\n    if (!autoFocus) {\n      return null;\n    } // The focus priority of the \"day\" view is as follows:\n    // 1. Month of the `start` date\n    // 2. Month of the `end` date\n    // 3. Month of the current date\n    // 4. First visible month\n\n\n    if (value[0] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[0]));\n    }\n\n    if (value[1] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[1]));\n    }\n\n    return visibleMonths.find(month => utils.isSameMonth(month, now)) ?? visibleMonths[0];\n  }, [utils, value, visibleMonths, autoFocus, now]);\n  return /*#__PURE__*/_jsxs(DateRangeCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(Watermark, {\n      packageName: \"x-date-pickers-pro\",\n      releaseInfo: releaseInfo\n    }), calendarMonths.map(monthIndex => {\n      const month = visibleMonths[monthIndex];\n      const labelId = `${id}-grid-${monthIndex}-label`;\n      return /*#__PURE__*/_jsxs(DateRangeCalendarMonthContainer, {\n        className: classes.monthContainer,\n        children: [/*#__PURE__*/_jsx(CalendarHeader, _extends({}, calendarHeaderProps, {\n          month: month,\n          monthIndex: monthIndex,\n          labelId: labelId\n        })), /*#__PURE__*/_jsx(DayCalendarForRange, _extends({\n          className: classes.dayCalendar\n        }, calendarState, baseDateValidationProps, commonViewProps, {\n          onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n          onFocusedDayChange: changeFocusedDay,\n          reduceAnimations: reduceAnimations,\n          selectedDays: value,\n          onSelectedDaysChange: handleSelectedDayChange,\n          currentMonth: month,\n          TransitionProps: CalendarTransitionProps,\n          shouldDisableDate: wrappedShouldDisableDate,\n          showDaysOutsideCurrentMonth: calendars === 1 && showDaysOutsideCurrentMonth,\n          dayOfWeekFormatter: dayOfWeekFormatter,\n          loading: loading,\n          renderLoading: renderLoading,\n          slots: slotsForDayCalendar,\n          slotProps: slotPropsForDayCalendar,\n          autoFocus: month === focusedMonth,\n          fixedWeekNumber: fixedWeekNumber,\n          displayWeekNumber: displayWeekNumber,\n          timezone: timezone,\n          gridLabelId: labelId\n        }))]\n      }, monthIndex);\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangeCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Range positions available for selection.\n   * This list is checked against when checking if a next range position can be selected.\n   *\n   * Used on Date Time Range pickers with current `rangePosition` to force a `finish` selection after just one range position selection.\n   * @default ['start', 'end']\n   */\n  availableRangePositions: PropTypes.arrayOf(PropTypes.oneOf(['end', 'start']).isRequired),\n\n  /**\n   * The number of calendars to render.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n\n  /**\n   * Position the current month is rendered in.\n   * @default 1\n   */\n  currentMonthCalendarPosition: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n\n  /**\n   * The initial position in the edited date range.\n   * Used when the component is not controlled.\n   * @default 'start'\n   */\n  defaultRangePosition: PropTypes.oneOf(['end', 'start']),\n\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, editing dates by dragging is disabled.\n   * @default false\n   */\n  disableDragEditing: PropTypes.bool,\n\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n\n  /**\n   * The day view will show as many weeks as needed after the end of the current month to match this value.\n   * Put it to 6 to have a fixed number of weeks in Gregorian calendars\n   */\n  fixedWeekNumber: PropTypes.number,\n\n  /**\n   * Controlled focused view.\n   */\n  focusedView: PropTypes.oneOf(['day']),\n\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.object,\n\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.object,\n\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TView The view type. Will be one of date or time views.\n   * @param {TValue} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.\n   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired on focused view change.\n   * @template TView\n   * @param {TView} view The new view to focus or not.\n   * @param {boolean} hasFocus `true` if the view should be focused.\n   */\n  onFocusedViewChange: PropTypes.func,\n\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the range position changes.\n   * @param {RangePosition} rangePosition The new range position.\n   */\n  onRangePositionChange: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['day']),\n\n  /**\n   * The position in the currently edited date range.\n   * Used when the component position is controlled.\n   */\n  rangePosition: PropTypes.oneOf(['end', 'start']),\n\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.object,\n\n  /**\n   * Component rendered on the \"day\" view when `props.loading` is true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => \"...\"\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.object),\n\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['day']),\n\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day']))\n} : void 0;\nexport { DateRangeCalendar };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","clsx","useEventCallback","useMediaQuery","resolveComponentProps","useSlotProps","styled","useThemeProps","composeClasses","useId","Watermark","applyDefaultDate","DayCalendar","useDefaultReduceAnimations","useCalendarState","useDefaultDates","useUtils","useNow","DEFAULT_DESKTOP_MODE_MEDIA_QUERY","buildWarning","useControlledValueWithTimezone","useViews","getReleaseInfo","dateRangeCalendarClasses","getDateRangeCalendarUtilityClass","isEndOfRange","isRangeValid","isStartOfRange","isWithinRange","calculateRangeChange","calculateRangePreview","DateRangePickerDay","dateRangePickerDayClasses","dayClasses","rangeValueManager","useDragRange","useRangePosition","DAY_RANGE_SIZE","DAY_MARGIN","PickersRangeCalendarHeader","jsx","_jsx","jsxs","_jsxs","releaseInfo","DateRangeCalendarRoot","name","slot","overridesResolver","_","styles","root","display","flexDirection","DateRangeCalendarMonthContainer","monthContainer","theme","borderRight","vars","palette","divider","weeksContainerHeight","warnInvalidCurrentMonthCalendarPosition","DayCalendarForRange","minWidth","minHeight","dayDragging","day","cursor","rangeIntervalDayHighlightStart","rangeIntervalDayHighlightEnd","notSelectedDate","opacity","dayOutsideRangeInterval","border","grey","useDateRangeCalendarDefaultizedProps","props","utils","defaultDates","defaultReduceAnimations","themeProps","renderLoading","children","reduceAnimations","loading","disablePast","disableFuture","openTo","views","minDate","maxDate","calendars","disableDragEditing","availableRangePositions","useUtilityClasses","ownerState","classes","isDragging","slots","dayCalendar","DateRangeCalendar","forwardRef","inProps","ref","shouldHavePreview","defaultMatches","value","valueProp","defaultValue","referenceDate","onChange","className","shouldDisableDate","onMonthChange","rangePosition","rangePositionProp","defaultRangePosition","inDefaultRangePosition","onRangePositionChange","inOnRangePositionChange","currentMonthCalendarPosition","slotProps","disableHighlightToday","readOnly","disabled","showDaysOutsideCurrentMonth","dayOfWeekFormatter","disableAutoMonthSwitching","autoFocus","fixedWeekNumber","displayWeekNumber","timezone","timezoneProp","view","inView","onViewChange","other","handleValueChange","valueManager","setValueAndGoToNextView","now","id","handleDatePositionChange","position","handleSelectedDayChange","newDate","selectionState","allowRangeFlip","nextSelection","newRange","range","shouldMergeDateAndTime","isNextSectionAvailable","includes","isFullRangeSelected","handleDrop","undefined","shouldDisableDragEditing","valueDayRange","useMemo","isValid","startOfDay","endOfDay","_useDragRange","onDrop","onDatePositionChange","dateRange","rangeDragDay","draggingDatePosition","dragEventHandlers","draggingRange","wrappedShouldDisableDate","dayToTest","calendarState","changeFocusedDay","changeMonth","handleChangeMonth","onMonthSwitchingAnimationEnd","disableSwitchToMonthOnDayFocus","CalendarHeader","calendarHeader","calendarHeaderProps","elementType","externalSlotProps","additionalProps","currentMonth","newMonth","direction","prevValue","useRef","useEffect","date","prevDate","current","isEqual","displayingMonthRange","currentMonthNumber","getMonth","requestedMonthNumber","isSameYear","addMonths","baseDateValidationProps","commonViewProps","rangePreviewDay","setRangePreviewDay","useState","CalendarTransitionProps","onMouseLeave","previewingRange","handleDayMouseEnter","event","newPreviewRequest","slotsForDayCalendar","slotPropsForDayCalendar","dayOwnerState","isSelectedStartDate","isSelectedEndDate","shouldInitDragging","isElementDraggable","datePosition","isStartOfHighlighting","isEndOfHighlighting","isPreviewing","isStartOfPreviewing","isEndOfPreviewing","isHighlighting","onMouseEnter","isVisuallySelected","selected","draggable","calendarMonths","Array","from","length","map","index","visibleMonths","process","env","NODE_ENV","firstMonth","focusedMonth","find","month","isSameMonth","packageName","monthIndex","labelId","onFocusedDayChange","selectedDays","onSelectedDaysChange","TransitionProps","gridLabelId","propTypes","bool","arrayOf","oneOf","isRequired","object","string","func","number","focusedView","onFocusedViewChange","sx","oneOfType"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-date-pickers-pro/DateRangeCalendar/DateRangeCalendar.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"value\", \"defaultValue\", \"referenceDate\", \"onChange\", \"className\", \"disableFuture\", \"disablePast\", \"minDate\", \"maxDate\", \"shouldDisableDate\", \"reduceAnimations\", \"onMonthChange\", \"rangePosition\", \"defaultRangePosition\", \"onRangePositionChange\", \"calendars\", \"currentMonthCalendarPosition\", \"slots\", \"slotProps\", \"loading\", \"renderLoading\", \"disableHighlightToday\", \"readOnly\", \"disabled\", \"showDaysOutsideCurrentMonth\", \"dayOfWeekFormatter\", \"disableAutoMonthSwitching\", \"autoFocus\", \"fixedWeekNumber\", \"disableDragEditing\", \"displayWeekNumber\", \"timezone\", \"availableRangePositions\", \"views\", \"view\", \"openTo\", \"onViewChange\"],\n  _excluded2 = [\"isDragging\", \"rangeDragDay\", \"draggingDatePosition\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { resolveComponentProps, useSlotProps } from '@mui/base/utils';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport { Watermark } from '@mui/x-license';\nimport { applyDefaultDate, DayCalendar, useDefaultReduceAnimations, useCalendarState, useDefaultDates, useUtils, useNow, DEFAULT_DESKTOP_MODE_MEDIA_QUERY, buildWarning, useControlledValueWithTimezone, useViews } from '@mui/x-date-pickers/internals';\nimport { getReleaseInfo } from '../internals/utils/releaseInfo';\nimport { dateRangeCalendarClasses, getDateRangeCalendarUtilityClass } from './dateRangeCalendarClasses';\nimport { isEndOfRange, isRangeValid, isStartOfRange, isWithinRange } from '../internals/utils/date-utils';\nimport { calculateRangeChange, calculateRangePreview } from '../internals/utils/date-range-manager';\nimport { DateRangePickerDay, dateRangePickerDayClasses as dayClasses } from '../DateRangePickerDay';\nimport { rangeValueManager } from '../internals/utils/valueManagers';\nimport { useDragRange } from './useDragRange';\nimport { useRangePosition } from '../internals/hooks/useRangePosition';\nimport { DAY_RANGE_SIZE, DAY_MARGIN } from '../internals/constants/dimensions';\nimport { PickersRangeCalendarHeader } from '../PickersRangeCalendarHeader';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst releaseInfo = getReleaseInfo();\nconst DateRangeCalendarRoot = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Root',\n  overridesResolver: (_, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row'\n});\nconst DateRangeCalendarMonthContainer = styled('div', {\n  name: 'MuiDateRangeCalendar',\n  slot: 'Container',\n  overridesResolver: (_, styles) => styles.monthContainer\n})(({\n  theme\n}) => ({\n  '&:not(:last-of-type)': {\n    borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n  }\n}));\nconst weeksContainerHeight = (DAY_RANGE_SIZE + DAY_MARGIN * 2) * 6;\nconst warnInvalidCurrentMonthCalendarPosition = buildWarning(['The `currentMonthCalendarPosition` prop must be an integer between `1` and the amount of calendars rendered.', 'For example if you have 2 calendars rendered, it should be equal to either 1 or 2.']);\nconst DayCalendarForRange = styled(DayCalendar)(({\n  theme\n}) => ({\n  minWidth: 312,\n  minHeight: weeksContainerHeight,\n  [`&.${dateRangeCalendarClasses.dayDragging}`]: {\n    [`& .${dayClasses.day}`]: {\n      cursor: 'grabbing'\n    },\n    [`& .${dayClasses.root}:not(.${dayClasses.rangeIntervalDayHighlightStart}):not(.${dayClasses.rangeIntervalDayHighlightEnd}) .${dayClasses.day}:not(.${dayClasses.notSelectedDate})`]: {\n      // we can't override `PickersDay` background color here, because it's styles take precedence\n      opacity: 0.6\n    }\n  },\n  [`&:not(.${dateRangeCalendarClasses.dayDragging}) .${dayClasses.dayOutsideRangeInterval}`]: {\n    '@media (pointer: fine)': {\n      '&:hover': {\n        border: `1px solid ${(theme.vars || theme).palette.grey[500]}`\n      }\n    }\n  }\n}));\nfunction useDateRangeCalendarDefaultizedProps(props, name) {\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const defaultReduceAnimations = useDefaultReduceAnimations();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  return _extends({}, themeProps, {\n    renderLoading: themeProps.renderLoading ?? (() => /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    })),\n    reduceAnimations: themeProps.reduceAnimations ?? defaultReduceAnimations,\n    loading: props.loading ?? false,\n    disablePast: props.disablePast ?? false,\n    disableFuture: props.disableFuture ?? false,\n    openTo: themeProps.openTo ?? 'day',\n    views: themeProps.views ?? ['day'],\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    calendars: themeProps.calendars ?? 2,\n    disableDragEditing: themeProps.disableDragEditing ?? false,\n    availableRangePositions: themeProps.availableRangePositions ?? ['start', 'end']\n  });\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isDragging\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    monthContainer: ['monthContainer'],\n    dayCalendar: [isDragging && 'dayDragging']\n  };\n  return composeClasses(slots, getDateRangeCalendarUtilityClass, classes);\n};\n/**\n * Demos:\n *\n * - [DateRangePicker](https://mui.com/x/react-date-pickers/date-range-picker/)\n * - [DateRangeCalendar](https://mui.com/x/react-date-pickers/date-range-calendar/)\n *\n * API:\n *\n * - [DateRangeCalendar API](https://mui.com/x/api/date-pickers/date-range-calendar/)\n */\nconst DateRangeCalendar = /*#__PURE__*/React.forwardRef(function DateRangeCalendar(inProps, ref) {\n  const props = useDateRangeCalendarDefaultizedProps(inProps, 'MuiDateRangeCalendar');\n  const shouldHavePreview = useMediaQuery(DEFAULT_DESKTOP_MODE_MEDIA_QUERY, {\n    defaultMatches: false\n  });\n  const {\n      value: valueProp,\n      defaultValue,\n      referenceDate,\n      onChange,\n      className,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate,\n      shouldDisableDate,\n      reduceAnimations,\n      onMonthChange,\n      rangePosition: rangePositionProp,\n      defaultRangePosition: inDefaultRangePosition,\n      onRangePositionChange: inOnRangePositionChange,\n      calendars,\n      currentMonthCalendarPosition = 1,\n      slots,\n      slotProps,\n      loading,\n      renderLoading,\n      disableHighlightToday,\n      readOnly,\n      disabled,\n      showDaysOutsideCurrentMonth,\n      dayOfWeekFormatter,\n      disableAutoMonthSwitching,\n      autoFocus,\n      fixedWeekNumber,\n      disableDragEditing,\n      displayWeekNumber,\n      timezone: timezoneProp,\n      availableRangePositions,\n      views,\n      view: inView,\n      openTo,\n      onViewChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'DateRangeCalendar',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: rangeValueManager\n  });\n  const {\n    setValueAndGoToNextView,\n    view\n  } = useViews({\n    view: inView,\n    views,\n    openTo,\n    onChange: handleValueChange,\n    onViewChange,\n    autoFocus\n  });\n  const utils = useUtils();\n  const now = useNow(timezone);\n  const id = useId();\n  const {\n    rangePosition,\n    onRangePositionChange\n  } = useRangePosition({\n    rangePosition: rangePositionProp,\n    defaultRangePosition: inDefaultRangePosition,\n    onRangePositionChange: inOnRangePositionChange\n  });\n  const handleDatePositionChange = useEventCallback(position => {\n    if (rangePosition !== position) {\n      onRangePositionChange(position);\n    }\n  });\n  const handleSelectedDayChange = useEventCallback((newDate, selectionState, allowRangeFlip = false) => {\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: value,\n      rangePosition,\n      allowRangeFlip,\n      shouldMergeDateAndTime: true\n    });\n    const isNextSectionAvailable = availableRangePositions.includes(nextSelection);\n    if (isNextSectionAvailable) {\n      onRangePositionChange(nextSelection);\n    }\n    const isFullRangeSelected = rangePosition === 'end' && isRangeValid(utils, newRange);\n    setValueAndGoToNextView(newRange, isFullRangeSelected || !isNextSectionAvailable ? 'finish' : 'partial', view);\n  });\n  const handleDrop = useEventCallback(newDate => {\n    handleSelectedDayChange(newDate, undefined, true);\n  });\n  const shouldDisableDragEditing = disableDragEditing || disabled || readOnly;\n\n  // Range going for the start of the start day to the end of the end day.\n  // This makes sure that `isWithinRange` works with any time in the start and end day.\n  const valueDayRange = React.useMemo(() => [value[0] == null || !utils.isValid(value[0]) ? value[0] : utils.startOfDay(value[0]), value[1] == null || !utils.isValid(value[1]) ? value[1] : utils.endOfDay(value[1])], [value, utils]);\n  const _useDragRange = useDragRange({\n      disableDragEditing: shouldDisableDragEditing,\n      onDrop: handleDrop,\n      onDatePositionChange: handleDatePositionChange,\n      utils,\n      dateRange: valueDayRange,\n      timezone\n    }),\n    {\n      isDragging,\n      rangeDragDay,\n      draggingDatePosition\n    } = _useDragRange,\n    dragEventHandlers = _objectWithoutPropertiesLoose(_useDragRange, _excluded2);\n  const ownerState = _extends({}, props, {\n    isDragging\n  });\n  const classes = useUtilityClasses(ownerState);\n  const draggingRange = React.useMemo(() => {\n    if (!valueDayRange[0] || !valueDayRange[1] || !rangeDragDay) {\n      return [null, null];\n    }\n    const newRange = calculateRangeChange({\n      utils,\n      range: valueDayRange,\n      newDate: rangeDragDay,\n      rangePosition,\n      allowRangeFlip: true\n    }).newRange;\n    return newRange[0] !== null && newRange[1] !== null ? [utils.startOfDay(newRange[0]), utils.endOfDay(newRange[1])] : newRange;\n  }, [rangePosition, rangeDragDay, utils, valueDayRange]);\n  const wrappedShouldDisableDate = React.useMemo(() => {\n    if (!shouldDisableDate) {\n      return undefined;\n    }\n    return dayToTest => shouldDisableDate(dayToTest, draggingDatePosition || rangePosition);\n  }, [shouldDisableDate, rangePosition, draggingDatePosition]);\n  const {\n    calendarState,\n    changeFocusedDay,\n    changeMonth,\n    handleChangeMonth,\n    onMonthSwitchingAnimationEnd\n  } = useCalendarState({\n    value: value[0] || value[1],\n    referenceDate,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate: wrappedShouldDisableDate,\n    timezone\n  });\n  const CalendarHeader = slots?.calendarHeader ?? PickersRangeCalendarHeader;\n  const calendarHeaderProps = useSlotProps({\n    elementType: CalendarHeader,\n    externalSlotProps: slotProps?.calendarHeader,\n    additionalProps: {\n      calendars,\n      views: ['day'],\n      view: 'day',\n      currentMonth: calendarState.currentMonth,\n      onMonthChange: (newMonth, direction) => handleChangeMonth({\n        newMonth,\n        direction\n      }),\n      minDate,\n      maxDate,\n      disabled,\n      disablePast,\n      disableFuture,\n      reduceAnimations,\n      timezone,\n      slots,\n      slotProps\n    },\n    ownerState: props\n  });\n  const prevValue = React.useRef(null);\n  React.useEffect(() => {\n    const date = rangePosition === 'start' ? value[0] : value[1];\n    if (!date || !utils.isValid(date)) {\n      return;\n    }\n    const prevDate = rangePosition === 'start' ? prevValue.current?.[0] : prevValue.current?.[1];\n    prevValue.current = value;\n\n    // The current date did not change, this call comes either from a `rangePosition` change or a change in the other date.\n    // In both cases, we don't want to change the visible month(s).\n    if (disableAutoMonthSwitching && prevDate && utils.isEqual(prevDate, date)) {\n      return;\n    }\n    const displayingMonthRange = calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(date);\n    if (!utils.isSameYear(calendarState.currentMonth, date) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = rangePosition === 'start' ? date :\n      // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(date, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  }, [rangePosition, value]); // eslint-disable-line\n\n  const baseDateValidationProps = {\n    disablePast,\n    disableFuture,\n    maxDate,\n    minDate\n  };\n  const commonViewProps = {\n    disableHighlightToday,\n    readOnly,\n    disabled\n  };\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: valueDayRange,\n    newDate: rangePreviewDay,\n    rangePosition\n  });\n  const handleDayMouseEnter = useEventCallback((event, newPreviewRequest) => {\n    if (!isWithinRange(utils, newPreviewRequest, valueDayRange)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  });\n  const slotsForDayCalendar = _extends({\n    day: DateRangePickerDay\n  }, slots);\n  const slotPropsForDayCalendar = _extends({}, slotProps, {\n    day: dayOwnerState => {\n      const {\n        day\n      } = dayOwnerState;\n      const isSelectedStartDate = isStartOfRange(utils, day, valueDayRange);\n      const isSelectedEndDate = isEndOfRange(utils, day, valueDayRange);\n      const shouldInitDragging = !shouldDisableDragEditing && valueDayRange[0] && valueDayRange[1];\n      const isElementDraggable = shouldInitDragging && (isSelectedStartDate || isSelectedEndDate);\n      let datePosition;\n      if (isSelectedStartDate) {\n        datePosition = 'start';\n      } else if (isSelectedEndDate) {\n        datePosition = 'end';\n      }\n      const isStartOfHighlighting = isDragging ? isStartOfRange(utils, day, draggingRange) : isSelectedStartDate;\n      const isEndOfHighlighting = isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate;\n      return _extends({\n        isPreviewing: shouldHavePreview ? isWithinRange(utils, day, previewingRange) : false,\n        isStartOfPreviewing: shouldHavePreview ? isStartOfRange(utils, day, previewingRange) : false,\n        isEndOfPreviewing: shouldHavePreview ? isEndOfRange(utils, day, previewingRange) : false,\n        isHighlighting: isWithinRange(utils, day, isDragging ? draggingRange : valueDayRange),\n        isStartOfHighlighting,\n        isEndOfHighlighting: isDragging ? isEndOfRange(utils, day, draggingRange) : isSelectedEndDate,\n        onMouseEnter: shouldHavePreview ? handleDayMouseEnter : undefined,\n        // apply selected styling to the dragging start or end day\n        isVisuallySelected: dayOwnerState.selected || isDragging && (isStartOfHighlighting || isEndOfHighlighting),\n        'data-position': datePosition\n      }, dragEventHandlers, {\n        draggable: isElementDraggable ? true : undefined\n      }, resolveComponentProps(slotProps?.day, dayOwnerState) ?? {});\n    }\n  });\n  const calendarMonths = React.useMemo(() => Array.from({\n    length: calendars\n  }).map((_, index) => index), [calendars]);\n  const visibleMonths = React.useMemo(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (currentMonthCalendarPosition > calendars || currentMonthCalendarPosition < 1) {\n        warnInvalidCurrentMonthCalendarPosition();\n      }\n    }\n    const firstMonth = utils.addMonths(calendarState.currentMonth, 1 - currentMonthCalendarPosition);\n    return Array.from({\n      length: calendars\n    }).map((_, index) => utils.addMonths(firstMonth, index));\n  }, [utils, calendarState.currentMonth, calendars, currentMonthCalendarPosition]);\n  const focusedMonth = React.useMemo(() => {\n    if (!autoFocus) {\n      return null;\n    }\n\n    // The focus priority of the \"day\" view is as follows:\n    // 1. Month of the `start` date\n    // 2. Month of the `end` date\n    // 3. Month of the current date\n    // 4. First visible month\n\n    if (value[0] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[0]));\n    }\n    if (value[1] != null) {\n      return visibleMonths.find(month => utils.isSameMonth(month, value[1]));\n    }\n    return visibleMonths.find(month => utils.isSameMonth(month, now)) ?? visibleMonths[0];\n  }, [utils, value, visibleMonths, autoFocus, now]);\n  return /*#__PURE__*/_jsxs(DateRangeCalendarRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(Watermark, {\n      packageName: \"x-date-pickers-pro\",\n      releaseInfo: releaseInfo\n    }), calendarMonths.map(monthIndex => {\n      const month = visibleMonths[monthIndex];\n      const labelId = `${id}-grid-${monthIndex}-label`;\n      return /*#__PURE__*/_jsxs(DateRangeCalendarMonthContainer, {\n        className: classes.monthContainer,\n        children: [/*#__PURE__*/_jsx(CalendarHeader, _extends({}, calendarHeaderProps, {\n          month: month,\n          monthIndex: monthIndex,\n          labelId: labelId\n        })), /*#__PURE__*/_jsx(DayCalendarForRange, _extends({\n          className: classes.dayCalendar\n        }, calendarState, baseDateValidationProps, commonViewProps, {\n          onMonthSwitchingAnimationEnd: onMonthSwitchingAnimationEnd,\n          onFocusedDayChange: changeFocusedDay,\n          reduceAnimations: reduceAnimations,\n          selectedDays: value,\n          onSelectedDaysChange: handleSelectedDayChange,\n          currentMonth: month,\n          TransitionProps: CalendarTransitionProps,\n          shouldDisableDate: wrappedShouldDisableDate,\n          showDaysOutsideCurrentMonth: calendars === 1 && showDaysOutsideCurrentMonth,\n          dayOfWeekFormatter: dayOfWeekFormatter,\n          loading: loading,\n          renderLoading: renderLoading,\n          slots: slotsForDayCalendar,\n          slotProps: slotPropsForDayCalendar,\n          autoFocus: month === focusedMonth,\n          fixedWeekNumber: fixedWeekNumber,\n          displayWeekNumber: displayWeekNumber,\n          timezone: timezone,\n          gridLabelId: labelId\n        }))]\n      }, monthIndex);\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangeCalendar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the main element is focused during the first mount.\n   * This main element is:\n   * - the element chosen by the visible view if any (i.e: the selected day on the `day` view).\n   * - the `input` element if there is a field rendered.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Range positions available for selection.\n   * This list is checked against when checking if a next range position can be selected.\n   *\n   * Used on Date Time Range pickers with current `rangePosition` to force a `finish` selection after just one range position selection.\n   * @default ['start', 'end']\n   */\n  availableRangePositions: PropTypes.arrayOf(PropTypes.oneOf(['end', 'start']).isRequired),\n  /**\n   * The number of calendars to render.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Position the current month is rendered in.\n   * @default 1\n   */\n  currentMonthCalendarPosition: PropTypes.oneOf([1, 2, 3]),\n  /**\n   * Formats the day of week displayed in the calendar header.\n   * @param {TDate} date The date of the day of week provided by the adapter.\n   * @returns {string} The name to display.\n   * @default (date: TDate) => adapter.format(date, 'weekdayShort').charAt(0).toUpperCase()\n   */\n  dayOfWeekFormatter: PropTypes.func,\n  /**\n   * The initial position in the edited date range.\n   * Used when the component is not controlled.\n   * @default 'start'\n   */\n  defaultRangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * The default selected value.\n   * Used when the component is not controlled.\n   */\n  defaultValue: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n  /**\n   * If `true`, the picker and text field are disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, editing dates by dragging is disabled.\n   * @default false\n   */\n  disableDragEditing: PropTypes.bool,\n  /**\n   * If `true`, disable values after the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n  /**\n   * If `true`, today's date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n  /**\n   * If `true`, disable values before the current date for date components, time for time components and both for date time components.\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n  /**\n   * If `true`, the week number will be display in the calendar.\n   */\n  displayWeekNumber: PropTypes.bool,\n  /**\n   * The day view will show as many weeks as needed after the end of the current month to match this value.\n   * Put it to 6 to have a fixed number of weeks in Gregorian calendars\n   */\n  fixedWeekNumber: PropTypes.number,\n  /**\n   * Controlled focused view.\n   */\n  focusedView: PropTypes.oneOf(['day']),\n  /**\n   * If `true`, calls `renderLoading` instead of rendering the day calendar.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Maximal selectable date.\n   */\n  maxDate: PropTypes.object,\n  /**\n   * Minimal selectable date.\n   */\n  minDate: PropTypes.object,\n  /**\n   * Callback fired when the value changes.\n   * @template TValue The value type. Will be either the same type as `value` or `null`. Can be in `[start, end]` format in case of range value.\n   * @template TView The view type. Will be one of date or time views.\n   * @param {TValue} value The new value.\n   * @param {PickerSelectionState | undefined} selectionState Indicates if the date selection is complete.\n   * @param {TView | undefined} selectedView Indicates the view in which the selection has been made.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired on focused view change.\n   * @template TView\n   * @param {TView} view The new view to focus or not.\n   * @param {boolean} hasFocus `true` if the view should be focused.\n   */\n  onFocusedViewChange: PropTypes.func,\n  /**\n   * Callback fired on month change.\n   * @template TDate\n   * @param {TDate} month The new month.\n   */\n  onMonthChange: PropTypes.func,\n  /**\n   * Callback fired when the range position changes.\n   * @param {RangePosition} rangePosition The new range position.\n   */\n  onRangePositionChange: PropTypes.func,\n  /**\n   * Callback fired on view change.\n   * @template TView\n   * @param {TView} view The new view.\n   */\n  onViewChange: PropTypes.func,\n  /**\n   * The default visible view.\n   * Used when the component view is not controlled.\n   * Must be a valid option from `views` list.\n   */\n  openTo: PropTypes.oneOf(['day']),\n  /**\n   * The position in the currently edited date range.\n   * Used when the component position is controlled.\n   */\n  rangePosition: PropTypes.oneOf(['end', 'start']),\n  /**\n   * Make picker read only.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, disable heavy animations.\n   * @default `@media(prefers-reduced-motion: reduce)` || `navigator.userAgent` matches Android <10 or iOS <13\n   */\n  reduceAnimations: PropTypes.bool,\n  /**\n   * The date used to generate the new value when both `value` and `defaultValue` are empty.\n   * @default The closest valid date using the validation props, except callbacks such as `shouldDisableDate`.\n   */\n  referenceDate: PropTypes.object,\n  /**\n   * Component rendered on the \"day\" view when `props.loading` is true.\n   * @returns {React.ReactNode} The node to render when loading.\n   * @default () => \"...\"\n   */\n  renderLoading: PropTypes.func,\n  /**\n   * Disable specific date.\n   *\n   * Warning: This function can be called multiple times (for example when rendering date calendar, checking if focus can be moved to a certain date, etc.). Expensive computations can impact performance.\n   *\n   * @template TDate\n   * @param {TDate} day The date to test.\n   * @param {string} position The date to test, 'start' or 'end'.\n   * @returns {boolean} Returns `true` if the date should be disabled.\n   */\n  shouldDisableDate: PropTypes.func,\n  /**\n   * If `true`, days outside the current month are rendered:\n   *\n   * - if `fixedWeekNumber` is defined, renders days to have the weeks requested.\n   *\n   * - if `fixedWeekNumber` is not defined, renders day to fill the first and last week of the current month.\n   *\n   * - ignored if `calendars` equals more than `1` on range pickers.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Choose which timezone to use for the value.\n   * Example: \"default\", \"system\", \"UTC\", \"America/New_York\".\n   * If you pass values from other timezones to some props, they will be converted to this timezone before being used.\n   * @see See the {@link https://mui.com/x/react-date-pickers/timezone/ timezones documentation} for more details.\n   * @default The timezone of the `value` or `defaultValue` prop is defined, 'default' otherwise.\n   */\n  timezone: PropTypes.string,\n  /**\n   * The selected value.\n   * Used when the component is controlled.\n   */\n  value: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * The visible view.\n   * Used when the component view is controlled.\n   * Must be a valid option from `views` list.\n   */\n  view: PropTypes.oneOf(['day']),\n  /**\n   * Available views.\n   */\n  views: PropTypes.arrayOf(PropTypes.oneOf(['day']))\n} : void 0;\nexport { DateRangeCalendar };"],"mappings":"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"},"metadata":{},"sourceType":"module"}