{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\n\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\n\nexport const useGridLazyLoaderPreProcessors = (privateApiRef, props) => {\n  const addSkeletonRows = React.useCallback(groupingParams => {\n    const rootGroup = groupingParams.tree[GRID_ROOT_GROUP_ID];\n\n    if (props.rowsLoadingMode !== 'server' || !props.rowCount || rootGroup.children.length >= props.rowCount) {\n      return groupingParams;\n    }\n\n    const tree = _extends({}, groupingParams.tree);\n\n    const rootGroupChildren = [...rootGroup.children];\n\n    for (let i = 0; i < props.rowCount - rootGroup.children.length; i += 1) {\n      const skeletonId = getSkeletonRowId(i);\n      rootGroupChildren.push(skeletonId);\n      const skeletonRowNode = {\n        type: 'skeletonRow',\n        id: skeletonId,\n        parent: GRID_ROOT_GROUP_ID,\n        depth: 0\n      };\n      tree[skeletonId] = skeletonRowNode;\n    }\n\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n    return _extends({}, groupingParams, {\n      tree\n    });\n  }, [props.rowCount, props.rowsLoadingMode]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateRows', addSkeletonRows);\n};","map":{"version":3,"names":["_extends","React","useGridRegisterPipeProcessor","GRID_ROOT_GROUP_ID","GRID_SKELETON_ROW_ROOT_ID","getSkeletonRowId","index","useGridLazyLoaderPreProcessors","privateApiRef","props","addSkeletonRows","useCallback","groupingParams","rootGroup","tree","rowsLoadingMode","rowCount","children","length","rootGroupChildren","i","skeletonId","push","skeletonRowNode","type","id","parent","depth"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-pro/esm/hooks/features/lazyLoader/useGridLazyLoaderPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\nexport const useGridLazyLoaderPreProcessors = (privateApiRef, props) => {\n  const addSkeletonRows = React.useCallback(groupingParams => {\n    const rootGroup = groupingParams.tree[GRID_ROOT_GROUP_ID];\n    if (props.rowsLoadingMode !== 'server' || !props.rowCount || rootGroup.children.length >= props.rowCount) {\n      return groupingParams;\n    }\n    const tree = _extends({}, groupingParams.tree);\n    const rootGroupChildren = [...rootGroup.children];\n    for (let i = 0; i < props.rowCount - rootGroup.children.length; i += 1) {\n      const skeletonId = getSkeletonRowId(i);\n      rootGroupChildren.push(skeletonId);\n      const skeletonRowNode = {\n        type: 'skeletonRow',\n        id: skeletonId,\n        parent: GRID_ROOT_GROUP_ID,\n        depth: 0\n      };\n      tree[skeletonId] = skeletonRowNode;\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n    return _extends({}, groupingParams, {\n      tree\n    });\n  }, [props.rowCount, props.rowsLoadingMode]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateRows', addSkeletonRows);\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,4BAAT,QAA6C,4BAA7C;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAO,MAAMC,yBAAyB,GAAG,kCAAlC;;AACP,MAAMC,gBAAgB,GAAGC,KAAK,IAAK,GAAEF,yBAA0B,IAAGE,KAAM,EAAxE;;AACA,OAAO,MAAMC,8BAA8B,GAAG,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;EACtE,MAAMC,eAAe,GAAGT,KAAK,CAACU,WAAN,CAAkBC,cAAc,IAAI;IAC1D,MAAMC,SAAS,GAAGD,cAAc,CAACE,IAAf,CAAoBX,kBAApB,CAAlB;;IACA,IAAIM,KAAK,CAACM,eAAN,KAA0B,QAA1B,IAAsC,CAACN,KAAK,CAACO,QAA7C,IAAyDH,SAAS,CAACI,QAAV,CAAmBC,MAAnB,IAA6BT,KAAK,CAACO,QAAhG,EAA0G;MACxG,OAAOJ,cAAP;IACD;;IACD,MAAME,IAAI,GAAGd,QAAQ,CAAC,EAAD,EAAKY,cAAc,CAACE,IAApB,CAArB;;IACA,MAAMK,iBAAiB,GAAG,CAAC,GAAGN,SAAS,CAACI,QAAd,CAA1B;;IACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACO,QAAN,GAAiBH,SAAS,CAACI,QAAV,CAAmBC,MAAxD,EAAgEE,CAAC,IAAI,CAArE,EAAwE;MACtE,MAAMC,UAAU,GAAGhB,gBAAgB,CAACe,CAAD,CAAnC;MACAD,iBAAiB,CAACG,IAAlB,CAAuBD,UAAvB;MACA,MAAME,eAAe,GAAG;QACtBC,IAAI,EAAE,aADgB;QAEtBC,EAAE,EAAEJ,UAFkB;QAGtBK,MAAM,EAAEvB,kBAHc;QAItBwB,KAAK,EAAE;MAJe,CAAxB;MAMAb,IAAI,CAACO,UAAD,CAAJ,GAAmBE,eAAnB;IACD;;IACDT,IAAI,CAACX,kBAAD,CAAJ,GAA2BH,QAAQ,CAAC,EAAD,EAAKa,SAAL,EAAgB;MACjDI,QAAQ,EAAEE;IADuC,CAAhB,CAAnC;IAGA,OAAOnB,QAAQ,CAAC,EAAD,EAAKY,cAAL,EAAqB;MAClCE;IADkC,CAArB,CAAf;EAGD,CAxBuB,EAwBrB,CAACL,KAAK,CAACO,QAAP,EAAiBP,KAAK,CAACM,eAAvB,CAxBqB,CAAxB;EAyBAb,4BAA4B,CAACM,aAAD,EAAgB,aAAhB,EAA+BE,eAA/B,CAA5B;AACD,CA3BM"},"metadata":{},"sourceType":"module"}