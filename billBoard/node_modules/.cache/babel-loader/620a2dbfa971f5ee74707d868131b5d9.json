{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount = // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels || // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null || // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","map":{"version":3,"names":["_extends","React","useGridLogger","useGridSelector","useGridApiMethod","useGridRegisterPipeProcessor","gridPaginationMetaSelector","useGridPaginationMeta","apiRef","props","logger","paginationMeta","current","registerControlState","stateId","propModel","propOnChange","onPaginationMetaChange","stateSelector","changeEvent","setPaginationMeta","useCallback","newPaginationMeta","debug","setState","state","pagination","meta","paginationMetaApi","stateExportPreProcessing","prevState","context","exportedPaginationMeta","shouldExportRowCount","exportOnlyDirtyModels","initialState","stateRestorePreProcessing","params","restoredPaginationMeta","stateToRestore","useEffect"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}