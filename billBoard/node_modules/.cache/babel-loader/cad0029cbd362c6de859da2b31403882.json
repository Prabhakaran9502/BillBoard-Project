{"ast":null,"code":"import * as React from 'react';\nimport { useGridApiEventHandler, useGridSelector, gridSortModelSelector, gridFilterModelSelector, gridRenderContextSelector, useGridApiOptionHandler } from '@mui/x-data-grid';\nimport { getVisibleRows } from '@mui/x-data-grid/internals';\n\nfunction findSkeletonRowsSection(_ref) {\n  let {\n    apiRef,\n    visibleRows,\n    range\n  } = _ref;\n  let {\n    firstRowIndex,\n    lastRowIndex\n  } = range;\n  const visibleRowsSection = visibleRows.slice(range.firstRowIndex, range.lastRowIndex);\n  let startIndex = 0;\n  let endIndex = visibleRowsSection.length - 1;\n  let isSkeletonSectionFound = false;\n\n  while (!isSkeletonSectionFound && firstRowIndex < lastRowIndex) {\n    const isStartingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[startIndex].id)?.type === 'skeletonRow';\n    const isEndingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[endIndex].id)?.type === 'skeletonRow';\n\n    if (isStartingWithASkeletonRow && isEndingWithASkeletonRow) {\n      isSkeletonSectionFound = true;\n    }\n\n    if (!isStartingWithASkeletonRow) {\n      startIndex += 1;\n      firstRowIndex += 1;\n    }\n\n    if (!isEndingWithASkeletonRow) {\n      endIndex -= 1;\n      lastRowIndex -= 1;\n    }\n  }\n\n  return isSkeletonSectionFound ? {\n    firstRowIndex,\n    lastRowIndex\n  } : undefined;\n}\n/**\n * @requires useGridRows (state)\n * @requires useGridPagination (state)\n * @requires useGridDimensions (method) - can be after\n * @requires useGridScroll (method\n */\n\n\nexport const useGridLazyLoader = (privateApiRef, props) => {\n  const sortModel = useGridSelector(privateApiRef, gridSortModelSelector);\n  const filterModel = useGridSelector(privateApiRef, gridFilterModelSelector);\n  const renderedRowsIntervalCache = React.useRef({\n    firstRowToRender: 0,\n    lastRowToRender: 0\n  });\n  const isDisabled = props.rowsLoadingMode !== 'server';\n  const handleRenderedRowsIntervalChange = React.useCallback(params => {\n    if (isDisabled) {\n      return;\n    }\n\n    const fetchRowsParams = {\n      firstRowToRender: params.firstRowIndex,\n      lastRowToRender: params.lastRowIndex,\n      sortModel,\n      filterModel\n    };\n\n    if (renderedRowsIntervalCache.current.firstRowToRender === params.firstRowIndex && renderedRowsIntervalCache.current.lastRowToRender === params.lastRowIndex) {\n      return;\n    }\n\n    renderedRowsIntervalCache.current = {\n      firstRowToRender: params.firstRowIndex,\n      lastRowToRender: params.lastRowIndex\n    };\n\n    if (sortModel.length === 0 && filterModel.items.length === 0) {\n      const currentVisibleRows = getVisibleRows(privateApiRef, {\n        pagination: props.pagination,\n        paginationMode: props.paginationMode\n      });\n      const skeletonRowsSection = findSkeletonRowsSection({\n        apiRef: privateApiRef,\n        visibleRows: currentVisibleRows.rows,\n        range: {\n          firstRowIndex: params.firstRowIndex,\n          lastRowIndex: params.lastRowIndex\n        }\n      });\n\n      if (!skeletonRowsSection) {\n        return;\n      }\n\n      fetchRowsParams.firstRowToRender = skeletonRowsSection.firstRowIndex;\n      fetchRowsParams.lastRowToRender = skeletonRowsSection.lastRowIndex;\n    }\n\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, props.pagination, props.paginationMode, sortModel, filterModel]);\n  const handleGridSortModelChange = React.useCallback(newSortModel => {\n    if (isDisabled) {\n      return;\n    }\n\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\n    const renderContext = gridRenderContextSelector(privateApiRef);\n    const fetchRowsParams = {\n      firstRowToRender: renderContext.firstRowIndex,\n      lastRowToRender: renderContext.lastRowIndex,\n      sortModel: newSortModel,\n      filterModel\n    };\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, filterModel]);\n  const handleGridFilterModelChange = React.useCallback(newFilterModel => {\n    if (isDisabled) {\n      return;\n    }\n\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\n    const renderContext = gridRenderContextSelector(privateApiRef);\n    const fetchRowsParams = {\n      firstRowToRender: renderContext.firstRowIndex,\n      lastRowToRender: renderContext.lastRowIndex,\n      sortModel,\n      filterModel: newFilterModel\n    };\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, sortModel]);\n  useGridApiEventHandler(privateApiRef, 'renderedRowsIntervalChange', handleRenderedRowsIntervalChange);\n  useGridApiEventHandler(privateApiRef, 'sortModelChange', handleGridSortModelChange);\n  useGridApiEventHandler(privateApiRef, 'filterModelChange', handleGridFilterModelChange);\n  useGridApiOptionHandler(privateApiRef, 'fetchRows', props.onFetchRows);\n};","map":{"version":3,"names":["React","useGridApiEventHandler","useGridSelector","gridSortModelSelector","gridFilterModelSelector","gridRenderContextSelector","useGridApiOptionHandler","getVisibleRows","findSkeletonRowsSection","apiRef","visibleRows","range","firstRowIndex","lastRowIndex","visibleRowsSection","slice","startIndex","endIndex","length","isSkeletonSectionFound","isStartingWithASkeletonRow","current","getRowNode","id","type","isEndingWithASkeletonRow","undefined","useGridLazyLoader","privateApiRef","props","sortModel","filterModel","renderedRowsIntervalCache","useRef","firstRowToRender","lastRowToRender","isDisabled","rowsLoadingMode","handleRenderedRowsIntervalChange","useCallback","params","fetchRowsParams","items","currentVisibleRows","pagination","paginationMode","skeletonRowsSection","rows","publishEvent","handleGridSortModelChange","newSortModel","requestPipeProcessorsApplication","renderContext","handleGridFilterModelChange","newFilterModel","onFetchRows"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid-pro/esm/hooks/features/lazyLoader/useGridLazyLoader.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridApiEventHandler, useGridSelector, gridSortModelSelector, gridFilterModelSelector, gridRenderContextSelector, useGridApiOptionHandler } from '@mui/x-data-grid';\nimport { getVisibleRows } from '@mui/x-data-grid/internals';\nfunction findSkeletonRowsSection({\n  apiRef,\n  visibleRows,\n  range\n}) {\n  let {\n    firstRowIndex,\n    lastRowIndex\n  } = range;\n  const visibleRowsSection = visibleRows.slice(range.firstRowIndex, range.lastRowIndex);\n  let startIndex = 0;\n  let endIndex = visibleRowsSection.length - 1;\n  let isSkeletonSectionFound = false;\n  while (!isSkeletonSectionFound && firstRowIndex < lastRowIndex) {\n    const isStartingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[startIndex].id)?.type === 'skeletonRow';\n    const isEndingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[endIndex].id)?.type === 'skeletonRow';\n    if (isStartingWithASkeletonRow && isEndingWithASkeletonRow) {\n      isSkeletonSectionFound = true;\n    }\n    if (!isStartingWithASkeletonRow) {\n      startIndex += 1;\n      firstRowIndex += 1;\n    }\n    if (!isEndingWithASkeletonRow) {\n      endIndex -= 1;\n      lastRowIndex -= 1;\n    }\n  }\n  return isSkeletonSectionFound ? {\n    firstRowIndex,\n    lastRowIndex\n  } : undefined;\n}\n\n/**\n * @requires useGridRows (state)\n * @requires useGridPagination (state)\n * @requires useGridDimensions (method) - can be after\n * @requires useGridScroll (method\n */\nexport const useGridLazyLoader = (privateApiRef, props) => {\n  const sortModel = useGridSelector(privateApiRef, gridSortModelSelector);\n  const filterModel = useGridSelector(privateApiRef, gridFilterModelSelector);\n  const renderedRowsIntervalCache = React.useRef({\n    firstRowToRender: 0,\n    lastRowToRender: 0\n  });\n  const isDisabled = props.rowsLoadingMode !== 'server';\n  const handleRenderedRowsIntervalChange = React.useCallback(params => {\n    if (isDisabled) {\n      return;\n    }\n    const fetchRowsParams = {\n      firstRowToRender: params.firstRowIndex,\n      lastRowToRender: params.lastRowIndex,\n      sortModel,\n      filterModel\n    };\n    if (renderedRowsIntervalCache.current.firstRowToRender === params.firstRowIndex && renderedRowsIntervalCache.current.lastRowToRender === params.lastRowIndex) {\n      return;\n    }\n    renderedRowsIntervalCache.current = {\n      firstRowToRender: params.firstRowIndex,\n      lastRowToRender: params.lastRowIndex\n    };\n    if (sortModel.length === 0 && filterModel.items.length === 0) {\n      const currentVisibleRows = getVisibleRows(privateApiRef, {\n        pagination: props.pagination,\n        paginationMode: props.paginationMode\n      });\n      const skeletonRowsSection = findSkeletonRowsSection({\n        apiRef: privateApiRef,\n        visibleRows: currentVisibleRows.rows,\n        range: {\n          firstRowIndex: params.firstRowIndex,\n          lastRowIndex: params.lastRowIndex\n        }\n      });\n      if (!skeletonRowsSection) {\n        return;\n      }\n      fetchRowsParams.firstRowToRender = skeletonRowsSection.firstRowIndex;\n      fetchRowsParams.lastRowToRender = skeletonRowsSection.lastRowIndex;\n    }\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, props.pagination, props.paginationMode, sortModel, filterModel]);\n  const handleGridSortModelChange = React.useCallback(newSortModel => {\n    if (isDisabled) {\n      return;\n    }\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\n    const renderContext = gridRenderContextSelector(privateApiRef);\n    const fetchRowsParams = {\n      firstRowToRender: renderContext.firstRowIndex,\n      lastRowToRender: renderContext.lastRowIndex,\n      sortModel: newSortModel,\n      filterModel\n    };\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, filterModel]);\n  const handleGridFilterModelChange = React.useCallback(newFilterModel => {\n    if (isDisabled) {\n      return;\n    }\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\n    const renderContext = gridRenderContextSelector(privateApiRef);\n    const fetchRowsParams = {\n      firstRowToRender: renderContext.firstRowIndex,\n      lastRowToRender: renderContext.lastRowIndex,\n      sortModel,\n      filterModel: newFilterModel\n    };\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, sortModel]);\n  useGridApiEventHandler(privateApiRef, 'renderedRowsIntervalChange', handleRenderedRowsIntervalChange);\n  useGridApiEventHandler(privateApiRef, 'sortModelChange', handleGridSortModelChange);\n  useGridApiEventHandler(privateApiRef, 'filterModelChange', handleGridFilterModelChange);\n  useGridApiOptionHandler(privateApiRef, 'fetchRows', props.onFetchRows);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}