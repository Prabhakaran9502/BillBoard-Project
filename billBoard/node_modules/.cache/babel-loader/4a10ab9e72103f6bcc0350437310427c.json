{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop); // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n\n  const getFillers = function (params, children, leftOverflow) {\n    let borderTop = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n\n  const getCellOffsetStyle = _ref => {\n    let {\n      pinnedPosition,\n      columnIndex,\n      computedWidth\n    } = _ref;\n    let style;\n\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n\n    return style;\n  };\n\n  const getColumnHeaders = function (params) {\n    let other = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n\n    return getFillers(params, columns, 0);\n  };\n\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n\n  const getColumnGroupHeaders = _ref2 => {\n    let {\n      depth,\n      params\n    } = _ref2;\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(_ref3 => {\n      let {\n        groupId,\n        columnFields\n      } = _ref3;\n      return groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender);\n    });\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(_ref4 => {\n      let {\n        groupId,\n        columnFields\n      } = _ref4;\n      return groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender);\n    });\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map((_ref5, index) => {\n      let {\n        groupId,\n        columnFields\n      } = _ref5;\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n\n    const headerRows = [];\n\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n\n    return headerRows;\n  };\n\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","map":{"version":3,"names":["_extends","React","clsx","styled","useTheme","useGridSelector","useGridRootProps","useGridPrivateApiContext","useGridApiEventHandler","GridColumnHeaderItem","gridDimensionsSelector","gridRenderContextColumnsSelector","gridVirtualizationColumnEnabledSelector","computeOffsetLeft","GridColumnGroupHeader","GridPinnedColumnPosition","gridColumnPositionsSelector","gridVisiblePinnedColumnDefinitionsSelector","gridColumnGroupsUnwrappedModelSelector","GridScrollbarFillerCell","ScrollbarFiller","getPinnedCellOffset","GridColumnHeaderSeparatorSides","gridClasses","jsx","_jsx","jsxs","_jsxs","GridColumnHeaderRow","name","slot","overridesResolver","_","styles","columnHeaderRow","display","useGridColumnHeaders","props","visibleColumns","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","dragCol","setDragCol","useState","resizeCol","setResizeCol","apiRef","theme","rootProps","dimensions","hasVirtualization","columnGroupsModel","columnPositions","renderContext","pinnedColumns","offsetLeft","direction","left","length","gridHasFiller","columnsTotalWidth","viewportOuterSize","width","useEffect","current","columnHeadersContainerRef","scrollLeft","handleColumnResizeStart","useCallback","params","field","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","useMemo","firstColumnIndex","lastColumnIndex","rightRenderContext","right","getColumnsToRender","currentContext","maxLastColumn","firstColumnToRender","lastColumnToRender","renderedColumns","slice","getFillers","children","leftOverflow","borderTop","isPinnedRight","position","RIGHT","isNotPinned","undefined","hasScrollbarFiller","leftOffsetWidth","Fragment","role","style","className","filler","header","pinnedRight","getCellOffsetStyle","pinnedPosition","columnIndex","computedWidth","pinnedOffset","getColumnHeaders","other","columns","i","colDef","isFirstColumn","tabIndex","hasFocus","open","push","columnMenuOpen","filterItemsCounter","headerHeight","isDragging","colIndex","isResizing","isLast","indexInSection","sectionLength","getColumnHeadersRow","ownerState","LEFT","minFirstColumn","disableReorder","separatorSide","Left","getColumnGroupHeaders","depth","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","findIndex","groupId","columnFields","includes","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","map","groupStructure","filter","firstVisibleColumnIndex","indexOf","hiddenGroupColumns","reduce","acc","column","getColumn","index","headerInfo","fields","isLastColumn","maxDepth","height","getColumnGroupHeadersRows","headerRows","getInnerProps"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}