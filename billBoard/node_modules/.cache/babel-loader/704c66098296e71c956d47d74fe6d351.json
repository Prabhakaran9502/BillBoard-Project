{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnVisibilityModelSelector } from '@mui/x-data-grid-pro';\n\nconst updateColumnVisibilityModel = (columnVisibilityModel, rowGroupingModel, prevRowGroupingModel) => {\n  const newColumnVisibilityModel = _extends({}, columnVisibilityModel);\n\n  rowGroupingModel?.forEach(field => {\n    if (!prevRowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = false;\n    }\n  });\n  prevRowGroupingModel?.forEach(field => {\n    if (!rowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = true;\n    }\n  });\n  return newColumnVisibilityModel;\n};\n/**\n * Automatically hide columns when added to the row grouping model and stop hiding them when they are removed.\n * Handles both the `props.initialState.rowGrouping.model` and `props.rowGroupingModel`\n * Does not work when used with the `hide` property of `GridColDef`\n */\n\n\nexport const useKeepGroupedColumnsHidden = props => {\n  const initialProps = React.useRef(props);\n  const rowGroupingModel = React.useRef(props.rowGroupingModel ?? props.initialState?.rowGrouping?.model);\n  React.useEffect(() => {\n    props.apiRef.current.subscribeEvent('rowGroupingModelChange', newModel => {\n      const columnVisibilityModel = updateColumnVisibilityModel(gridColumnVisibilityModelSelector(props.apiRef), newModel, rowGroupingModel.current);\n      props.apiRef.current.setColumnVisibilityModel(columnVisibilityModel);\n      rowGroupingModel.current = newModel;\n    });\n  }, [props.apiRef]);\n  return React.useMemo(() => {\n    const invariantInitialState = initialProps.current.initialState;\n    const columnVisibilityModel = updateColumnVisibilityModel(invariantInitialState?.columns?.columnVisibilityModel, rowGroupingModel.current, undefined);\n    return _extends({}, invariantInitialState, {\n      columns: _extends({}, invariantInitialState?.columns, {\n        columnVisibilityModel\n      })\n    });\n  }, []);\n};","map":{"version":3,"names":["_extends","React","gridColumnVisibilityModelSelector","updateColumnVisibilityModel","columnVisibilityModel","rowGroupingModel","prevRowGroupingModel","newColumnVisibilityModel","forEach","field","includes","useKeepGroupedColumnsHidden","props","initialProps","useRef","initialState","rowGrouping","model","useEffect","apiRef","current","subscribeEvent","newModel","setColumnVisibilityModel","useMemo","invariantInitialState","columns","undefined"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-premium/esm/hooks/utils/useKeepGroupedColumnsHidden.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnVisibilityModelSelector } from '@mui/x-data-grid-pro';\nconst updateColumnVisibilityModel = (columnVisibilityModel, rowGroupingModel, prevRowGroupingModel) => {\n  const newColumnVisibilityModel = _extends({}, columnVisibilityModel);\n  rowGroupingModel?.forEach(field => {\n    if (!prevRowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = false;\n    }\n  });\n  prevRowGroupingModel?.forEach(field => {\n    if (!rowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = true;\n    }\n  });\n  return newColumnVisibilityModel;\n};\n\n/**\n * Automatically hide columns when added to the row grouping model and stop hiding them when they are removed.\n * Handles both the `props.initialState.rowGrouping.model` and `props.rowGroupingModel`\n * Does not work when used with the `hide` property of `GridColDef`\n */\nexport const useKeepGroupedColumnsHidden = props => {\n  const initialProps = React.useRef(props);\n  const rowGroupingModel = React.useRef(props.rowGroupingModel ?? props.initialState?.rowGrouping?.model);\n  React.useEffect(() => {\n    props.apiRef.current.subscribeEvent('rowGroupingModelChange', newModel => {\n      const columnVisibilityModel = updateColumnVisibilityModel(gridColumnVisibilityModelSelector(props.apiRef), newModel, rowGroupingModel.current);\n      props.apiRef.current.setColumnVisibilityModel(columnVisibilityModel);\n      rowGroupingModel.current = newModel;\n    });\n  }, [props.apiRef]);\n  return React.useMemo(() => {\n    const invariantInitialState = initialProps.current.initialState;\n    const columnVisibilityModel = updateColumnVisibilityModel(invariantInitialState?.columns?.columnVisibilityModel, rowGroupingModel.current, undefined);\n    return _extends({}, invariantInitialState, {\n      columns: _extends({}, invariantInitialState?.columns, {\n        columnVisibilityModel\n      })\n    });\n  }, []);\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,iCAAT,QAAkD,sBAAlD;;AACA,MAAMC,2BAA2B,GAAG,CAACC,qBAAD,EAAwBC,gBAAxB,EAA0CC,oBAA1C,KAAmE;EACrG,MAAMC,wBAAwB,GAAGP,QAAQ,CAAC,EAAD,EAAKI,qBAAL,CAAzC;;EACAC,gBAAgB,EAAEG,OAAlB,CAA0BC,KAAK,IAAI;IACjC,IAAI,CAACH,oBAAoB,EAAEI,QAAtB,CAA+BD,KAA/B,CAAL,EAA4C;MAC1CF,wBAAwB,CAACE,KAAD,CAAxB,GAAkC,KAAlC;IACD;EACF,CAJD;EAKAH,oBAAoB,EAAEE,OAAtB,CAA8BC,KAAK,IAAI;IACrC,IAAI,CAACJ,gBAAgB,EAAEK,QAAlB,CAA2BD,KAA3B,CAAL,EAAwC;MACtCF,wBAAwB,CAACE,KAAD,CAAxB,GAAkC,IAAlC;IACD;EACF,CAJD;EAKA,OAAOF,wBAAP;AACD,CAbD;AAeA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMI,2BAA2B,GAAGC,KAAK,IAAI;EAClD,MAAMC,YAAY,GAAGZ,KAAK,CAACa,MAAN,CAAaF,KAAb,CAArB;EACA,MAAMP,gBAAgB,GAAGJ,KAAK,CAACa,MAAN,CAAaF,KAAK,CAACP,gBAAN,IAA0BO,KAAK,CAACG,YAAN,EAAoBC,WAApB,EAAiCC,KAAxE,CAAzB;EACAhB,KAAK,CAACiB,SAAN,CAAgB,MAAM;IACpBN,KAAK,CAACO,MAAN,CAAaC,OAAb,CAAqBC,cAArB,CAAoC,wBAApC,EAA8DC,QAAQ,IAAI;MACxE,MAAMlB,qBAAqB,GAAGD,2BAA2B,CAACD,iCAAiC,CAACU,KAAK,CAACO,MAAP,CAAlC,EAAkDG,QAAlD,EAA4DjB,gBAAgB,CAACe,OAA7E,CAAzD;MACAR,KAAK,CAACO,MAAN,CAAaC,OAAb,CAAqBG,wBAArB,CAA8CnB,qBAA9C;MACAC,gBAAgB,CAACe,OAAjB,GAA2BE,QAA3B;IACD,CAJD;EAKD,CAND,EAMG,CAACV,KAAK,CAACO,MAAP,CANH;EAOA,OAAOlB,KAAK,CAACuB,OAAN,CAAc,MAAM;IACzB,MAAMC,qBAAqB,GAAGZ,YAAY,CAACO,OAAb,CAAqBL,YAAnD;IACA,MAAMX,qBAAqB,GAAGD,2BAA2B,CAACsB,qBAAqB,EAAEC,OAAvB,EAAgCtB,qBAAjC,EAAwDC,gBAAgB,CAACe,OAAzE,EAAkFO,SAAlF,CAAzD;IACA,OAAO3B,QAAQ,CAAC,EAAD,EAAKyB,qBAAL,EAA4B;MACzCC,OAAO,EAAE1B,QAAQ,CAAC,EAAD,EAAKyB,qBAAqB,EAAEC,OAA5B,EAAqC;QACpDtB;MADoD,CAArC;IADwB,CAA5B,CAAf;EAKD,CARM,EAQJ,EARI,CAAP;AASD,CAnBM"},"metadata":{},"sourceType":"module"}