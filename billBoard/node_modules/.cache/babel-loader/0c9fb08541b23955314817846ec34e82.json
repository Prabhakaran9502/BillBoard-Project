{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\")); // https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\n\n\nfunction isPlainObject(item) {\n  if (typeof item !== 'object' || item === null) {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(item);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n}\n\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\n\nfunction deepmerge(target, source) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    clone: true\n  };\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isPlainObject(source[key]) && // Avoid prototype pollution\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","deepmerge","isPlainObject","_extends2","item","prototype","getPrototypeOf","Symbol","toStringTag","iterator","deepClone","source","output","keys","forEach","key","target","options","clone","hasOwnProperty","call"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/utils/deepmerge/deepmerge.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\nfunction isPlainObject(item) {\n  if (typeof item !== 'object' || item === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(item);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in item) && !(Symbol.iterator in item);\n}\nfunction deepClone(source) {\n  if (!isPlainObject(source)) {\n    return source;\n  }\n  const output = {};\n  Object.keys(source).forEach(key => {\n    output[key] = deepClone(source[key]);\n  });\n  return output;\n}\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isPlainObject(source[key]) &&\n      // Avoid prototype pollution\n      Object.prototype.hasOwnProperty.call(target, key) && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else if (options.clone) {\n        output[key] = isPlainObject(source[key]) ? deepClone(source[key]) : source[key];\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n  return output;\n}"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AACAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;AACAH,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AACA,IAAIC,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC,C,CACA;;;AACA,SAASO,aAAT,CAAuBE,IAAvB,EAA6B;EAC3B,IAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;IAC7C,OAAO,KAAP;EACD;;EACD,MAAMC,SAAS,GAAGT,MAAM,CAACU,cAAP,CAAsBF,IAAtB,CAAlB;EACA,OAAO,CAACC,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKT,MAAM,CAACS,SAA3C,IAAwDT,MAAM,CAACU,cAAP,CAAsBD,SAAtB,MAAqC,IAA9F,KAAuG,EAAEE,MAAM,CAACC,WAAP,IAAsBJ,IAAxB,CAAvG,IAAwI,EAAEG,MAAM,CAACE,QAAP,IAAmBL,IAArB,CAA/I;AACD;;AACD,SAASM,SAAT,CAAmBC,MAAnB,EAA2B;EACzB,IAAI,CAACT,aAAa,CAACS,MAAD,CAAlB,EAA4B;IAC1B,OAAOA,MAAP;EACD;;EACD,MAAMC,MAAM,GAAG,EAAf;EACAhB,MAAM,CAACiB,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4BC,GAAG,IAAI;IACjCH,MAAM,CAACG,GAAD,CAAN,GAAcL,SAAS,CAACC,MAAM,CAACI,GAAD,CAAP,CAAvB;EACD,CAFD;EAGA,OAAOH,MAAP;AACD;;AACD,SAASX,SAAT,CAAmBe,MAAnB,EAA2BL,MAA3B,EAEG;EAAA,IAFgCM,OAEhC,uEAF0C;IAC3CC,KAAK,EAAE;EADoC,CAE1C;EACD,MAAMN,MAAM,GAAGK,OAAO,CAACC,KAAR,GAAgB,CAAC,GAAGf,SAAS,CAACH,OAAd,EAAuB,EAAvB,EAA2BgB,MAA3B,CAAhB,GAAqDA,MAApE;;EACA,IAAId,aAAa,CAACc,MAAD,CAAb,IAAyBd,aAAa,CAACS,MAAD,CAA1C,EAAoD;IAClDf,MAAM,CAACiB,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA4BC,GAAG,IAAI;MACjC,IAAIb,aAAa,CAACS,MAAM,CAACI,GAAD,CAAP,CAAb,IACJ;MACAnB,MAAM,CAACS,SAAP,CAAiBc,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CD,GAA7C,CAFI,IAEiDb,aAAa,CAACc,MAAM,CAACD,GAAD,CAAP,CAFlE,EAEiF;QAC/E;QACAH,MAAM,CAACG,GAAD,CAAN,GAAcd,SAAS,CAACe,MAAM,CAACD,GAAD,CAAP,EAAcJ,MAAM,CAACI,GAAD,CAApB,EAA2BE,OAA3B,CAAvB;MACD,CALD,MAKO,IAAIA,OAAO,CAACC,KAAZ,EAAmB;QACxBN,MAAM,CAACG,GAAD,CAAN,GAAcb,aAAa,CAACS,MAAM,CAACI,GAAD,CAAP,CAAb,GAA6BL,SAAS,CAACC,MAAM,CAACI,GAAD,CAAP,CAAtC,GAAsDJ,MAAM,CAACI,GAAD,CAA1E;MACD,CAFM,MAEA;QACLH,MAAM,CAACG,GAAD,CAAN,GAAcJ,MAAM,CAACI,GAAD,CAApB;MACD;IACF,CAXD;EAYD;;EACD,OAAOH,MAAP;AACD"},"metadata":{},"sourceType":"script"}