{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","map":{"version":3,"names":["_extends","throwIfPageSizeExceedsTheLimit","getDefaultGridPaginationModel","useGridPaginationModel","useGridRowCount","useGridPaginationMeta","paginationStateInitializer","state","props","paginationModel","autoPageSize","initialState","pagination","pageSize","signature","rowCount","meta","paginationMeta","useGridPagination","apiRef"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,8BAAT,EAAyCC,6BAAzC,QAA8E,uBAA9E;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,OAAO,MAAMC,0BAA0B,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;EAC1D,MAAMC,eAAe,GAAGT,QAAQ,CAAC,EAAD,EAAKE,6BAA6B,CAACM,KAAK,CAACE,YAAP,CAAlC,EAAwDF,KAAK,CAACC,eAAN,IAAyBD,KAAK,CAACG,YAAN,EAAoBC,UAApB,EAAgCH,eAAjH,CAAhC;;EACAR,8BAA8B,CAACQ,eAAe,CAACI,QAAjB,EAA2BL,KAAK,CAACM,SAAjC,CAA9B;EACA,MAAMC,QAAQ,GAAGP,KAAK,CAACO,QAAN,IAAkBP,KAAK,CAACG,YAAN,EAAoBC,UAApB,EAAgCG,QAAnE;EACA,MAAMC,IAAI,GAAGR,KAAK,CAACS,cAAN,IAAwBT,KAAK,CAACG,YAAN,EAAoBC,UAApB,EAAgCI,IAAxD,IAAgE,EAA7E;EACA,OAAOhB,QAAQ,CAAC,EAAD,EAAKO,KAAL,EAAY;IACzBK,UAAU,EAAE;MACVH,eADU;MAEVM,QAFU;MAGVC;IAHU;EADa,CAAZ,CAAf;AAOD,CAZM;AAcP;AACA;AACA;AACA;;AACA,OAAO,MAAME,iBAAiB,GAAG,CAACC,MAAD,EAASX,KAAT,KAAmB;EAClDH,qBAAqB,CAACc,MAAD,EAASX,KAAT,CAArB;EACAL,sBAAsB,CAACgB,MAAD,EAASX,KAAT,CAAtB;EACAJ,eAAe,CAACe,MAAD,EAASX,KAAT,CAAf;AACD,CAJM"},"metadata":{},"sourceType":"module"}