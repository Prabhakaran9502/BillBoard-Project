{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\n\nvar $TypeError = require('es-errors/type'); // https://262.ecma-international.org/6.0/#sec-tostring\n\n\nmodule.exports = function ToString(argument) {\n  if (typeof argument === 'symbol') {\n    throw new $TypeError('Cannot convert a Symbol value to a string');\n  }\n\n  return $String(argument);\n};","map":{"version":3,"names":["GetIntrinsic","require","$String","$TypeError","module","exports","ToString","argument"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-abstract/2024/ToString.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = require('es-errors/type');\n\n// https://262.ecma-international.org/6.0/#sec-tostring\n\nmodule.exports = function ToString(argument) {\n\tif (typeof argument === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t}\n\treturn $String(argument);\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAD,CAA1B;;AACA,IAAIG,UAAU,GAAGF,OAAO,CAAC,gBAAD,CAAxB,C,CAEA;;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;EAC5C,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;IACjC,MAAM,IAAIJ,UAAJ,CAAe,2CAAf,CAAN;EACA;;EACD,OAAOD,OAAO,CAACK,QAAD,CAAd;AACA,CALD"},"metadata":{},"sourceType":"script"}