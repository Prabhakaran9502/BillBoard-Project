{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar SameValue = require('./SameValue');\n\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/6.0/#sec-definepropertyorthrow\n\n\nmodule.exports = function DefinePropertyOrThrow(O, P, desc) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n  }\n\n  var Desc = isPropertyDescriptor(desc) ? desc : ToPropertyDescriptor(desc);\n\n  if (!isPropertyDescriptor(Desc)) {\n    throw new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n  }\n\n  return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n};","map":{"version":3,"names":["$TypeError","require","isPropertyDescriptor","DefineOwnProperty","FromPropertyDescriptor","IsDataDescriptor","IsPropertyKey","SameValue","ToPropertyDescriptor","Type","module","exports","DefinePropertyOrThrow","O","P","desc","Desc"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-abstract/2021/DefinePropertyOrThrow.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-definepropertyorthrow\n\nmodule.exports = function DefinePropertyOrThrow(O, P, desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t}\n\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\tvar Desc = isPropertyDescriptor(desc) ? desc : ToPropertyDescriptor(desc);\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc is not a valid Property Descriptor');\n\t}\n\n\treturn DefineOwnProperty(\n\t\tIsDataDescriptor,\n\t\tSameValue,\n\t\tFromPropertyDescriptor,\n\t\tO,\n\t\tP,\n\t\tDesc\n\t);\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,wCAAD,CAAlC;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,8BAAD,CAA/B;;AAEA,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,0BAAD,CAApC;;AACA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,oBAAD,CAA9B;;AACA,IAAIK,aAAa,GAAGL,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIM,SAAS,GAAGN,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIO,oBAAoB,GAAGP,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIQ,IAAI,GAAGR,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAS,MAAM,CAACC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,CAA/B,EAAkCC,CAAlC,EAAqCC,IAArC,EAA2C;EAC3D,IAAIN,IAAI,CAACI,CAAD,CAAJ,KAAY,QAAhB,EAA0B;IACzB,MAAM,IAAIb,UAAJ,CAAe,yCAAf,CAAN;EACA;;EAED,IAAI,CAACM,aAAa,CAACQ,CAAD,CAAlB,EAAuB;IACtB,MAAM,IAAId,UAAJ,CAAe,gDAAf,CAAN;EACA;;EAED,IAAIgB,IAAI,GAAGd,oBAAoB,CAACa,IAAD,CAApB,GAA6BA,IAA7B,GAAoCP,oBAAoB,CAACO,IAAD,CAAnE;;EACA,IAAI,CAACb,oBAAoB,CAACc,IAAD,CAAzB,EAAiC;IAChC,MAAM,IAAIhB,UAAJ,CAAe,2DAAf,CAAN;EACA;;EAED,OAAOG,iBAAiB,CACvBE,gBADuB,EAEvBE,SAFuB,EAGvBH,sBAHuB,EAIvBS,CAJuB,EAKvBC,CALuB,EAMvBE,IANuB,CAAxB;AAQA,CAtBD"},"metadata":{},"sourceType":"script"}