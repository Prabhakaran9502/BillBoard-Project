{"ast":null,"code":"import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","map":{"version":3,"names":["React","isFunction","useGridLogger","useGridNativeEventListener","apiRef","ref","eventName","handler","options","logger","added","setAdded","useState","handlerRef","useRef","targetElement","current","wrapHandler","useCallback","event","useEffect","debug","addEventListener","unsubscribe","removeEventListener","subscribeEvent"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js"],"sourcesContent":["import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAO,MAAMC,0BAA0B,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,SAAd,EAAyBC,OAAzB,EAAkCC,OAAlC,KAA8C;EACtF,MAAMC,MAAM,GAAGP,aAAa,CAACE,MAAD,EAAS,wBAAT,CAA5B;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA1B;EACA,MAAMC,UAAU,GAAGb,KAAK,CAACc,MAAN,CAAaP,OAAb,CAAnB;EACA,MAAMQ,aAAa,GAAGd,UAAU,CAACI,GAAD,CAAV,GAAkBA,GAAG,EAArB,GAA0BA,GAAG,EAAEW,OAAL,IAAgB,IAAhE;EACA,MAAMC,WAAW,GAAGjB,KAAK,CAACkB,WAAN,CAAkBC,KAAK,IAAI;IAC7C,OAAON,UAAU,CAACG,OAAX,IAAsBH,UAAU,CAACG,OAAX,CAAmBG,KAAnB,CAA7B;EACD,CAFmB,EAEjB,EAFiB,CAApB;EAGAnB,KAAK,CAACoB,SAAN,CAAgB,MAAM;IACpBP,UAAU,CAACG,OAAX,GAAqBT,OAArB;EACD,CAFD,EAEG,CAACA,OAAD,CAFH;EAGAP,KAAK,CAACoB,SAAN,CAAgB,MAAM;IACpB,IAAIL,aAAa,IAAIT,SAAjB,IAA8B,CAACI,KAAnC,EAA0C;MACxCD,MAAM,CAACY,KAAP,CAAc,kBAAiBf,SAAU,QAAzC;MACAS,aAAa,CAACO,gBAAd,CAA+BhB,SAA/B,EAA0CW,WAA1C,EAAuDT,OAAvD;MACAG,QAAQ,CAAC,IAAD,CAAR;;MACA,MAAMY,WAAW,GAAG,MAAM;QACxBd,MAAM,CAACY,KAAP,CAAc,mBAAkBf,SAAU,QAA1C;QACAS,aAAa,CAACS,mBAAd,CAAkClB,SAAlC,EAA6CW,WAA7C,EAA0DT,OAA1D;MACD,CAHD;;MAIAJ,MAAM,CAACY,OAAP,CAAeS,cAAf,CAA8B,SAA9B,EAAyCF,WAAzC;IACD;EACF,CAXD,EAWG,CAACR,aAAD,EAAgBE,WAAhB,EAA6BX,SAA7B,EAAwCI,KAAxC,EAA+CD,MAA/C,EAAuDD,OAAvD,EAAgEJ,MAAhE,CAXH;AAYD,CAvBM"},"metadata":{},"sourceType":"module"}