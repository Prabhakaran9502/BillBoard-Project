{"ast":null,"code":"'use strict';\n\nvar ToNumber = require('./ToNumber');\n\nvar truncate = require('./truncate');\n\nvar $isNaN = require('../helpers/isNaN');\n\nvar $isFinite = require('../helpers/isFinite'); // https://262.ecma-international.org/14.0/#sec-tointegerorinfinity\n\n\nmodule.exports = function ToIntegerOrInfinity(value) {\n  var number = ToNumber(value);\n\n  if ($isNaN(number) || number === 0) {\n    return 0;\n  }\n\n  if (!$isFinite(number)) {\n    return number;\n  }\n\n  return truncate(number);\n};","map":{"version":3,"names":["ToNumber","require","truncate","$isNaN","$isFinite","module","exports","ToIntegerOrInfinity","value","number"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-abstract/2024/ToIntegerOrInfinity.js"],"sourcesContent":["'use strict';\n\nvar ToNumber = require('./ToNumber');\nvar truncate = require('./truncate');\n\nvar $isNaN = require('../helpers/isNaN');\nvar $isFinite = require('../helpers/isFinite');\n\n// https://262.ecma-international.org/14.0/#sec-tointegerorinfinity\n\nmodule.exports = function ToIntegerOrInfinity(value) {\n\tvar number = ToNumber(value);\n\tif ($isNaN(number) || number === 0) { return 0; }\n\tif (!$isFinite(number)) { return number; }\n\treturn truncate(number);\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,qBAAD,CAAvB,C,CAEA;;;AAEAI,MAAM,CAACC,OAAP,GAAiB,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;EACpD,IAAIC,MAAM,GAAGT,QAAQ,CAACQ,KAAD,CAArB;;EACA,IAAIL,MAAM,CAACM,MAAD,CAAN,IAAkBA,MAAM,KAAK,CAAjC,EAAoC;IAAE,OAAO,CAAP;EAAW;;EACjD,IAAI,CAACL,SAAS,CAACK,MAAD,CAAd,EAAwB;IAAE,OAAOA,MAAP;EAAgB;;EAC1C,OAAOP,QAAQ,CAACO,MAAD,CAAf;AACA,CALD"},"metadata":{},"sourceType":"script"}