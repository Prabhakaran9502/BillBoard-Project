{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { verifyLicense } from '../verifyLicense/verifyLicense';\nimport { LicenseInfo } from '../utils/licenseInfo';\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError, showNotAvailableInInitialProPlanError } from '../utils/licenseErrorMessageUtils';\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\nimport { extractAcceptedScopes, extractProductScope } from '../utils/licenseScope';\nimport MuiLicenseInfoContext from '../Unstable_LicenseInfoProvider/MuiLicenseInfoContext';\nexport const sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey(); // Cache the response to not trigger the error twice.\n\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n\n    const acceptedScopes = extractAcceptedScopes(packageName);\n    const productScope = extractProductScope(packageName);\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      acceptedScopes,\n      productScope\n    });\n    const fullPackageName = `@mui/${packageName}`;\n\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {// Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotAvailableInInitialProPlan) {\n      showNotAvailableInInitialProPlanError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}","map":{"version":3,"names":["_extends","React","verifyLicense","LicenseInfo","showExpiredAnnualGraceLicenseKeyError","showExpiredAnnualLicenseKeyError","showInvalidLicenseKeyError","showMissingLicenseKeyError","showLicenseKeyPlanMismatchError","showExpiredPackageVersionError","showNotAvailableInInitialProPlanError","LICENSE_STATUS","extractAcceptedScopes","extractProductScope","MuiLicenseInfoContext","sharedLicenseStatuses","useLicenseVerifier","packageName","releaseInfo","key","contextKey","useContext","useMemo","licenseKey","getLicenseKey","licenseVerifier","acceptedScopes","productScope","plan","includes","licenseStatus","fullPackageName","status","Valid","Invalid","NotAvailableInInitialProPlan","OutOfScope","NotFound","ExpiredAnnualGrace","meta","ExpiredAnnual","ExpiredVersion","process","env","NODE_ENV","Error"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-license/useLicenseVerifier/useLicenseVerifier.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { verifyLicense } from '../verifyLicense/verifyLicense';\nimport { LicenseInfo } from '../utils/licenseInfo';\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError, showNotAvailableInInitialProPlanError } from '../utils/licenseErrorMessageUtils';\nimport { LICENSE_STATUS } from '../utils/licenseStatus';\nimport { extractAcceptedScopes, extractProductScope } from '../utils/licenseScope';\nimport MuiLicenseInfoContext from '../Unstable_LicenseInfoProvider/MuiLicenseInfoContext';\nexport const sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\n\n    // Cache the response to not trigger the error twice.\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n    const acceptedScopes = extractAcceptedScopes(packageName);\n    const productScope = extractProductScope(packageName);\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      acceptedScopes,\n      productScope\n    });\n    const fullPackageName = `@mui/${packageName}`;\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\n      // Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotAvailableInInitialProPlan) {\n      showNotAvailableInInitialProPlanError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,qCAAT,EAAgDC,gCAAhD,EAAkFC,0BAAlF,EAA8GC,0BAA9G,EAA0IC,+BAA1I,EAA2KC,8BAA3K,EAA2MC,qCAA3M,QAAwP,mCAAxP;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,uBAA3D;AACA,OAAOC,qBAAP,MAAkC,uDAAlC;AACA,OAAO,MAAMC,qBAAqB,GAAG,EAA9B;AACP,OAAO,SAASC,kBAAT,CAA4BC,WAA5B,EAAyCC,WAAzC,EAAsD;EAC3D,MAAM;IACJC,GAAG,EAAEC;EADD,IAEFnB,KAAK,CAACoB,UAAN,CAAiBP,qBAAjB,CAFJ;EAGA,OAAOb,KAAK,CAACqB,OAAN,CAAc,MAAM;IACzB,MAAMC,UAAU,GAAGH,UAAU,IAAIjB,WAAW,CAACqB,aAAZ,EAAjC,CADyB,CAGzB;;IACA,IAAIT,qBAAqB,CAACE,WAAD,CAArB,IAAsCF,qBAAqB,CAACE,WAAD,CAArB,CAAmCE,GAAnC,KAA2CI,UAArF,EAAiG;MAC/F,OAAOR,qBAAqB,CAACE,WAAD,CAArB,CAAmCQ,eAA1C;IACD;;IACD,MAAMC,cAAc,GAAGd,qBAAqB,CAACK,WAAD,CAA5C;IACA,MAAMU,YAAY,GAAGd,mBAAmB,CAACI,WAAD,CAAxC;IACA,MAAMW,IAAI,GAAGX,WAAW,CAACY,QAAZ,CAAqB,SAArB,IAAkC,SAAlC,GAA8C,KAA3D;IACA,MAAMC,aAAa,GAAG5B,aAAa,CAAC;MAClCgB,WADkC;MAElCK,UAFkC;MAGlCG,cAHkC;MAIlCC;IAJkC,CAAD,CAAnC;IAMA,MAAMI,eAAe,GAAI,QAAOd,WAAY,EAA5C;;IACA,IAAIa,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAACsB,KAA5C,EAAmD,CACjD;IACD,CAFD,MAEO,IAAIH,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAACuB,OAA5C,EAAqD;MAC1D5B,0BAA0B;IAC3B,CAFM,MAEA,IAAIwB,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAACwB,4BAA5C,EAA0E;MAC/EzB,qCAAqC;IACtC,CAFM,MAEA,IAAIoB,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAACyB,UAA5C,EAAwD;MAC7D5B,+BAA+B;IAChC,CAFM,MAEA,IAAIsB,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAAC0B,QAA5C,EAAsD;MAC3D9B,0BAA0B,CAAC;QACzBqB,IADyB;QAEzBX,WAAW,EAAEc;MAFY,CAAD,CAA1B;IAID,CALM,MAKA,IAAID,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAAC2B,kBAA5C,EAAgE;MACrElC,qCAAqC,CAACJ,QAAQ,CAAC;QAC7C4B;MAD6C,CAAD,EAE3CE,aAAa,CAACS,IAF6B,CAAT,CAArC;IAGD,CAJM,MAIA,IAAIT,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAAC6B,aAA5C,EAA2D;MAChEnC,gCAAgC,CAACL,QAAQ,CAAC;QACxC4B;MADwC,CAAD,EAEtCE,aAAa,CAACS,IAFwB,CAAT,CAAhC;IAGD,CAJM,MAIA,IAAIT,aAAa,CAACE,MAAd,KAAyBrB,cAAc,CAAC8B,cAA5C,EAA4D;MACjEhC,8BAA8B,CAAC;QAC7BQ,WAAW,EAAEc;MADgB,CAAD,CAA9B;IAGD,CAJM,MAIA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MAChD,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;IACD;;IACD9B,qBAAqB,CAACE,WAAD,CAArB,GAAqC;MACnCE,GAAG,EAAEI,UAD8B;MAEnCE,eAAe,EAAEK;IAFkB,CAArC;IAIA,OAAOA,aAAP;EACD,CAlDM,EAkDJ,CAACb,WAAD,EAAcC,WAAd,EAA2BE,UAA3B,CAlDI,CAAP;AAmDD"},"metadata":{},"sourceType":"module"}