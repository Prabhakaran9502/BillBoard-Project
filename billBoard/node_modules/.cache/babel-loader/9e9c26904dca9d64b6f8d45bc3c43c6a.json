{"ast":null,"code":"\"use strict\";\n\nexports.getWeekYear = getWeekYear;\n\nvar _index = require(\"./constructFrom.js\");\n\nvar _index2 = require(\"./startOfWeek.js\");\n\nvar _index3 = require(\"./toDate.js\");\n\nvar _index4 = require(\"./_lib/defaultOptions.js\");\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\n\n\nfunction getWeekYear(date, options) {\n  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  var _date = (0, _index3.toDate)(date);\n\n  var year = _date.getFullYear();\n\n  var defaultOptions = (0, _index4.getDefaultOptions)();\n  var firstWeekContainsDate = (_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1;\n  var firstWeekOfNextYear = (0, _index.constructFrom)(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = (0, _index2.startOfWeek)(firstWeekOfNextYear, options);\n  var firstWeekOfThisYear = (0, _index.constructFrom)(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = (0, _index2.startOfWeek)(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","map":{"version":3,"names":["exports","getWeekYear","_index","require","_index2","_index3","_index4","date","options","_date","toDate","year","getFullYear","defaultOptions","getDefaultOptions","firstWeekContainsDate","locale","firstWeekOfNextYear","constructFrom","setFullYear","setHours","startOfNextYear","startOfWeek","firstWeekOfThisYear","startOfThisYear","getTime"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/date-fns/getWeekYear.js"],"sourcesContent":["\"use strict\";\nexports.getWeekYear = getWeekYear;\nvar _index = require(\"./constructFrom.js\");\nvar _index2 = require(\"./startOfWeek.js\");\nvar _index3 = require(\"./toDate.js\");\n\nvar _index4 = require(\"./_lib/defaultOptions.js\");\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nfunction getWeekYear(date, options) {\n  const _date = (0, _index3.toDate)(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = (0, _index4.getDefaultOptions)();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = (0, _index.constructFrom)(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = (0, _index2.startOfWeek)(\n    firstWeekOfNextYear,\n    options,\n  );\n\n  const firstWeekOfThisYear = (0, _index.constructFrom)(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = (0, _index2.startOfWeek)(\n    firstWeekOfThisYear,\n    options,\n  );\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,WAAR,GAAsBA,WAAtB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,aAAD,CAArB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,0BAAD,CAArB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,WAAT,CAAqBM,IAArB,EAA2BC,OAA3B,EAAoC;EAAA;;EAClC,IAAMC,KAAK,GAAG,CAAC,GAAGJ,OAAO,CAACK,MAAZ,EAAoBH,IAApB,CAAd;;EACA,IAAMI,IAAI,GAAGF,KAAK,CAACG,WAAN,EAAb;;EAEA,IAAMC,cAAc,GAAG,CAAC,GAAGP,OAAO,CAACQ,iBAAZ,GAAvB;EACA,IAAMC,qBAAqB,sDACzBP,OADyB,aACzBA,OADyB,uBACzBA,OAAO,CAAEO,qBADgB,yEAEzBP,OAFyB,aAEzBA,OAFyB,0CAEzBA,OAAO,CAAEQ,MAFgB,6EAEzB,gBAAiBR,OAFQ,0DAEzB,sBAA0BO,qBAFD,yCAGzBF,cAAc,CAACE,qBAHU,kEAIzBF,cAAc,CAACG,MAJU,oFAIzB,sBAAuBR,OAJE,2DAIzB,uBAAgCO,qBAJP,uCAKzB,CALF;EAOA,IAAME,mBAAmB,GAAG,CAAC,GAAGf,MAAM,CAACgB,aAAX,EAA0BX,IAA1B,EAAgC,CAAhC,CAA5B;EACAU,mBAAmB,CAACE,WAApB,CAAgCR,IAAI,GAAG,CAAvC,EAA0C,CAA1C,EAA6CI,qBAA7C;EACAE,mBAAmB,CAACG,QAApB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC;EACA,IAAMC,eAAe,GAAG,CAAC,GAAGjB,OAAO,CAACkB,WAAZ,EACtBL,mBADsB,EAEtBT,OAFsB,CAAxB;EAKA,IAAMe,mBAAmB,GAAG,CAAC,GAAGrB,MAAM,CAACgB,aAAX,EAA0BX,IAA1B,EAAgC,CAAhC,CAA5B;EACAgB,mBAAmB,CAACJ,WAApB,CAAgCR,IAAhC,EAAsC,CAAtC,EAAyCI,qBAAzC;EACAQ,mBAAmB,CAACH,QAApB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC;EACA,IAAMI,eAAe,GAAG,CAAC,GAAGpB,OAAO,CAACkB,WAAZ,EACtBC,mBADsB,EAEtBf,OAFsB,CAAxB;;EAKA,IAAIC,KAAK,CAACgB,OAAN,MAAmBJ,eAAe,CAACI,OAAhB,EAAvB,EAAkD;IAChD,OAAOd,IAAI,GAAG,CAAd;EACD,CAFD,MAEO,IAAIF,KAAK,CAACgB,OAAN,MAAmBD,eAAe,CAACC,OAAhB,EAAvB,EAAkD;IACvD,OAAOd,IAAP;EACD,CAFM,MAEA;IACL,OAAOA,IAAI,GAAG,CAAd;EACD;AACF"},"metadata":{},"sourceType":"script"}