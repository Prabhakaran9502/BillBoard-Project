{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridAggregationPreProcessors = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _xDataGridPro = require(\"@mui/x-data-grid-pro\");\n\nvar _internals = require(\"@mui/x-data-grid-pro/internals\");\n\nvar _gridAggregationUtils = require(\"./gridAggregationUtils\");\n\nvar _wrapColumnWithAggregation = require(\"./wrapColumnWithAggregation\");\n\nvar _gridAggregationSelectors = require(\"./gridAggregationSelectors\");\n\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n      t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\n\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n\n  var t = _getRequireWildcardCache(r);\n\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n    __proto__: null\n  },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n\n  return n.default = e, t && t.set(e, n), n;\n}\n\nconst useGridAggregationPreProcessors = (apiRef, props) => {\n  // apiRef.current.caches.aggregation.rulesOnLastColumnHydration is not used because by the time\n  // that the pre-processor is called it will already have been updated with the current rules.\n  const rulesOnLastColumnHydration = React.useRef({});\n  const updateAggregatedColumns = React.useCallback(columnsState => {\n    const aggregationRules = props.disableAggregation ? {} : (0, _gridAggregationUtils.getAggregationRules)({\n      columnsLookup: columnsState.lookup,\n      aggregationModel: (0, _gridAggregationSelectors.gridAggregationModelSelector)(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    columnsState.orderedFields.forEach(field => {\n      const shouldHaveAggregationValue = !!aggregationRules[field];\n      const haveAggregationColumnValue = !!rulesOnLastColumnHydration.current[field];\n      let column = columnsState.lookup[field];\n\n      if (haveAggregationColumnValue) {\n        column = (0, _wrapColumnWithAggregation.unwrapColumnFromAggregation)({\n          column\n        });\n      }\n\n      if (shouldHaveAggregationValue) {\n        column = (0, _wrapColumnWithAggregation.wrapColumnWithAggregationValue)({\n          column,\n          aggregationRule: aggregationRules[field],\n          apiRef\n        });\n      }\n\n      columnsState.lookup[field] = column;\n    });\n    rulesOnLastColumnHydration.current = aggregationRules;\n    return columnsState;\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const addGroupFooterRows = React.useCallback(value => {\n    const aggregationRules = props.disableAggregation ? {} : (0, _gridAggregationUtils.getAggregationRules)({\n      columnsLookup: (0, _xDataGridPro.gridColumnLookupSelector)(apiRef),\n      aggregationModel: (0, _gridAggregationSelectors.gridAggregationModelSelector)(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    const hasAggregationRule = Object.keys(aggregationRules).length > 0; // If we did not have any aggregation footer before, and we still don't have any,\n    // Then we can skip this step\n\n    if (Object.keys(apiRef.current.caches.aggregation.rulesOnLastRowHydration).length === 0 && !hasAggregationRule) {\n      return value;\n    }\n\n    apiRef.current.caches.aggregation.rulesOnLastRowHydration = aggregationRules;\n    return (0, _gridAggregationUtils.addFooterRows)({\n      apiRef,\n      groupingParams: value,\n      getAggregationPosition: props.getAggregationPosition,\n      hasAggregationRule\n    });\n  }, [apiRef, props.disableAggregation, props.getAggregationPosition, props.aggregationFunctions]);\n  const addColumnMenuButtons = React.useCallback((columnMenuItems, colDef) => {\n    if (props.disableAggregation || !colDef.aggregable) {\n      return columnMenuItems;\n    }\n\n    const availableAggregationFunctions = (0, _gridAggregationUtils.getAvailableAggregationFunctions)({\n      aggregationFunctions: props.aggregationFunctions,\n      colDef\n    });\n\n    if (availableAggregationFunctions.length === 0) {\n      return columnMenuItems;\n    }\n\n    return [...columnMenuItems, 'columnMenuAggregationItem'];\n  }, [props.aggregationFunctions, props.disableAggregation]);\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    if (props.disableAggregation) {\n      return prevState;\n    }\n\n    const aggregationModelToExport = (0, _gridAggregationSelectors.gridAggregationModelSelector)(apiRef);\n\n    if (Object.values(aggregationModelToExport).length === 0) {\n      return prevState;\n    }\n\n    return (0, _extends2.default)({}, prevState, {\n      aggregation: {\n        model: aggregationModelToExport\n      }\n    });\n  }, [apiRef, props.disableAggregation]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    if (props.disableAggregation) {\n      return params;\n    }\n\n    const aggregationModel = context.stateToRestore.aggregation?.model;\n\n    if (aggregationModel != null) {\n      apiRef.current.setState((0, _gridAggregationUtils.mergeStateWithAggregationModel)(aggregationModel));\n    }\n\n    return params;\n  }, [apiRef, props.disableAggregation]);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'hydrateColumns', updateAggregatedColumns);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'hydrateRows', addGroupFooterRows);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'columnMenu', addColumnMenuButtons);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'exportState', stateExportPreProcessing);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'restoreState', stateRestorePreProcessing);\n};\n\nexports.useGridAggregationPreProcessors = useGridAggregationPreProcessors;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useGridAggregationPreProcessors","_extends2","React","_interopRequireWildcard","_xDataGridPro","_internals","_gridAggregationUtils","_wrapColumnWithAggregation","_gridAggregationSelectors","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","apiRef","props","rulesOnLastColumnHydration","useRef","updateAggregatedColumns","useCallback","columnsState","aggregationRules","disableAggregation","getAggregationRules","columnsLookup","lookup","aggregationModel","gridAggregationModelSelector","aggregationFunctions","orderedFields","forEach","field","shouldHaveAggregationValue","haveAggregationColumnValue","current","column","unwrapColumnFromAggregation","wrapColumnWithAggregationValue","aggregationRule","addGroupFooterRows","gridColumnLookupSelector","hasAggregationRule","keys","length","caches","aggregation","rulesOnLastRowHydration","addFooterRows","groupingParams","getAggregationPosition","addColumnMenuButtons","columnMenuItems","colDef","aggregable","availableAggregationFunctions","getAvailableAggregationFunctions","stateExportPreProcessing","prevState","aggregationModelToExport","values","model","stateRestorePreProcessing","params","context","stateToRestore","setState","mergeStateWithAggregationModel","useGridRegisterPipeProcessor"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-premium/hooks/features/aggregation/useGridAggregationPreProcessors.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridAggregationPreProcessors = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _xDataGridPro = require(\"@mui/x-data-grid-pro\");\nvar _internals = require(\"@mui/x-data-grid-pro/internals\");\nvar _gridAggregationUtils = require(\"./gridAggregationUtils\");\nvar _wrapColumnWithAggregation = require(\"./wrapColumnWithAggregation\");\nvar _gridAggregationSelectors = require(\"./gridAggregationSelectors\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nconst useGridAggregationPreProcessors = (apiRef, props) => {\n  // apiRef.current.caches.aggregation.rulesOnLastColumnHydration is not used because by the time\n  // that the pre-processor is called it will already have been updated with the current rules.\n  const rulesOnLastColumnHydration = React.useRef({});\n  const updateAggregatedColumns = React.useCallback(columnsState => {\n    const aggregationRules = props.disableAggregation ? {} : (0, _gridAggregationUtils.getAggregationRules)({\n      columnsLookup: columnsState.lookup,\n      aggregationModel: (0, _gridAggregationSelectors.gridAggregationModelSelector)(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    columnsState.orderedFields.forEach(field => {\n      const shouldHaveAggregationValue = !!aggregationRules[field];\n      const haveAggregationColumnValue = !!rulesOnLastColumnHydration.current[field];\n      let column = columnsState.lookup[field];\n      if (haveAggregationColumnValue) {\n        column = (0, _wrapColumnWithAggregation.unwrapColumnFromAggregation)({\n          column\n        });\n      }\n      if (shouldHaveAggregationValue) {\n        column = (0, _wrapColumnWithAggregation.wrapColumnWithAggregationValue)({\n          column,\n          aggregationRule: aggregationRules[field],\n          apiRef\n        });\n      }\n      columnsState.lookup[field] = column;\n    });\n    rulesOnLastColumnHydration.current = aggregationRules;\n    return columnsState;\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const addGroupFooterRows = React.useCallback(value => {\n    const aggregationRules = props.disableAggregation ? {} : (0, _gridAggregationUtils.getAggregationRules)({\n      columnsLookup: (0, _xDataGridPro.gridColumnLookupSelector)(apiRef),\n      aggregationModel: (0, _gridAggregationSelectors.gridAggregationModelSelector)(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    const hasAggregationRule = Object.keys(aggregationRules).length > 0;\n\n    // If we did not have any aggregation footer before, and we still don't have any,\n    // Then we can skip this step\n    if (Object.keys(apiRef.current.caches.aggregation.rulesOnLastRowHydration).length === 0 && !hasAggregationRule) {\n      return value;\n    }\n    apiRef.current.caches.aggregation.rulesOnLastRowHydration = aggregationRules;\n    return (0, _gridAggregationUtils.addFooterRows)({\n      apiRef,\n      groupingParams: value,\n      getAggregationPosition: props.getAggregationPosition,\n      hasAggregationRule\n    });\n  }, [apiRef, props.disableAggregation, props.getAggregationPosition, props.aggregationFunctions]);\n  const addColumnMenuButtons = React.useCallback((columnMenuItems, colDef) => {\n    if (props.disableAggregation || !colDef.aggregable) {\n      return columnMenuItems;\n    }\n    const availableAggregationFunctions = (0, _gridAggregationUtils.getAvailableAggregationFunctions)({\n      aggregationFunctions: props.aggregationFunctions,\n      colDef\n    });\n    if (availableAggregationFunctions.length === 0) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuAggregationItem'];\n  }, [props.aggregationFunctions, props.disableAggregation]);\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    if (props.disableAggregation) {\n      return prevState;\n    }\n    const aggregationModelToExport = (0, _gridAggregationSelectors.gridAggregationModelSelector)(apiRef);\n    if (Object.values(aggregationModelToExport).length === 0) {\n      return prevState;\n    }\n    return (0, _extends2.default)({}, prevState, {\n      aggregation: {\n        model: aggregationModelToExport\n      }\n    });\n  }, [apiRef, props.disableAggregation]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    if (props.disableAggregation) {\n      return params;\n    }\n    const aggregationModel = context.stateToRestore.aggregation?.model;\n    if (aggregationModel != null) {\n      apiRef.current.setState((0, _gridAggregationUtils.mergeStateWithAggregationModel)(aggregationModel));\n    }\n    return params;\n  }, [apiRef, props.disableAggregation]);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'hydrateColumns', updateAggregatedColumns);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'hydrateRows', addGroupFooterRows);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'columnMenu', addColumnMenuButtons);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'exportState', stateExportPreProcessing);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'restoreState', stateRestorePreProcessing);\n};\nexports.useGridAggregationPreProcessors = useGridAggregationPreProcessors;"],"mappings":"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"},"metadata":{},"sourceType":"script"}