{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _isHostComponent = _interopRequireDefault(require(\"../isHostComponent\"));\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\n\n\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || (0, _isHostComponent.default)(elementType)) {\n    return otherProps;\n  }\n\n  return (0, _extends2.default)({}, otherProps, {\n    ownerState: (0, _extends2.default)({}, otherProps.ownerState, ownerState)\n  });\n}\n\nvar _default = exports.default = appendOwnerState;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_extends2","_isHostComponent","appendOwnerState","elementType","otherProps","ownerState","undefined","_default"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/utils/appendOwnerState/appendOwnerState.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _isHostComponent = _interopRequireDefault(require(\"../isHostComponent\"));\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || (0, _isHostComponent.default)(elementType)) {\n    return otherProps;\n  }\n  return (0, _extends2.default)({}, otherProps, {\n    ownerState: (0, _extends2.default)({}, otherProps.ownerState, ownerState)\n  });\n}\nvar _default = exports.default = appendOwnerState;"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AACAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,SAAS,GAAGP,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AACA,IAAIO,gBAAgB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAA7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,gBAAT,CAA0BC,WAA1B,EAAuCC,UAAvC,EAAmDC,UAAnD,EAA+D;EAC7D,IAAIF,WAAW,KAAKG,SAAhB,IAA6B,CAAC,GAAGL,gBAAgB,CAACF,OAArB,EAA8BI,WAA9B,CAAjC,EAA6E;IAC3E,OAAOC,UAAP;EACD;;EACD,OAAO,CAAC,GAAGJ,SAAS,CAACD,OAAd,EAAuB,EAAvB,EAA2BK,UAA3B,EAAuC;IAC5CC,UAAU,EAAE,CAAC,GAAGL,SAAS,CAACD,OAAd,EAAuB,EAAvB,EAA2BK,UAAU,CAACC,UAAtC,EAAkDA,UAAlD;EADgC,CAAvC,CAAP;AAGD;;AACD,IAAIE,QAAQ,GAAGV,OAAO,CAACE,OAAR,GAAkBG,gBAAjC"},"metadata":{},"sourceType":"script"}