{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediately without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(_ref => {\n        let [id, fields] = _ref;\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","useGridCellEditing","GridCellModes","GridEditModes","useGridRowEditing","gridEditRowsStateSelector","isAutoGeneratedRow","editingStateInitializer","state","editRows","useGridEditing","apiRef","props","debounceMap","useRef","isCellEditable","isCellEditableProp","useCallback","params","rowNode","colDef","editable","renderEditCell","maybeDebounce","id","field","debounceMs","callback","current","timeout","clearTimeout","runImmediately","setTimeout","useEffect","debounces","Object","entries","forEach","fields","keys","runPendingEditCellValueMutation","debouncedField","runCallback","setEditCellValue","Promise","resolve","setEditCellValueToCall","editMode","Row","setRowEditingEditCellValue","setCellEditingEditCellValue","getCellMode","Edit","result","getRowWithUpdatedValues","Cell","getRowWithUpdatedValuesFromCellEditing","getRowWithUpdatedValuesFromRowEditing","getEditCellMeta","editingState","editingSharedApi","unstable_getEditCellMeta","editingSharedPrivateApi"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,yBAAT,QAA0C,wBAA1C;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,OAAO,MAAMC,uBAAuB,GAAGC,KAAK,IAAIV,QAAQ,CAAC,EAAD,EAAKU,KAAL,EAAY;EAClEC,QAAQ,EAAE;AADwD,CAAZ,CAAjD;AAGP,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;EAC/CX,kBAAkB,CAACU,MAAD,EAASC,KAAT,CAAlB;EACAR,iBAAiB,CAACO,MAAD,EAASC,KAAT,CAAjB;EACA,MAAMC,WAAW,GAAGd,KAAK,CAACe,MAAN,CAAa,EAAb,CAApB;EACA,MAAM;IACJC,cAAc,EAAEC;EADZ,IAEFJ,KAFJ;EAGA,MAAMG,cAAc,GAAGhB,KAAK,CAACkB,WAAN,CAAkBC,MAAM,IAAI;IACjD,IAAIZ,kBAAkB,CAACY,MAAM,CAACC,OAAR,CAAtB,EAAwC;MACtC,OAAO,KAAP;IACD;;IACD,IAAI,CAACD,MAAM,CAACE,MAAP,CAAcC,QAAnB,EAA6B;MAC3B,OAAO,KAAP;IACD;;IACD,IAAI,CAACH,MAAM,CAACE,MAAP,CAAcE,cAAnB,EAAmC;MACjC,OAAO,KAAP;IACD;;IACD,IAAIN,kBAAJ,EAAwB;MACtB,OAAOA,kBAAkB,CAACE,MAAD,CAAzB;IACD;;IACD,OAAO,IAAP;EACD,CAdsB,EAcpB,CAACF,kBAAD,CAdoB,CAAvB;;EAeA,MAAMO,aAAa,GAAG,CAACC,EAAD,EAAKC,KAAL,EAAYC,UAAZ,EAAwBC,QAAxB,KAAqC;IACzD,IAAI,CAACD,UAAL,EAAiB;MACfC,QAAQ;MACR;IACD;;IACD,IAAI,CAACd,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,CAAL,EAA8B;MAC5BX,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,IAA0B,EAA1B;IACD;;IACD,IAAIX,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,CAAJ,EAAoC;MAClC,MAAM,CAACI,OAAD,IAAYhB,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,CAAlB;MACAK,YAAY,CAACD,OAAD,CAAZ;IACD,CAXwD,CAazD;;;IACA,MAAME,cAAc,GAAG,MAAM;MAC3B,MAAM,CAACF,OAAD,IAAYhB,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,CAAlB;MACAK,YAAY,CAACD,OAAD,CAAZ;MACAF,QAAQ;MACR,OAAOd,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,CAAP;IACD,CALD;;IAMA,MAAMI,OAAO,GAAGG,UAAU,CAAC,MAAM;MAC/BL,QAAQ;MACR,OAAOd,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,CAAP;IACD,CAHyB,EAGvBC,UAHuB,CAA1B;IAIAb,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,IAAiC,CAACI,OAAD,EAAUE,cAAV,CAAjC;EACD,CAzBD;;EA0BAhC,KAAK,CAACkC,SAAN,CAAgB,MAAM;IACpB,MAAMC,SAAS,GAAGrB,WAAW,CAACe,OAA9B;IACA,OAAO,MAAM;MACXO,MAAM,CAACC,OAAP,CAAeF,SAAf,EAA0BG,OAA1B,CAAkC,QAAkB;QAAA,IAAjB,CAACb,EAAD,EAAKc,MAAL,CAAiB;QAClDH,MAAM,CAACI,IAAP,CAAYD,MAAZ,EAAoBD,OAApB,CAA4BZ,KAAK,IAAI;UACnC,MAAM,CAACI,OAAD,IAAYK,SAAS,CAACV,EAAD,CAAT,CAAcC,KAAd,CAAlB;UACAK,YAAY,CAACD,OAAD,CAAZ;UACA,OAAOK,SAAS,CAACV,EAAD,CAAT,CAAcC,KAAd,CAAP;QACD,CAJD;MAKD,CAND;IAOD,CARD;EASD,CAXD,EAWG,EAXH;EAYA,MAAMe,+BAA+B,GAAGzC,KAAK,CAACkB,WAAN,CAAkB,CAACO,EAAD,EAAKC,KAAL,KAAe;IACvE,IAAI,CAACZ,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,CAAL,EAA8B;MAC5B;IACD;;IACD,IAAI,CAACC,KAAL,EAAY;MACVU,MAAM,CAACI,IAAP,CAAY1B,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,CAAZ,EAAqCa,OAArC,CAA6CI,cAAc,IAAI;QAC7D,MAAM,GAAGC,WAAH,IAAkB7B,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBiB,cAAxB,CAAxB;QACAC,WAAW;MACZ,CAHD;IAID,CALD,MAKO,IAAI7B,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,CAAJ,EAAoC;MACzC,MAAM,GAAGiB,WAAH,IAAkB7B,WAAW,CAACe,OAAZ,CAAoBJ,EAApB,EAAwBC,KAAxB,CAAxB;MACAiB,WAAW;IACZ;EACF,CAbuC,EAarC,EAbqC,CAAxC;EAcA,MAAMC,gBAAgB,GAAG5C,KAAK,CAACkB,WAAN,CAAkBC,MAAM,IAAI;IACnD,MAAM;MACJM,EADI;MAEJC,KAFI;MAGJC;IAHI,IAIFR,MAJJ;IAKA,OAAO,IAAI0B,OAAJ,CAAYC,OAAO,IAAI;MAC5BtB,aAAa,CAACC,EAAD,EAAKC,KAAL,EAAYC,UAAZ,EAAwB,YAAY;QAC/C,MAAMoB,sBAAsB,GAAGlC,KAAK,CAACmC,QAAN,KAAmB5C,aAAa,CAAC6C,GAAjC,GAAuCrC,MAAM,CAACiB,OAAP,CAAeqB,0BAAtD,GAAmFtC,MAAM,CAACiB,OAAP,CAAesB,2BAAjI,CAD+C,CAG/C;QACA;;QACA,IAAIvC,MAAM,CAACiB,OAAP,CAAeuB,WAAf,CAA2B3B,EAA3B,EAA+BC,KAA/B,MAA0CvB,aAAa,CAACkD,IAA5D,EAAkE;UAChE,MAAMC,MAAM,GAAG,MAAMP,sBAAsB,CAAC5B,MAAD,CAA3C;UACA2B,OAAO,CAACQ,MAAD,CAAP;QACD;MACF,CATY,CAAb;IAUD,CAXM,CAAP;EAYD,CAlBwB,EAkBtB,CAAC1C,MAAD,EAASC,KAAK,CAACmC,QAAf,CAlBsB,CAAzB;EAmBA,MAAMO,uBAAuB,GAAGvD,KAAK,CAACkB,WAAN,CAAkB,CAACO,EAAD,EAAKC,KAAL,KAAe;IAC/D,OAAOb,KAAK,CAACmC,QAAN,KAAmB5C,aAAa,CAACoD,IAAjC,GAAwC5C,MAAM,CAACiB,OAAP,CAAe4B,sCAAf,CAAsDhC,EAAtD,EAA0DC,KAA1D,CAAxC,GAA2Gd,MAAM,CAACiB,OAAP,CAAe6B,qCAAf,CAAqDjC,EAArD,CAAlH;EACD,CAF+B,EAE7B,CAACb,MAAD,EAASC,KAAK,CAACmC,QAAf,CAF6B,CAAhC;EAGA,MAAMW,eAAe,GAAG3D,KAAK,CAACkB,WAAN,CAAkB,CAACO,EAAD,EAAKC,KAAL,KAAe;IACvD,MAAMkC,YAAY,GAAGtD,yBAAyB,CAACM,MAAM,CAACiB,OAAP,CAAepB,KAAhB,CAA9C;IACA,OAAOmD,YAAY,CAACnC,EAAD,CAAZ,GAAmBC,KAAnB,KAA6B,IAApC;EACD,CAHuB,EAGrB,CAACd,MAAD,CAHqB,CAAxB;EAIA,MAAMiD,gBAAgB,GAAG;IACvB7C,cADuB;IAEvB4B,gBAFuB;IAGvBW,uBAHuB;IAIvBO,wBAAwB,EAAEH;EAJH,CAAzB;EAMA,MAAMI,uBAAuB,GAAG;IAC9BtB;EAD8B,CAAhC;EAGAxC,gBAAgB,CAACW,MAAD,EAASiD,gBAAT,EAA2B,QAA3B,CAAhB;EACA5D,gBAAgB,CAACW,MAAD,EAASmD,uBAAT,EAAkC,SAAlC,CAAhB;AACD,CA/GM"},"metadata":{},"sourceType":"module"}