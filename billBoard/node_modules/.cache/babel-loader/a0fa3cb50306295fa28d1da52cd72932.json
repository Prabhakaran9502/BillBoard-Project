{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n      _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\n\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]); // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n        index\n      }),\n            {\n        key\n      } = _getTagProps,\n            tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","Autocomplete","createFilterOptions","unstable_useId","useId","getValueOptions","isSingleSelectColDef","useGridRootProps","jsx","_jsx","filter","GridFilterInputMultipleSingleSelect","props","item","applyValue","apiRef","focusElementRef","color","error","helperText","size","variant","other","TextFieldProps","id","rootProps","resolvedColumn","field","column","current","getColumn","getOptionValue","getOptionLabel","isOptionEqualToValue","useCallback","option","value","resolvedValueOptions","useMemo","filteredValues","Array","isArray","reduce","acc","resolvedValue","find","v","push","handleChange","event","map","multiple","options","filterOptions","onChange","renderTags","getTagProps","index","_getTagProps","key","tagProps","slots","baseChip","label","renderInput","params","baseTextField","getLocaleText","placeholder","InputLabelProps","shrink","inputRef","type","slotProps","process","env","NODE_ENV","propTypes","shape","object","isRequired","func","oneOfType","string","number","operator","any","oneOf"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };"],"mappings":"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"},"metadata":{},"sourceType":"module"}