{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useIsDateDisabled } from './useIsDateDisabled';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { SECTION_TYPE_GRANULARITY } from '../internals/utils/getDefaultReferenceDate';\nexport const createCalendarStateReducer = (reduceAnimations, disableSwitchToMonthOnDayFocus, utils) => (state, action) => {\n  switch (action.type) {\n    case 'changeMonth':\n      return _extends({}, state, {\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations\n      });\n\n    case 'finishMonthSwitchingAnimation':\n      return _extends({}, state, {\n        isMonthSwitchingAnimating: false\n      });\n\n    case 'changeFocusedDay':\n      {\n        if (state.focusedDay != null && action.focusedDay != null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n          return state;\n        }\n\n        const needMonthSwitch = action.focusedDay != null && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n        return _extends({}, state, {\n          focusedDay: action.focusedDay,\n          isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations && !action.withoutMonthSwitchingAnimation,\n          currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n          slideDirection: action.focusedDay != null && utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n        });\n      }\n\n    default:\n      throw new Error('missing support');\n  }\n};\nexport const useCalendarState = params => {\n  const {\n    value,\n    referenceDate: referenceDateProp,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus = false,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate,\n    timezone\n  } = params;\n  const utils = useUtils();\n  const reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  const referenceDate = React.useMemo(() => {\n    return singleItemValueManager.getInitialReferenceValue({\n      value,\n      utils,\n      timezone,\n      props: params,\n      referenceDate: referenceDateProp,\n      granularity: SECTION_TYPE_GRANULARITY.day\n    });\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: referenceDate,\n    currentMonth: utils.startOfMonth(referenceDate),\n    slideDirection: 'left'\n  });\n  const handleChangeMonth = React.useCallback(payload => {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  const changeMonth = React.useCallback(newDate => {\n    const newDateRequested = newDate;\n\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, utils]);\n  const isDateDisabled = useIsDateDisabled({\n    shouldDisableDate,\n    minDate,\n    maxDate,\n    disableFuture,\n    disablePast,\n    timezone\n  });\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  const changeFocusedDay = useEventCallback((newFocusedDate, withoutMonthSwitchingAnimation) => {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate,\n        withoutMonthSwitchingAnimation\n      });\n    }\n  });\n  return {\n    referenceDate,\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth\n  };\n};","map":{"version":3,"names":["_extends","React","useEventCallback","useIsDateDisabled","useUtils","singleItemValueManager","SECTION_TYPE_GRANULARITY","createCalendarStateReducer","reduceAnimations","disableSwitchToMonthOnDayFocus","utils","state","action","type","slideDirection","direction","currentMonth","newMonth","isMonthSwitchingAnimating","focusedDay","isSameDay","needMonthSwitch","isSameMonth","withoutMonthSwitchingAnimation","startOfMonth","isAfterDay","Error","useCalendarState","params","value","referenceDate","referenceDateProp","disableFuture","disablePast","maxDate","minDate","onMonthChange","shouldDisableDate","timezone","reducerFn","useRef","Boolean","current","useMemo","getInitialReferenceValue","props","granularity","day","calendarState","dispatch","useReducer","handleChangeMonth","useCallback","payload","changeMonth","newDate","newDateRequested","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","newFocusedDate"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-date-pickers/DateCalendar/useCalendarState.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useIsDateDisabled } from './useIsDateDisabled';\nimport { useUtils } from '../internals/hooks/useUtils';\nimport { singleItemValueManager } from '../internals/utils/valueManagers';\nimport { SECTION_TYPE_GRANULARITY } from '../internals/utils/getDefaultReferenceDate';\nexport const createCalendarStateReducer = (reduceAnimations, disableSwitchToMonthOnDayFocus, utils) => (state, action) => {\n  switch (action.type) {\n    case 'changeMonth':\n      return _extends({}, state, {\n        slideDirection: action.direction,\n        currentMonth: action.newMonth,\n        isMonthSwitchingAnimating: !reduceAnimations\n      });\n    case 'finishMonthSwitchingAnimation':\n      return _extends({}, state, {\n        isMonthSwitchingAnimating: false\n      });\n    case 'changeFocusedDay':\n      {\n        if (state.focusedDay != null && action.focusedDay != null && utils.isSameDay(action.focusedDay, state.focusedDay)) {\n          return state;\n        }\n        const needMonthSwitch = action.focusedDay != null && !disableSwitchToMonthOnDayFocus && !utils.isSameMonth(state.currentMonth, action.focusedDay);\n        return _extends({}, state, {\n          focusedDay: action.focusedDay,\n          isMonthSwitchingAnimating: needMonthSwitch && !reduceAnimations && !action.withoutMonthSwitchingAnimation,\n          currentMonth: needMonthSwitch ? utils.startOfMonth(action.focusedDay) : state.currentMonth,\n          slideDirection: action.focusedDay != null && utils.isAfterDay(action.focusedDay, state.currentMonth) ? 'left' : 'right'\n        });\n      }\n    default:\n      throw new Error('missing support');\n  }\n};\nexport const useCalendarState = params => {\n  const {\n    value,\n    referenceDate: referenceDateProp,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus = false,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate,\n    timezone\n  } = params;\n  const utils = useUtils();\n  const reducerFn = React.useRef(createCalendarStateReducer(Boolean(reduceAnimations), disableSwitchToMonthOnDayFocus, utils)).current;\n  const referenceDate = React.useMemo(() => {\n    return singleItemValueManager.getInitialReferenceValue({\n      value,\n      utils,\n      timezone,\n      props: params,\n      referenceDate: referenceDateProp,\n      granularity: SECTION_TYPE_GRANULARITY.day\n    });\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  const [calendarState, dispatch] = React.useReducer(reducerFn, {\n    isMonthSwitchingAnimating: false,\n    focusedDay: referenceDate,\n    currentMonth: utils.startOfMonth(referenceDate),\n    slideDirection: 'left'\n  });\n  const handleChangeMonth = React.useCallback(payload => {\n    dispatch(_extends({\n      type: 'changeMonth'\n    }, payload));\n    if (onMonthChange) {\n      onMonthChange(payload.newMonth);\n    }\n  }, [onMonthChange]);\n  const changeMonth = React.useCallback(newDate => {\n    const newDateRequested = newDate;\n    if (utils.isSameMonth(newDateRequested, calendarState.currentMonth)) {\n      return;\n    }\n    handleChangeMonth({\n      newMonth: utils.startOfMonth(newDateRequested),\n      direction: utils.isAfterDay(newDateRequested, calendarState.currentMonth) ? 'left' : 'right'\n    });\n  }, [calendarState.currentMonth, handleChangeMonth, utils]);\n  const isDateDisabled = useIsDateDisabled({\n    shouldDisableDate,\n    minDate,\n    maxDate,\n    disableFuture,\n    disablePast,\n    timezone\n  });\n  const onMonthSwitchingAnimationEnd = React.useCallback(() => {\n    dispatch({\n      type: 'finishMonthSwitchingAnimation'\n    });\n  }, []);\n  const changeFocusedDay = useEventCallback((newFocusedDate, withoutMonthSwitchingAnimation) => {\n    if (!isDateDisabled(newFocusedDate)) {\n      dispatch({\n        type: 'changeFocusedDay',\n        focusedDay: newFocusedDate,\n        withoutMonthSwitchingAnimation\n      });\n    }\n  });\n  return {\n    referenceDate,\n    calendarState,\n    changeMonth,\n    changeFocusedDay,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    handleChangeMonth\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}