{"ast":null,"code":"// import  React from 'react';\n// import Box from '@mui/material/Box';\n// import {\n//   DataGridPremium,\n//   GridToolbar,\n//   useGridApiRef,\n//   useKeepGroupedColumnsHidden,\n// } from '@mui/x-data-grid-premium';\n// import { useDemoData } from '@mui/x-data-grid-generator';\n// const visibleFields = [\n//   'commodity',\n//   'quantity',\n//   'filledQuantity',\n//   'status',\n//   'isFilled',\n//   'unitPrice',\n//   'unitPriceCurrency',\n//   'subTotal',\n//   'feeRate',\n//   'feeAmount',\n//   'incoTerm',\n// ];\n// export default function Home() {\n//   const { data, loading } = useDemoData({\n//     dataSet: 'Commodity',\n//     rowLength: 100,\n//     editable: true,\n//     visibleFields,\n//   });\n//   const apiRef = useGridApiRef();\n//   const initialState = useKeepGroupedColumnsHidden({\n//     apiRef,\n//     initialState: {\n//       ...data.initialState,\n//       rowGrouping: {\n//         ...data.initialState?.rowGrouping,\n//         model: ['commodity'],\n//       },\n//       sorting: {\n//         sortModel: [{ field: '__row_group_by_columns_group__', sort: 'asc' }],\n//       },\n//       aggregation: {\n//         model: {\n//           quantity: 'sum',\n//         },\n//       },\n//     },\n//   });\n//   return (\n//     <div>\n//             <h1> Home </h1>\n//     <Box sx={{ height: 520, width: '100%' }}>\n//       <DataGridPremium\n//         {...data}\n//         apiRef={apiRef}\n//         loading={loading}\n//         disableRowSelectionOnClick\n//         initialState={initialState}\n//         slots={{ toolbar: GridToolbar }}\n//       />\n//     </Box>\n//     </div>\n//   );\n// }\nimport React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Home(){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:\" Home \"})});}","map":{"version":3,"names":["React","Home"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/src/Components/Pages/Home.js"],"sourcesContent":["// import  React from 'react';\r\n// import Box from '@mui/material/Box';\r\n// import {\r\n//   DataGridPremium,\r\n//   GridToolbar,\r\n//   useGridApiRef,\r\n//   useKeepGroupedColumnsHidden,\r\n// } from '@mui/x-data-grid-premium';\r\n// import { useDemoData } from '@mui/x-data-grid-generator';\r\n\r\n// const visibleFields = [\r\n//   'commodity',\r\n//   'quantity',\r\n//   'filledQuantity',\r\n//   'status',\r\n//   'isFilled',\r\n//   'unitPrice',\r\n//   'unitPriceCurrency',\r\n//   'subTotal',\r\n//   'feeRate',\r\n//   'feeAmount',\r\n//   'incoTerm',\r\n// ];\r\n\r\n// export default function Home() {\r\n//   const { data, loading } = useDemoData({\r\n//     dataSet: 'Commodity',\r\n//     rowLength: 100,\r\n//     editable: true,\r\n//     visibleFields,\r\n//   });\r\n//   const apiRef = useGridApiRef();\r\n\r\n//   const initialState = useKeepGroupedColumnsHidden({\r\n//     apiRef,\r\n//     initialState: {\r\n//       ...data.initialState,\r\n//       rowGrouping: {\r\n//         ...data.initialState?.rowGrouping,\r\n//         model: ['commodity'],\r\n//       },\r\n//       sorting: {\r\n//         sortModel: [{ field: '__row_group_by_columns_group__', sort: 'asc' }],\r\n//       },\r\n//       aggregation: {\r\n//         model: {\r\n//           quantity: 'sum',\r\n//         },\r\n//       },\r\n//     },\r\n//   });\r\n\r\n//   return (\r\n//     <div>\r\n//             <h1> Home </h1>\r\n//     <Box sx={{ height: 520, width: '100%' }}>\r\n//       <DataGridPremium\r\n//         {...data}\r\n//         apiRef={apiRef}\r\n//         loading={loading}\r\n//         disableRowSelectionOnClick\r\n//         initialState={initialState}\r\n//         slots={{ toolbar: GridToolbar }}\r\n//       />\r\n//     </Box>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React from \"react\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <div> Home </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAOA,MAAP,KAAkB,OAAlB,C,2CAEA,cAAe,SAASC,KAAT,EAAgB,CAC3B,mBACI,kCACI,+BADJ,EADJ,CAKH"},"metadata":{},"sourceType":"module"}