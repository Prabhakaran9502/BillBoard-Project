{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n      _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false; // TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n    column,\n    rowId,\n    editCellState,\n    align,\n    colIndex,\n    width,\n    className,\n    style: styleProp,\n    colSpan,\n    disableDragEvents,\n    isNotVisible,\n    pinnedOffset,\n    pinnedPosition,\n    sectionIndex,\n    sectionLength,\n    gridHasFiller,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onMouseOver,\n    onKeyDown,\n    onKeyUp,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps; // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n\n  const valueToRender = cellParamsWithAPI.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  let children;\n  let title;\n\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field); // eslint-disable-next-line @typescript-eslint/naming-convention\n\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParamsWithAPI.formattedValue;\n\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_composeClasses","composeClasses","unstable_ownerDocument","ownerDocument","unstable_capitalize","capitalize","fastMemo","doesSupportPreventScroll","getDataGridUtilityClass","gridClasses","GridCellModes","useGridSelector","objectShallowCompare","useGridApiContext","useGridRootProps","gridFocusCellSelector","MissingRowIdError","shouldCellShowLeftBorder","shouldCellShowRightBorder","GridPinnedColumnPosition","jsx","_jsx","PinnedPosition","gridPinnedColumnPositionLookup","LEFT","RIGHT","NONE","undefined","VIRTUAL","EMPTY_CELL_PARAMS","id","field","row","rowNode","depth","type","parent","groupingKey","colDef","computedWidth","cellMode","View","hasFocus","tabIndex","value","formattedValue","isEditable","api","useUtilityClasses","ownerState","align","showLeftBorder","showRightBorder","pinnedPosition","isSelected","isSelectionMode","classes","slots","root","warnedOnce","GridCell","forwardRef","props","ref","column","rowId","editCellState","colIndex","width","className","style","styleProp","colSpan","disableDragEvents","isNotVisible","pinnedOffset","sectionIndex","sectionLength","gridHasFiller","onClick","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver","other","apiRef","rootProps","cellParamsWithAPI","cellParams","current","getCellParams","result","e","unstable_applyPipeProcessors","canManageOwnFocus","getActions","getRowParams","some","action","disabled","rootClasses","getCellClassName","pipesClassName","filter","Boolean","join","classNames","cellClassName","push","display","valueToRender","cellRef","useRef","handleRef","focusElementRef","cellSelection","position","showCellVerticalBorder","publishMouseUp","useCallback","eventName","event","params","publishEvent","publishMouseDown","publish","propHandler","getRow","useMemo","padding","opacity","border","cellStyle","left","right","useEffect","Edit","doc","rootElementRef","contains","activeElement","focusableElement","querySelector","elementToFocus","focus","preventScroll","scrollPosition","getScrollPosition","scroll","handleFocus","onFocus","process","env","NODE_ENV","experimentalFeatures","warnIfFocusStateIsNotSynced","focusedCell","console","warn","children","title","renderCell","renderEditCell","updatedRow","getRowWithUpdatedValues","editCellStateRest","valueFormatter","valueString","toString","isValidElement","cloneElement","draggableEventHandlers","role","propTypes","oneOf","isRequired","string","number","object","bool","shape","changeReason","isProcessingProps","isValidating","any","func","oneOfType","MemoizedGridCell"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/components/cell/GridCell.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = cellParamsWithAPI.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParamsWithAPI.formattedValue;\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };"],"mappings":"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"},"metadata":{},"sourceType":"module"}