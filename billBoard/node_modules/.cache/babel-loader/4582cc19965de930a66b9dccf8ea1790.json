{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  }, // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\n\nexport { GridColumnGroupHeader };","map":{"version":3,"names":["_extends","React","unstable_useId","useId","unstable_composeClasses","composeClasses","getDataGridUtilityClass","useGridRootProps","gridColumnGroupsLookupSelector","useGridApiContext","useGridSelector","GridGenericColumnHeaderItem","isEventTargetInPortal","shouldCellShowLeftBorder","shouldCellShowRightBorder","jsx","_jsx","useUtilityClasses","ownerState","classes","headerAlign","isDragging","showLeftBorder","showRightBorder","groupId","pinnedPosition","slots","root","draggableContainer","titleContainer","titleContainerContent","GridColumnGroupHeader","props","width","depth","maxDepth","fields","height","colIndex","hasFocus","tabIndex","isLastColumn","style","indexInSection","sectionLength","gridHasFiller","rootProps","headerCellRef","useRef","apiRef","columnGroupsLookup","group","headerName","description","undefined","headerComponent","render","renderHeaderGroup","renderParams","useMemo","showCellVerticalBorder","label","id","elementId","useLayoutEffect","focusableElement","current","querySelector","elementToFocus","focus","publish","useCallback","eventName","event","publishEvent","mouseEventsHandlers","onKeyDown","onFocus","onBlur","headerClassName","ref","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","resizable","length","join"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };"],"mappings":"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"},"metadata":{},"sourceType":"module"}