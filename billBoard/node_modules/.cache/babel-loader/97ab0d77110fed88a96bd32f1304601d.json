{"ast":null,"code":"\"use strict\";\n\nexports.formatRelative = formatRelative;\n\nvar _index = require(\"./differenceInCalendarDays.js\");\n\nvar _index2 = require(\"./format.js\");\n\nvar _index3 = require(\"./toDate.js\");\n\nvar _index4 = require(\"./_lib/defaultLocale.js\");\n\nvar _index5 = require(\"./_lib/defaultOptions.js\");\n/**\n * The {@link formatRelative} function options.\n */\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The date in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(subDays(new Date(), 6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\n\n\nfunction formatRelative(date, baseDate, options) {\n  const _date = (0, _index3.toDate)(date);\n\n  const _baseDate = (0, _index3.toDate)(baseDate);\n\n  const defaultOptions = (0, _index5.getDefaultOptions)();\n  const locale = options?.locale ?? defaultOptions.locale ?? _index4.defaultLocale;\n  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n  const diff = (0, _index.differenceInCalendarDays)(_date, _baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let token;\n\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n\n  const formatStr = locale.formatRelative(token, _date, _baseDate, {\n    locale,\n    weekStartsOn\n  });\n  return (0, _index2.format)(_date, formatStr, {\n    locale,\n    weekStartsOn\n  });\n}","map":{"version":3,"names":["exports","formatRelative","_index","require","_index2","_index3","_index4","_index5","date","baseDate","options","_date","toDate","_baseDate","defaultOptions","getDefaultOptions","locale","defaultLocale","weekStartsOn","diff","differenceInCalendarDays","isNaN","RangeError","token","formatStr","format"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/date-fns/formatRelative.js"],"sourcesContent":["\"use strict\";\nexports.formatRelative = formatRelative;\nvar _index = require(\"./differenceInCalendarDays.js\");\nvar _index2 = require(\"./format.js\");\n\nvar _index3 = require(\"./toDate.js\");\n\nvar _index4 = require(\"./_lib/defaultLocale.js\");\nvar _index5 = require(\"./_lib/defaultOptions.js\");\n\n/**\n * The {@link formatRelative} function options.\n */\n\n/**\n * @name formatRelative\n * @category Common Helpers\n * @summary Represent the date in words relative to the given base date.\n *\n * @description\n * Represent the date in words relative to the given base date.\n *\n * | Distance to the base date | Result                    |\n * |---------------------------|---------------------------|\n * | Previous 6 days           | last Sunday at 04:30 AM   |\n * | Last day                  | yesterday at 04:30 AM     |\n * | Same day                  | today at 04:30 AM         |\n * | Next day                  | tomorrow at 04:30 AM      |\n * | Next 6 days               | Sunday at 04:30 AM        |\n * | Other                     | 12/31/2017                |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to format\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The date in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws `options.locale` must contain `formatRelative` property\n *\n * @example\n * // Represent the date of 6 days ago in words relative to the given base date. In this example, today is Wednesday\n * const result = formatRelative(subDays(new Date(), 6), new Date())\n * //=> \"last Thursday at 12:45 AM\"\n */\nfunction formatRelative(date, baseDate, options) {\n  const _date = (0, _index3.toDate)(date);\n  const _baseDate = (0, _index3.toDate)(baseDate);\n\n  const defaultOptions = (0, _index5.getDefaultOptions)();\n  const locale =\n    options?.locale ?? defaultOptions.locale ?? _index4.defaultLocale;\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const diff = (0, _index.differenceInCalendarDays)(_date, _baseDate);\n\n  if (isNaN(diff)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let token;\n  if (diff < -6) {\n    token = \"other\";\n  } else if (diff < -1) {\n    token = \"lastWeek\";\n  } else if (diff < 0) {\n    token = \"yesterday\";\n  } else if (diff < 1) {\n    token = \"today\";\n  } else if (diff < 2) {\n    token = \"tomorrow\";\n  } else if (diff < 7) {\n    token = \"nextWeek\";\n  } else {\n    token = \"other\";\n  }\n\n  const formatStr = locale.formatRelative(token, _date, _baseDate, {\n    locale,\n    weekStartsOn,\n  });\n  return (0, _index2.format)(_date, formatStr, { locale, weekStartsOn });\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,cAAR,GAAyBA,cAAzB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,+BAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAArB;;AAEA,IAAIE,OAAO,GAAGF,OAAO,CAAC,aAAD,CAArB;;AAEA,IAAIG,OAAO,GAAGH,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAII,OAAO,GAAGJ,OAAO,CAAC,0BAAD,CAArB;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBO,IAAxB,EAA8BC,QAA9B,EAAwCC,OAAxC,EAAiD;EAC/C,MAAMC,KAAK,GAAG,CAAC,GAAGN,OAAO,CAACO,MAAZ,EAAoBJ,IAApB,CAAd;;EACA,MAAMK,SAAS,GAAG,CAAC,GAAGR,OAAO,CAACO,MAAZ,EAAoBH,QAApB,CAAlB;;EAEA,MAAMK,cAAc,GAAG,CAAC,GAAGP,OAAO,CAACQ,iBAAZ,GAAvB;EACA,MAAMC,MAAM,GACVN,OAAO,EAAEM,MAAT,IAAmBF,cAAc,CAACE,MAAlC,IAA4CV,OAAO,CAACW,aADtD;EAEA,MAAMC,YAAY,GAChBR,OAAO,EAAEQ,YAAT,IACAR,OAAO,EAAEM,MAAT,EAAiBN,OAAjB,EAA0BQ,YAD1B,IAEAJ,cAAc,CAACI,YAFf,IAGAJ,cAAc,CAACE,MAAf,EAAuBN,OAAvB,EAAgCQ,YAHhC,IAIA,CALF;EAOA,MAAMC,IAAI,GAAG,CAAC,GAAGjB,MAAM,CAACkB,wBAAX,EAAqCT,KAArC,EAA4CE,SAA5C,CAAb;;EAEA,IAAIQ,KAAK,CAACF,IAAD,CAAT,EAAiB;IACf,MAAM,IAAIG,UAAJ,CAAe,oBAAf,CAAN;EACD;;EAED,IAAIC,KAAJ;;EACA,IAAIJ,IAAI,GAAG,CAAC,CAAZ,EAAe;IACbI,KAAK,GAAG,OAAR;EACD,CAFD,MAEO,IAAIJ,IAAI,GAAG,CAAC,CAAZ,EAAe;IACpBI,KAAK,GAAG,UAAR;EACD,CAFM,MAEA,IAAIJ,IAAI,GAAG,CAAX,EAAc;IACnBI,KAAK,GAAG,WAAR;EACD,CAFM,MAEA,IAAIJ,IAAI,GAAG,CAAX,EAAc;IACnBI,KAAK,GAAG,OAAR;EACD,CAFM,MAEA,IAAIJ,IAAI,GAAG,CAAX,EAAc;IACnBI,KAAK,GAAG,UAAR;EACD,CAFM,MAEA,IAAIJ,IAAI,GAAG,CAAX,EAAc;IACnBI,KAAK,GAAG,UAAR;EACD,CAFM,MAEA;IACLA,KAAK,GAAG,OAAR;EACD;;EAED,MAAMC,SAAS,GAAGR,MAAM,CAACf,cAAP,CAAsBsB,KAAtB,EAA6BZ,KAA7B,EAAoCE,SAApC,EAA+C;IAC/DG,MAD+D;IAE/DE;EAF+D,CAA/C,CAAlB;EAIA,OAAO,CAAC,GAAGd,OAAO,CAACqB,MAAZ,EAAoBd,KAApB,EAA2Ba,SAA3B,EAAsC;IAAER,MAAF;IAAUE;EAAV,CAAtC,CAAP;AACD"},"metadata":{},"sourceType":"script"}