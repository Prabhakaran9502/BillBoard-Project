{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { unstable_useDateField as useDateField } from '@mui/x-date-pickers/DateField';\nimport { useLocalizationContext, useValidation, useControlledValueWithTimezone, useDefaultizedDateField } from '@mui/x-date-pickers/internals';\nimport { validateDateRange } from '../../utils/validation/validateDateRange';\nimport { rangeValueManager } from '../../utils/valueManagers';\nimport { excludeProps } from './shared';\nimport { useMultiInputFieldSelectedSections } from '../useMultiInputFieldSelectedSections';\nexport const useMultiInputDateRangeField = _ref => {\n  let {\n    sharedProps: inSharedProps,\n    startTextFieldProps,\n    unstableStartFieldRef,\n    endTextFieldProps,\n    unstableEndFieldRef\n  } = _ref;\n  const sharedProps = useDefaultizedDateField(inSharedProps);\n  const adapter = useLocalizationContext();\n  const {\n    value: valueProp,\n    defaultValue,\n    format,\n    formatDensity,\n    shouldRespectLeadingZeros,\n    onChange,\n    disabled,\n    readOnly,\n    selectedSections,\n    onSelectedSectionsChange,\n    timezone: timezoneProp,\n    enableAccessibleFieldDOMStructure,\n    autoFocus\n  } = sharedProps;\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'useMultiInputDateRangeField',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: rangeValueManager\n  }); // TODO: Maybe export utility from `useField` instead of copy/pasting the logic\n\n  const buildChangeHandler = index => {\n    return (newDate, rawContext) => {\n      const newDateRange = index === 0 ? [newDate, value[1]] : [value[0], newDate];\n\n      const context = _extends({}, rawContext, {\n        validationError: validateDateRange({\n          adapter,\n          value: newDateRange,\n          props: _extends({}, sharedProps, {\n            timezone\n          })\n        })\n      });\n\n      handleValueChange(newDateRange, context);\n    };\n  };\n\n  const handleStartDateChange = useEventCallback(buildChangeHandler(0));\n  const handleEndDateChange = useEventCallback(buildChangeHandler(1));\n  const validationError = useValidation(_extends({}, sharedProps, {\n    value,\n    timezone\n  }), validateDateRange, rangeValueManager.isSameError, rangeValueManager.defaultErrorState);\n  const selectedSectionsResponse = useMultiInputFieldSelectedSections({\n    selectedSections,\n    onSelectedSectionsChange,\n    unstableStartFieldRef,\n    unstableEndFieldRef\n  });\n\n  const startFieldProps = _extends({\n    error: !!validationError[0]\n  }, startTextFieldProps, selectedSectionsResponse.start, {\n    disabled,\n    readOnly,\n    format,\n    formatDensity,\n    shouldRespectLeadingZeros,\n    timezone,\n    value: valueProp === undefined ? undefined : valueProp[0],\n    defaultValue: defaultValue === undefined ? undefined : defaultValue[0],\n    onChange: handleStartDateChange,\n    enableAccessibleFieldDOMStructure,\n    autoFocus // Do not add on end field.\n\n  });\n\n  const endFieldProps = _extends({\n    error: !!validationError[1]\n  }, endTextFieldProps, selectedSectionsResponse.end, {\n    format,\n    formatDensity,\n    shouldRespectLeadingZeros,\n    disabled,\n    readOnly,\n    timezone,\n    value: valueProp === undefined ? undefined : valueProp[1],\n    defaultValue: defaultValue === undefined ? undefined : defaultValue[1],\n    onChange: handleEndDateChange,\n    enableAccessibleFieldDOMStructure\n  });\n\n  const startDateResponse = useDateField(startFieldProps);\n  const endDateResponse = useDateField(endFieldProps);\n  /* TODO: Undo this change when a clearable behavior for multiple input range fields is implemented */\n\n  return {\n    startDate: excludeProps(startDateResponse, ['clearable', 'onClear']),\n    endDate: excludeProps(endDateResponse, ['clearable', 'onClear'])\n  };\n};","map":{"version":3,"names":["_extends","useEventCallback","unstable_useDateField","useDateField","useLocalizationContext","useValidation","useControlledValueWithTimezone","useDefaultizedDateField","validateDateRange","rangeValueManager","excludeProps","useMultiInputFieldSelectedSections","useMultiInputDateRangeField","sharedProps","inSharedProps","startTextFieldProps","unstableStartFieldRef","endTextFieldProps","unstableEndFieldRef","adapter","value","valueProp","defaultValue","format","formatDensity","shouldRespectLeadingZeros","onChange","disabled","readOnly","selectedSections","onSelectedSectionsChange","timezone","timezoneProp","enableAccessibleFieldDOMStructure","autoFocus","handleValueChange","name","valueManager","buildChangeHandler","index","newDate","rawContext","newDateRange","context","validationError","props","handleStartDateChange","handleEndDateChange","isSameError","defaultErrorState","selectedSectionsResponse","startFieldProps","error","start","undefined","endFieldProps","end","startDateResponse","endDateResponse","startDate","endDate"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-date-pickers-pro/internals/hooks/useMultiInputRangeField/useMultiInputDateRangeField.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { unstable_useDateField as useDateField } from '@mui/x-date-pickers/DateField';\nimport { useLocalizationContext, useValidation, useControlledValueWithTimezone, useDefaultizedDateField } from '@mui/x-date-pickers/internals';\nimport { validateDateRange } from '../../utils/validation/validateDateRange';\nimport { rangeValueManager } from '../../utils/valueManagers';\nimport { excludeProps } from './shared';\nimport { useMultiInputFieldSelectedSections } from '../useMultiInputFieldSelectedSections';\nexport const useMultiInputDateRangeField = ({\n  sharedProps: inSharedProps,\n  startTextFieldProps,\n  unstableStartFieldRef,\n  endTextFieldProps,\n  unstableEndFieldRef\n}) => {\n  const sharedProps = useDefaultizedDateField(inSharedProps);\n  const adapter = useLocalizationContext();\n  const {\n    value: valueProp,\n    defaultValue,\n    format,\n    formatDensity,\n    shouldRespectLeadingZeros,\n    onChange,\n    disabled,\n    readOnly,\n    selectedSections,\n    onSelectedSectionsChange,\n    timezone: timezoneProp,\n    enableAccessibleFieldDOMStructure,\n    autoFocus\n  } = sharedProps;\n  const {\n    value,\n    handleValueChange,\n    timezone\n  } = useControlledValueWithTimezone({\n    name: 'useMultiInputDateRangeField',\n    timezone: timezoneProp,\n    value: valueProp,\n    defaultValue,\n    onChange,\n    valueManager: rangeValueManager\n  });\n\n  // TODO: Maybe export utility from `useField` instead of copy/pasting the logic\n  const buildChangeHandler = index => {\n    return (newDate, rawContext) => {\n      const newDateRange = index === 0 ? [newDate, value[1]] : [value[0], newDate];\n      const context = _extends({}, rawContext, {\n        validationError: validateDateRange({\n          adapter,\n          value: newDateRange,\n          props: _extends({}, sharedProps, {\n            timezone\n          })\n        })\n      });\n      handleValueChange(newDateRange, context);\n    };\n  };\n  const handleStartDateChange = useEventCallback(buildChangeHandler(0));\n  const handleEndDateChange = useEventCallback(buildChangeHandler(1));\n  const validationError = useValidation(_extends({}, sharedProps, {\n    value,\n    timezone\n  }), validateDateRange, rangeValueManager.isSameError, rangeValueManager.defaultErrorState);\n  const selectedSectionsResponse = useMultiInputFieldSelectedSections({\n    selectedSections,\n    onSelectedSectionsChange,\n    unstableStartFieldRef,\n    unstableEndFieldRef\n  });\n  const startFieldProps = _extends({\n    error: !!validationError[0]\n  }, startTextFieldProps, selectedSectionsResponse.start, {\n    disabled,\n    readOnly,\n    format,\n    formatDensity,\n    shouldRespectLeadingZeros,\n    timezone,\n    value: valueProp === undefined ? undefined : valueProp[0],\n    defaultValue: defaultValue === undefined ? undefined : defaultValue[0],\n    onChange: handleStartDateChange,\n    enableAccessibleFieldDOMStructure,\n    autoFocus // Do not add on end field.\n  });\n  const endFieldProps = _extends({\n    error: !!validationError[1]\n  }, endTextFieldProps, selectedSectionsResponse.end, {\n    format,\n    formatDensity,\n    shouldRespectLeadingZeros,\n    disabled,\n    readOnly,\n    timezone,\n    value: valueProp === undefined ? undefined : valueProp[1],\n    defaultValue: defaultValue === undefined ? undefined : defaultValue[1],\n    onChange: handleEndDateChange,\n    enableAccessibleFieldDOMStructure\n  });\n  const startDateResponse = useDateField(startFieldProps);\n  const endDateResponse = useDateField(endFieldProps);\n\n  /* TODO: Undo this change when a clearable behavior for multiple input range fields is implemented */\n  return {\n    startDate: excludeProps(startDateResponse, ['clearable', 'onClear']),\n    endDate: excludeProps(endDateResponse, ['clearable', 'onClear'])\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}