{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRowTree = void 0;\n\nvar _xDataGrid = require(\"@mui/x-data-grid\");\n\nvar _internals = require(\"@mui/x-data-grid/internals\");\n\nvar _insertDataRowInTree = require(\"./insertDataRowInTree\");\n/**\n * Transform a list of rows into a tree structure where each row references its parent and children.\n */\n\n\nconst createRowTree = params => {\n  const dataRowIds = [];\n  const tree = {\n    [_xDataGrid.GRID_ROOT_GROUP_ID]: (0, _internals.buildRootGroup)()\n  };\n  const treeDepths = {};\n\n  for (let i = 0; i < params.nodes.length; i += 1) {\n    const node = params.nodes[i];\n    dataRowIds.push(node.id);\n    (0, _insertDataRowInTree.insertDataRowInTree)({\n      tree,\n      previousTree: params.previousTree,\n      id: node.id,\n      path: node.path,\n      onDuplicatePath: params.onDuplicatePath,\n      treeDepths,\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\n    });\n  }\n\n  return {\n    tree,\n    treeDepths,\n    groupingName: params.groupingName,\n    dataRowIds\n  };\n};\n\nexports.createRowTree = createRowTree;","map":{"version":3,"names":["Object","defineProperty","exports","value","createRowTree","_xDataGrid","require","_internals","_insertDataRowInTree","params","dataRowIds","tree","GRID_ROOT_GROUP_ID","buildRootGroup","treeDepths","i","nodes","length","node","push","id","insertDataRowInTree","previousTree","path","onDuplicatePath","isGroupExpandedByDefault","defaultGroupingExpansionDepth","groupingName"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-pro/utils/tree/createRowTree.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRowTree = void 0;\nvar _xDataGrid = require(\"@mui/x-data-grid\");\nvar _internals = require(\"@mui/x-data-grid/internals\");\nvar _insertDataRowInTree = require(\"./insertDataRowInTree\");\n/**\n * Transform a list of rows into a tree structure where each row references its parent and children.\n */\nconst createRowTree = params => {\n  const dataRowIds = [];\n  const tree = {\n    [_xDataGrid.GRID_ROOT_GROUP_ID]: (0, _internals.buildRootGroup)()\n  };\n  const treeDepths = {};\n  for (let i = 0; i < params.nodes.length; i += 1) {\n    const node = params.nodes[i];\n    dataRowIds.push(node.id);\n    (0, _insertDataRowInTree.insertDataRowInTree)({\n      tree,\n      previousTree: params.previousTree,\n      id: node.id,\n      path: node.path,\n      onDuplicatePath: params.onDuplicatePath,\n      treeDepths,\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\n    });\n  }\n  return {\n    tree,\n    treeDepths,\n    groupingName: params.groupingName,\n    dataRowIds\n  };\n};\nexports.createRowTree = createRowTree;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,IAAIC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,4BAAD,CAAxB;;AACA,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,uBAAD,CAAlC;AACA;AACA;AACA;;;AACA,MAAMF,aAAa,GAAGK,MAAM,IAAI;EAC9B,MAAMC,UAAU,GAAG,EAAnB;EACA,MAAMC,IAAI,GAAG;IACX,CAACN,UAAU,CAACO,kBAAZ,GAAiC,CAAC,GAAGL,UAAU,CAACM,cAAf;EADtB,CAAb;EAGA,MAAMC,UAAU,GAAG,EAAnB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,MAAM,CAACO,KAAP,CAAaC,MAAjC,EAAyCF,CAAC,IAAI,CAA9C,EAAiD;IAC/C,MAAMG,IAAI,GAAGT,MAAM,CAACO,KAAP,CAAaD,CAAb,CAAb;IACAL,UAAU,CAACS,IAAX,CAAgBD,IAAI,CAACE,EAArB;IACA,CAAC,GAAGZ,oBAAoB,CAACa,mBAAzB,EAA8C;MAC5CV,IAD4C;MAE5CW,YAAY,EAAEb,MAAM,CAACa,YAFuB;MAG5CF,EAAE,EAAEF,IAAI,CAACE,EAHmC;MAI5CG,IAAI,EAAEL,IAAI,CAACK,IAJiC;MAK5CC,eAAe,EAAEf,MAAM,CAACe,eALoB;MAM5CV,UAN4C;MAO5CW,wBAAwB,EAAEhB,MAAM,CAACgB,wBAPW;MAQ5CC,6BAA6B,EAAEjB,MAAM,CAACiB;IARM,CAA9C;EAUD;;EACD,OAAO;IACLf,IADK;IAELG,UAFK;IAGLa,YAAY,EAAElB,MAAM,CAACkB,YAHhB;IAILjB;EAJK,CAAP;AAMD,CA1BD;;AA2BAR,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}