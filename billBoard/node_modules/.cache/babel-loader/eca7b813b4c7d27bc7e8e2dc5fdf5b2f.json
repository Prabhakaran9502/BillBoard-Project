{"ast":null,"code":"\"use strict\";\n'use client'; // based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsFocusVisible;\nexports.teardown = teardown;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _useTimeout = require(\"../useTimeout/useTimeout\");\n\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n      t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\n\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n\n  var t = _getRequireWildcardCache(r);\n\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n    __proto__: null\n  },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n\n  return n.default = e, t && t.set(e, n), n;\n}\n\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nconst hadFocusVisibleRecentlyTimeout = new _useTimeout.Timeout();\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {// Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  } // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n\nfunction useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n  /**\n   * Should be called if a blur event is fired\n   */\n\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      hadFocusVisibleRecentlyTimeout.start(100, () => {\n        hadFocusVisibleRecently = false;\n      });\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Should be called if a blur event is fired\n   */\n\n\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","useIsFocusVisible","teardown","React","_interopRequireWildcard","require","_useTimeout","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","Timeout","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","focusTriggersKeyboardModality","node","type","tagName","readOnly","isContentEditable","handleKeyDown","event","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","visibilityState","prepare","doc","addEventListener","removeEventListener","isFocusVisible","target","matches","error","ref","useCallback","ownerDocument","isFocusVisibleRef","useRef","handleBlurVisible","current","start","handleFocusVisible","onFocus","onBlur"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/utils/useIsFocusVisible/useIsFocusVisible.js"],"sourcesContent":["\"use strict\";\n'use client';\n\n// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIsFocusVisible;\nexports.teardown = teardown;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useTimeout = require(\"../useTimeout/useTimeout\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nconst hadFocusVisibleRecentlyTimeout = new _useTimeout.Timeout();\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n  if (node.isContentEditable) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  hadKeyboardEvent = true;\n}\n\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\nfunction teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {\n    // Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  }\n\n  // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\nfunction useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      hadFocusVisibleRecentlyTimeout.start(100, () => {\n        hadFocusVisibleRecently = false;\n      });\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n    return false;\n  }\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}