{"ast":null,"code":"import getUserLocale from 'get-user-locale';\nvar formatterCache = new Map();\n\nfunction getFormatter(options) {\n  return function formatter(locale, date) {\n    var localeWithDefault = locale || getUserLocale();\n\n    if (!formatterCache.has(localeWithDefault)) {\n      formatterCache.set(localeWithDefault, new Map());\n    }\n\n    var formatterCacheLocale = formatterCache.get(localeWithDefault);\n\n    if (!formatterCacheLocale.has(options)) {\n      formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault || undefined, options).format);\n    }\n\n    return formatterCacheLocale.get(options)(date);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n * @returns {Date} Date with hour set to 12.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatDayOptions = {\n  day: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nexport var formatDate = getSafeFormatter(formatDateOptions);\nexport var formatDay = getSafeFormatter(formatDayOptions);\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexport var formatYear = getSafeFormatter(formatYearOptions);","map":{"version":3,"names":["getUserLocale","formatterCache","Map","getFormatter","options","formatter","locale","date","localeWithDefault","has","set","formatterCacheLocale","get","Intl","DateTimeFormat","undefined","format","toSafeHour","safeDate","Date","setHours","getSafeFormatter","formatDateOptions","day","month","year","formatDayOptions","formatLongDateOptions","formatMonthOptions","formatMonthYearOptions","formatShortWeekdayOptions","weekday","formatWeekdayOptions","formatYearOptions","formatDate","formatDay","formatLongDate","formatMonth","formatMonthYear","formatShortWeekday","formatWeekday","formatYear"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/react-calendar/dist/esm/shared/dateFormatter.js"],"sourcesContent":["import getUserLocale from 'get-user-locale';\nvar formatterCache = new Map();\nfunction getFormatter(options) {\n    return function formatter(locale, date) {\n        var localeWithDefault = locale || getUserLocale();\n        if (!formatterCache.has(localeWithDefault)) {\n            formatterCache.set(localeWithDefault, new Map());\n        }\n        var formatterCacheLocale = formatterCache.get(localeWithDefault);\n        if (!formatterCacheLocale.has(options)) {\n            formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault || undefined, options).format);\n        }\n        return formatterCacheLocale.get(options)(date);\n    };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n * @returns {Date} Date with hour set to 12.\n */\nfunction toSafeHour(date) {\n    var safeDate = new Date(date);\n    return new Date(safeDate.setHours(12));\n}\nfunction getSafeFormatter(options) {\n    return function (locale, date) { return getFormatter(options)(locale, toSafeHour(date)); };\n}\nvar formatDateOptions = {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric',\n};\nvar formatDayOptions = { day: 'numeric' };\nvar formatLongDateOptions = {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n};\nvar formatMonthOptions = { month: 'long' };\nvar formatMonthYearOptions = {\n    month: 'long',\n    year: 'numeric',\n};\nvar formatShortWeekdayOptions = { weekday: 'short' };\nvar formatWeekdayOptions = { weekday: 'long' };\nvar formatYearOptions = { year: 'numeric' };\nexport var formatDate = getSafeFormatter(formatDateOptions);\nexport var formatDay = getSafeFormatter(formatDayOptions);\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexport var formatYear = getSafeFormatter(formatYearOptions);\n"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,IAAIC,cAAc,GAAG,IAAIC,GAAJ,EAArB;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;EAC3B,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;IACpC,IAAIC,iBAAiB,GAAGF,MAAM,IAAIN,aAAa,EAA/C;;IACA,IAAI,CAACC,cAAc,CAACQ,GAAf,CAAmBD,iBAAnB,CAAL,EAA4C;MACxCP,cAAc,CAACS,GAAf,CAAmBF,iBAAnB,EAAsC,IAAIN,GAAJ,EAAtC;IACH;;IACD,IAAIS,oBAAoB,GAAGV,cAAc,CAACW,GAAf,CAAmBJ,iBAAnB,CAA3B;;IACA,IAAI,CAACG,oBAAoB,CAACF,GAArB,CAAyBL,OAAzB,CAAL,EAAwC;MACpCO,oBAAoB,CAACD,GAArB,CAAyBN,OAAzB,EAAkC,IAAIS,IAAI,CAACC,cAAT,CAAwBN,iBAAiB,IAAIO,SAA7C,EAAwDX,OAAxD,EAAiEY,MAAnG;IACH;;IACD,OAAOL,oBAAoB,CAACC,GAArB,CAAyBR,OAAzB,EAAkCG,IAAlC,CAAP;EACH,CAVD;AAWH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASU,UAAT,CAAoBV,IAApB,EAA0B;EACtB,IAAIW,QAAQ,GAAG,IAAIC,IAAJ,CAASZ,IAAT,CAAf;EACA,OAAO,IAAIY,IAAJ,CAASD,QAAQ,CAACE,QAAT,CAAkB,EAAlB,CAAT,CAAP;AACH;;AACD,SAASC,gBAAT,CAA0BjB,OAA1B,EAAmC;EAC/B,OAAO,UAAUE,MAAV,EAAkBC,IAAlB,EAAwB;IAAE,OAAOJ,YAAY,CAACC,OAAD,CAAZ,CAAsBE,MAAtB,EAA8BW,UAAU,CAACV,IAAD,CAAxC,CAAP;EAAyD,CAA1F;AACH;;AACD,IAAIe,iBAAiB,GAAG;EACpBC,GAAG,EAAE,SADe;EAEpBC,KAAK,EAAE,SAFa;EAGpBC,IAAI,EAAE;AAHc,CAAxB;AAKA,IAAIC,gBAAgB,GAAG;EAAEH,GAAG,EAAE;AAAP,CAAvB;AACA,IAAII,qBAAqB,GAAG;EACxBJ,GAAG,EAAE,SADmB;EAExBC,KAAK,EAAE,MAFiB;EAGxBC,IAAI,EAAE;AAHkB,CAA5B;AAKA,IAAIG,kBAAkB,GAAG;EAAEJ,KAAK,EAAE;AAAT,CAAzB;AACA,IAAIK,sBAAsB,GAAG;EACzBL,KAAK,EAAE,MADkB;EAEzBC,IAAI,EAAE;AAFmB,CAA7B;AAIA,IAAIK,yBAAyB,GAAG;EAAEC,OAAO,EAAE;AAAX,CAAhC;AACA,IAAIC,oBAAoB,GAAG;EAAED,OAAO,EAAE;AAAX,CAA3B;AACA,IAAIE,iBAAiB,GAAG;EAAER,IAAI,EAAE;AAAR,CAAxB;AACA,OAAO,IAAIS,UAAU,GAAGb,gBAAgB,CAACC,iBAAD,CAAjC;AACP,OAAO,IAAIa,SAAS,GAAGd,gBAAgB,CAACK,gBAAD,CAAhC;AACP,OAAO,IAAIU,cAAc,GAAGf,gBAAgB,CAACM,qBAAD,CAArC;AACP,OAAO,IAAIU,WAAW,GAAGhB,gBAAgB,CAACO,kBAAD,CAAlC;AACP,OAAO,IAAIU,eAAe,GAAGjB,gBAAgB,CAACQ,sBAAD,CAAtC;AACP,OAAO,IAAIU,kBAAkB,GAAGlB,gBAAgB,CAACS,yBAAD,CAAzC;AACP,OAAO,IAAIU,aAAa,GAAGnB,gBAAgB,CAACW,oBAAD,CAApC;AACP,OAAO,IAAIS,UAAU,GAAGpB,gBAAgB,CAACY,iBAAD,CAAjC"},"metadata":{},"sourceType":"module"}