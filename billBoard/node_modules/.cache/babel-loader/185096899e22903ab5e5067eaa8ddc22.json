{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n\n    if (!element) {\n      return;\n    }\n\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n\n    if (!dimensions.isReady) {\n      return 0;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width; // We recalculate the scroll y to consider the size of the x scrollbar.\n\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  const dimensions = apiRef.current.state.dimensions;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n\n    const set = (k, v) => root.style.setProperty(k, v);\n\n    set('--DataGrid-width', `${dimensions.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n    set('--height', `${dimensions.rowHeight}px`);\n  }, [root, dimensions]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\n\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n} // Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\n\n\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\n\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","map":{"version":3,"names":["_extends","React","unstable_ownerDocument","ownerDocument","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useEventCallback","useEventCallback","unstable_ownerWindow","ownerWindow","useGridApiEventHandler","useGridApiOptionHandler","useGridApiMethod","throttle","useGridLogger","gridColumnsTotalWidthSelector","gridVisiblePinnedColumnDefinitionsSelector","gridDimensionsSelector","gridDensityFactorSelector","gridRenderContextSelector","useGridSelector","getVisibleRows","gridRowsMetaSelector","calculatePinnedRowsHeight","getTotalHeaderHeight","EMPTY_SIZE","width","height","EMPTY_DIMENSIONS","isReady","root","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","state","dimensions","useGridDimensions","apiRef","props","logger","errorShown","useRef","rootDimensionsRef","rowsMeta","pinnedColumns","densityFactor","Math","floor","columnHeaderHeight","roundToDecimalPlaces","left","reduce","w","col","computedWidth","right","savedSize","setSavedSize","useState","debouncedSetSavedSize","useMemo","resizeThrottleMs","previousSize","getRootDimensions","current","setDimensions","setState","resize","useCallback","element","mainElementRef","computedStyle","getComputedStyle","newSize","parseFloat","areElementSizesEqual","publishEvent","getViewportPageSize","currentPage","pagination","paginationMode","getRowHeight","renderContext","viewportPageSize","lastRowIndex","firstRowIndex","min","rows","length","maximumPageSizeWithoutScrollBar","updateDimensions","rootElement","rootElementRef","pinnedRowsHeight","measureScrollbarSize","top","bottom","nonPinnedColumnsTotalWidth","currentPageTotalHeight","autoHeight","round","max","content","container","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","updateRenderContext","apiPublic","apiPrivate","set","k","v","style","setProperty","Number","isFirstSizing","handleResize","size","isJSDOM","test","window","navigator","userAgent","error","join","onResize","undefined","doc","scrollDiv","createElement","position","overflow","className","appendChild","offsetWidth","clientWidth","removeChild","value","decimals","a","b"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  const dimensions = apiRef.current.state.dimensions;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensions.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n    set('--height', `${dimensions.rowHeight}px`);\n  }, [root, dimensions]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}