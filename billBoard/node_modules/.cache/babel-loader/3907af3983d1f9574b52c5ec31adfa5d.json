{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n});\n\nfunction GridVirtualScrollerFiller() {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n\n  if (height === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\n\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","map":{"version":3,"names":["React","styled","fastMemo","useGridSelector","useGridApiContext","gridDimensionsSelector","gridClasses","jsx","_jsx","jsxs","_jsxs","Filler","display","flexDirection","width","boxSizing","Pinned","position","height","borderTop","backgroundColor","PinnedLeft","left","borderRight","PinnedRight","right","borderLeft","Main","flexGrow","GridVirtualScrollerFiller","apiRef","viewportOuterSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","leftPinnedWidth","rightPinnedWidth","scrollbarHeight","expandedHeight","Math","max","className","filler","role","style","children","Memoized"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller() {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };"],"mappings":"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"},"metadata":{},"sourceType":"module"}