{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridClasses } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\nexport const useGridDetailPanelPreProcessors = (privateApiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n\n      return columnsState;\n    } // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n\n\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    } // Otherwise, add the toggle column at the beginning\n\n\n    columnsState.orderedFields = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [privateApiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(privateApiRef.current.state);\n\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n\n    return [...classes, gridClasses['row--detailPanelExpanded']];\n  }, [privateApiRef, props.getDetailPanelContent]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', addToggleColumn);\n  useGridRegisterPipeProcessor(privateApiRef, 'rowClassName', addExpandedClassToRow);\n};","map":{"version":3,"names":["_extends","React","gridClasses","useGridRegisterPipeProcessor","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DETAIL_PANEL_TOGGLE_COL_DEF","gridDetailPanelExpandedRowIdsSelector","useGridDetailPanelPreProcessors","privateApiRef","props","addToggleColumn","useCallback","columnsState","getDetailPanelContent","lookup","orderedFields","filter","field","headerName","current","getLocaleText","addExpandedClassToRow","classes","id","expandedRowIds","state","includes"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid-pro/esm/hooks/features/detailPanel/useGridDetailPanelPreProcessors.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridClasses } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from './gridDetailPanelToggleColDef';\nimport { gridDetailPanelExpandedRowIdsSelector } from './gridDetailPanelSelector';\nexport const useGridDetailPanelPreProcessors = (privateApiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n      return columnsState;\n    }\n\n    // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    }\n\n    // Otherwise, add the toggle column at the beginning\n    columnsState.orderedFields = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [privateApiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(privateApiRef.current.state);\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n    return [...classes, gridClasses['row--detailPanelExpanded']];\n  }, [privateApiRef, props.getDetailPanelContent]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', addToggleColumn);\n  useGridRegisterPipeProcessor(privateApiRef, 'rowClassName', addExpandedClassToRow);\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,4BAAT,QAA6C,4BAA7C;AACA,SAASC,8BAAT,EAAyCC,gCAAzC,QAAiF,+BAAjF;AACA,SAASC,qCAAT,QAAsD,2BAAtD;AACA,OAAO,MAAMC,+BAA+B,GAAG,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;EACvE,MAAMC,eAAe,GAAGT,KAAK,CAACU,WAAN,CAAkBC,YAAY,IAAI;IACxD,IAAIH,KAAK,CAACI,qBAAN,IAA+B,IAAnC,EAAyC;MACvC;MACA,IAAID,YAAY,CAACE,MAAb,CAAoBV,8BAApB,CAAJ,EAAyD;QACvD,OAAOQ,YAAY,CAACE,MAAb,CAAoBV,8BAApB,CAAP;QACAQ,YAAY,CAACG,aAAb,GAA6BH,YAAY,CAACG,aAAb,CAA2BC,MAA3B,CAAkCC,KAAK,IAAIA,KAAK,KAAKb,8BAArD,CAA7B;MACD;;MACD,OAAOQ,YAAP;IACD,CARuD,CAUxD;IACA;;;IACA,IAAIA,YAAY,CAACE,MAAb,CAAoBV,8BAApB,CAAJ,EAAyD;MACvD,OAAOQ,YAAP;IACD,CAduD,CAgBxD;;;IACAA,YAAY,CAACG,aAAb,GAA6B,CAACX,8BAAD,EAAiC,GAAGQ,YAAY,CAACG,aAAjD,CAA7B;IACAH,YAAY,CAACE,MAAb,CAAoBV,8BAApB,IAAsDJ,QAAQ,CAAC,EAAD,EAAKK,gCAAL,EAAuC;MACnGa,UAAU,EAAEV,aAAa,CAACW,OAAd,CAAsBC,aAAtB,CAAoC,mBAApC;IADuF,CAAvC,CAA9D;IAGA,OAAOR,YAAP;EACD,CAtBuB,EAsBrB,CAACJ,aAAD,EAAgBC,KAAK,CAACI,qBAAtB,CAtBqB,CAAxB;EAuBA,MAAMQ,qBAAqB,GAAGpB,KAAK,CAACU,WAAN,CAAkB,CAACW,OAAD,EAAUC,EAAV,KAAiB;IAC/D,IAAId,KAAK,CAACI,qBAAN,IAA+B,IAAnC,EAAyC;MACvC,OAAOS,OAAP;IACD;;IACD,MAAME,cAAc,GAAGlB,qCAAqC,CAACE,aAAa,CAACW,OAAd,CAAsBM,KAAvB,CAA5D;;IACA,IAAI,CAACD,cAAc,CAACE,QAAf,CAAwBH,EAAxB,CAAL,EAAkC;MAChC,OAAOD,OAAP;IACD;;IACD,OAAO,CAAC,GAAGA,OAAJ,EAAapB,WAAW,CAAC,0BAAD,CAAxB,CAAP;EACD,CAT6B,EAS3B,CAACM,aAAD,EAAgBC,KAAK,CAACI,qBAAtB,CAT2B,CAA9B;EAUAV,4BAA4B,CAACK,aAAD,EAAgB,gBAAhB,EAAkCE,eAAlC,CAA5B;EACAP,4BAA4B,CAACK,aAAD,EAAgB,cAAhB,EAAgCa,qBAAhC,CAA5B;AACD,CApCM"},"metadata":{},"sourceType":"module"}