{"ast":null,"code":"'use strict';\n\nvar hasOwn = require('hasown');\n\nvar hasUnscopables = typeof Symbol === 'function' && typeof Symbol.unscopables === 'symbol';\nvar map = hasUnscopables && Array.prototype[Symbol.unscopables];\nvar $TypeError = TypeError;\n\nmodule.exports = function shimUnscopables(method) {\n  if (typeof method !== 'string' || !method) {\n    throw new $TypeError('method must be a non-empty string');\n  }\n\n  if (!hasOwn(Array.prototype, method)) {\n    throw new $TypeError('method must be on Array.prototype');\n  }\n\n  if (hasUnscopables) {\n    map[method] = true;\n  }\n};","map":{"version":3,"names":["hasOwn","require","hasUnscopables","Symbol","unscopables","map","Array","prototype","$TypeError","TypeError","module","exports","shimUnscopables","method"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-shim-unscopables/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = require('hasown');\n\nvar hasUnscopables = typeof Symbol === 'function' && typeof Symbol.unscopables === 'symbol';\n\nvar map = hasUnscopables && Array.prototype[Symbol.unscopables];\n\nvar $TypeError = TypeError;\n\nmodule.exports = function shimUnscopables(method) {\n\tif (typeof method !== 'string' || !method) {\n\t\tthrow new $TypeError('method must be a non-empty string');\n\t}\n\tif (!hasOwn(Array.prototype, method)) {\n\t\tthrow new $TypeError('method must be on Array.prototype');\n\t}\n\tif (hasUnscopables) {\n\t\tmap[method] = true;\n\t}\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,cAAc,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,WAAd,KAA8B,QAAnF;AAEA,IAAIC,GAAG,GAAGH,cAAc,IAAII,KAAK,CAACC,SAAN,CAAgBJ,MAAM,CAACC,WAAvB,CAA5B;AAEA,IAAII,UAAU,GAAGC,SAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;EACjD,IAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8B,CAACA,MAAnC,EAA2C;IAC1C,MAAM,IAAIL,UAAJ,CAAe,mCAAf,CAAN;EACA;;EACD,IAAI,CAACR,MAAM,CAACM,KAAK,CAACC,SAAP,EAAkBM,MAAlB,CAAX,EAAsC;IACrC,MAAM,IAAIL,UAAJ,CAAe,mCAAf,CAAN;EACA;;EACD,IAAIN,cAAJ,EAAoB;IACnBG,GAAG,CAACQ,MAAD,CAAH,GAAc,IAAd;EACA;AACD,CAVD"},"metadata":{},"sourceType":"script"}