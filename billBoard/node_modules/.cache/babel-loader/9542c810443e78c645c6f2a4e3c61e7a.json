{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridRowMaximumTreeDepthSelector, gridSortModelSelector, useGridApiContext, useGridSelector, getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { gridEditRowsStateSelector, isEventTargetInPortal } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isDraggable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowReorderCell', isDraggable && 'rowReorderCell--draggable'],\n    placeholder: ['rowReorderCellPlaceholder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridRowReorderCell(params) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector); // eslint-disable-next-line no-underscore-dangle\n\n  const cellValue = params.row.__reorder__ || params.id; // TODO: remove sortModel and treeDepth checks once row reorder is compatible\n\n  const isDraggable = React.useMemo(() => !!rootProps.rowReordering && !sortModel.length && treeDepth === 1 && Object.keys(editRowsState).length === 0, [rootProps.rowReordering, sortModel, treeDepth, editRowsState]);\n  const ownerState = {\n    isDraggable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(params.id)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(params.id), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, params.id]);\n  const draggableEventHandlers = isDraggable ? {\n    onDragStart: publish('rowDragStart'),\n    onDragOver: publish('rowDragOver'),\n    onDragEnd: publish('rowDragEnd')\n  } : null;\n\n  if (params.rowNode.type === 'footer') {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    className: classes.root,\n    draggable: isDraggable\n  }, draggableEventHandlers, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.rowReorderIcon, {}), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.placeholder,\n      children: cellValue\n    })]\n  }));\n}\n\nexport { GridRowReorderCell };\nexport const renderRowReorderCell = params => {\n  if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRowReorderCell, _extends({}, params));\n};","map":{"version":3,"names":["_extends","React","unstable_composeClasses","composeClasses","gridRowMaximumTreeDepthSelector","gridSortModelSelector","useGridApiContext","useGridSelector","getDataGridUtilityClass","gridEditRowsStateSelector","isEventTargetInPortal","useGridRootProps","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","isDraggable","classes","slots","root","placeholder","GridRowReorderCell","params","apiRef","rootProps","sortModel","treeDepth","editRowsState","cellValue","row","__reorder__","id","useMemo","rowReordering","length","Object","keys","publish","useCallback","eventName","propHandler","event","current","getRow","publishEvent","getRowParams","draggableEventHandlers","onDragStart","onDragOver","onDragEnd","rowNode","type","className","draggable","children","rowReorderIcon","renderRowReorderCell"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-pro/esm/components/GridRowReorderCell.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridRowMaximumTreeDepthSelector, gridSortModelSelector, useGridApiContext, useGridSelector, getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { gridEditRowsStateSelector, isEventTargetInPortal } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    isDraggable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowReorderCell', isDraggable && 'rowReorderCell--draggable'],\n    placeholder: ['rowReorderCellPlaceholder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridRowReorderCell(params) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  // eslint-disable-next-line no-underscore-dangle\n  const cellValue = params.row.__reorder__ || params.id;\n\n  // TODO: remove sortModel and treeDepth checks once row reorder is compatible\n  const isDraggable = React.useMemo(() => !!rootProps.rowReordering && !sortModel.length && treeDepth === 1 && Object.keys(editRowsState).length === 0, [rootProps.rowReordering, sortModel, treeDepth, editRowsState]);\n  const ownerState = {\n    isDraggable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(params.id)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(params.id), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, params.id]);\n  const draggableEventHandlers = isDraggable ? {\n    onDragStart: publish('rowDragStart'),\n    onDragOver: publish('rowDragOver'),\n    onDragEnd: publish('rowDragEnd')\n  } : null;\n  if (params.rowNode.type === 'footer') {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    className: classes.root,\n    draggable: isDraggable\n  }, draggableEventHandlers, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.rowReorderIcon, {}), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.placeholder,\n      children: cellValue\n    })]\n  }));\n}\nexport { GridRowReorderCell };\nexport const renderRowReorderCell = params => {\n  if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRowReorderCell, _extends({}, params));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}