{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useDefaultDates, useUtils, applyDefaultDate } from '@mui/x-date-pickers/internals';\nimport { DateRangePickerToolbar } from './DateRangePickerToolbar';\nexport function useDateRangePickerDefaultizedProps(props, name) {\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const localeText = React.useMemo(() => {\n    if (themeProps.localeText?.toolbarTitle == null) {\n      return themeProps.localeText;\n    }\n\n    return _extends({}, themeProps.localeText, {\n      dateRangePickerToolbarTitle: themeProps.localeText.toolbarTitle\n    });\n  }, [themeProps.localeText]);\n  return _extends({}, themeProps, {\n    localeText,\n    disableFuture: themeProps.disableFuture ?? false,\n    disablePast: themeProps.disablePast ?? false,\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    slots: _extends({\n      toolbar: DateRangePickerToolbar\n    }, themeProps.slots)\n  });\n}","map":{"version":3,"names":["_extends","React","useThemeProps","useDefaultDates","useUtils","applyDefaultDate","DateRangePickerToolbar","useDateRangePickerDefaultizedProps","props","name","utils","defaultDates","themeProps","localeText","useMemo","toolbarTitle","dateRangePickerToolbarTitle","disableFuture","disablePast","minDate","maxDate","slots","toolbar"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-date-pickers-pro/DateRangePicker/shared.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { useDefaultDates, useUtils, applyDefaultDate } from '@mui/x-date-pickers/internals';\nimport { DateRangePickerToolbar } from './DateRangePickerToolbar';\nexport function useDateRangePickerDefaultizedProps(props, name) {\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  const themeProps = useThemeProps({\n    props,\n    name\n  });\n  const localeText = React.useMemo(() => {\n    if (themeProps.localeText?.toolbarTitle == null) {\n      return themeProps.localeText;\n    }\n    return _extends({}, themeProps.localeText, {\n      dateRangePickerToolbarTitle: themeProps.localeText.toolbarTitle\n    });\n  }, [themeProps.localeText]);\n  return _extends({}, themeProps, {\n    localeText,\n    disableFuture: themeProps.disableFuture ?? false,\n    disablePast: themeProps.disablePast ?? false,\n    minDate: applyDefaultDate(utils, themeProps.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, themeProps.maxDate, defaultDates.maxDate),\n    slots: _extends({\n      toolbar: DateRangePickerToolbar\n    }, themeProps.slots)\n  });\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,gBAApC,QAA4D,+BAA5D;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,OAAO,SAASC,kCAAT,CAA4CC,KAA5C,EAAmDC,IAAnD,EAAyD;EAC9D,MAAMC,KAAK,GAAGN,QAAQ,EAAtB;EACA,MAAMO,YAAY,GAAGR,eAAe,EAApC;EACA,MAAMS,UAAU,GAAGV,aAAa,CAAC;IAC/BM,KAD+B;IAE/BC;EAF+B,CAAD,CAAhC;EAIA,MAAMI,UAAU,GAAGZ,KAAK,CAACa,OAAN,CAAc,MAAM;IACrC,IAAIF,UAAU,CAACC,UAAX,EAAuBE,YAAvB,IAAuC,IAA3C,EAAiD;MAC/C,OAAOH,UAAU,CAACC,UAAlB;IACD;;IACD,OAAOb,QAAQ,CAAC,EAAD,EAAKY,UAAU,CAACC,UAAhB,EAA4B;MACzCG,2BAA2B,EAAEJ,UAAU,CAACC,UAAX,CAAsBE;IADV,CAA5B,CAAf;EAGD,CAPkB,EAOhB,CAACH,UAAU,CAACC,UAAZ,CAPgB,CAAnB;EAQA,OAAOb,QAAQ,CAAC,EAAD,EAAKY,UAAL,EAAiB;IAC9BC,UAD8B;IAE9BI,aAAa,EAAEL,UAAU,CAACK,aAAX,IAA4B,KAFb;IAG9BC,WAAW,EAAEN,UAAU,CAACM,WAAX,IAA0B,KAHT;IAI9BC,OAAO,EAAEd,gBAAgB,CAACK,KAAD,EAAQE,UAAU,CAACO,OAAnB,EAA4BR,YAAY,CAACQ,OAAzC,CAJK;IAK9BC,OAAO,EAAEf,gBAAgB,CAACK,KAAD,EAAQE,UAAU,CAACQ,OAAnB,EAA4BT,YAAY,CAACS,OAAzC,CALK;IAM9BC,KAAK,EAAErB,QAAQ,CAAC;MACdsB,OAAO,EAAEhB;IADK,CAAD,EAEZM,UAAU,CAACS,KAFC;EANe,CAAjB,CAAf;AAUD"},"metadata":{},"sourceType":"module"}