{"ast":null,"code":"import { getDecadeStart, getDecadeEnd, getYearStart, getYearEnd, getMonthStart, getMonthEnd, getDayStart, getDayEnd } from '@wojtekmaj/date-utils';\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\nexport function getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getDecadeStart(date);\n\n    case 'year':\n      return getYearStart(date);\n\n    case 'month':\n      return getMonthStart(date);\n\n    case 'day':\n      return getDayStart(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\nexport function getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getDecadeEnd(date);\n\n    case 'year':\n      return getYearEnd(date);\n\n    case 'month':\n      return getMonthEnd(date);\n\n    case 'day':\n      return getDayEnd(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}","map":{"version":3,"names":["getDecadeStart","getDecadeEnd","getYearStart","getYearEnd","getMonthStart","getMonthEnd","getDayStart","getDayEnd","getBegin","rangeType","date","Error","concat","getEnd"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/react-date-picker/dist/esm/shared/dates.js"],"sourcesContent":["import { getDecadeStart, getDecadeEnd, getYearStart, getYearEnd, getMonthStart, getMonthEnd, getDayStart, getDayEnd, } from '@wojtekmaj/date-utils';\n/**\n * Returns the beginning of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexport function getBegin(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return getDecadeStart(date);\n        case 'year':\n            return getYearStart(date);\n        case 'month':\n            return getMonthStart(date);\n        case 'day':\n            return getDayStart(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {RangeType} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nexport function getEnd(rangeType, date) {\n    switch (rangeType) {\n        case 'decade':\n            return getDecadeEnd(date);\n        case 'year':\n            return getYearEnd(date);\n        case 'month':\n            return getMonthEnd(date);\n        case 'day':\n            return getDayEnd(date);\n        default:\n            throw new Error(\"Invalid rangeType: \".concat(rangeType));\n    }\n}\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,YAAzB,EAAuCC,YAAvC,EAAqDC,UAArD,EAAiEC,aAAjE,EAAgFC,WAAhF,EAA6FC,WAA7F,EAA0GC,SAA1G,QAA4H,uBAA5H;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,IAA7B,EAAmC;EACtC,QAAQD,SAAR;IACI,KAAK,QAAL;MACI,OAAOT,cAAc,CAACU,IAAD,CAArB;;IACJ,KAAK,MAAL;MACI,OAAOR,YAAY,CAACQ,IAAD,CAAnB;;IACJ,KAAK,OAAL;MACI,OAAON,aAAa,CAACM,IAAD,CAApB;;IACJ,KAAK,KAAL;MACI,OAAOJ,WAAW,CAACI,IAAD,CAAlB;;IACJ;MACI,MAAM,IAAIC,KAAJ,CAAU,sBAAsBC,MAAtB,CAA6BH,SAA7B,CAAV,CAAN;EAVR;AAYH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,MAAT,CAAgBJ,SAAhB,EAA2BC,IAA3B,EAAiC;EACpC,QAAQD,SAAR;IACI,KAAK,QAAL;MACI,OAAOR,YAAY,CAACS,IAAD,CAAnB;;IACJ,KAAK,MAAL;MACI,OAAOP,UAAU,CAACO,IAAD,CAAjB;;IACJ,KAAK,OAAL;MACI,OAAOL,WAAW,CAACK,IAAD,CAAlB;;IACJ,KAAK,KAAL;MACI,OAAOH,SAAS,CAACG,IAAD,CAAhB;;IACJ;MACI,MAAM,IAAIC,KAAJ,CAAU,sBAAsBC,MAAtB,CAA6BH,SAA7B,CAAV,CAAN;EAVR;AAYH"},"metadata":{},"sourceType":"module"}