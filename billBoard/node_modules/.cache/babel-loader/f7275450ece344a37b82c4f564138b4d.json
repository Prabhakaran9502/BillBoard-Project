{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"value\", \"referenceDate\"];\nimport { areDatesEqual, getTodayDate, replaceInvalidDateByNull } from './date-utils';\nimport { getDefaultReferenceDate } from './getDefaultReferenceDate';\nimport { createDateStrForV7HiddenInputFromSections, createDateStrForV6InputFromSections } from '../hooks/useField/useField.utils';\nexport const singleItemValueManager = {\n  emptyValue: null,\n  getTodayValue: getTodayDate,\n  getInitialReferenceValue: _ref => {\n    let {\n      value,\n      referenceDate\n    } = _ref,\n        params = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n    if (value != null && params.utils.isValid(value)) {\n      return value;\n    }\n\n    if (referenceDate != null) {\n      return referenceDate;\n    }\n\n    return getDefaultReferenceDate(params);\n  },\n  cleanValue: replaceInvalidDateByNull,\n  areValuesEqual: areDatesEqual,\n  isSameError: (a, b) => a === b,\n  hasError: error => error != null,\n  defaultErrorState: null,\n  getTimezone: (utils, value) => value == null || !utils.isValid(value) ? null : utils.getTimezone(value),\n  setTimezone: (utils, timezone, value) => value == null ? null : utils.setTimezone(value, timezone)\n};\nexport const singleItemFieldValueManager = {\n  updateReferenceValue: (utils, value, prevReferenceValue) => value == null || !utils.isValid(value) ? prevReferenceValue : value,\n  getSectionsFromValue: (utils, date, prevSections, getSectionsFromDate) => {\n    const shouldReUsePrevDateSections = !utils.isValid(date) && !!prevSections;\n\n    if (shouldReUsePrevDateSections) {\n      return prevSections;\n    }\n\n    return getSectionsFromDate(date);\n  },\n  getV7HiddenInputValueFromSections: createDateStrForV7HiddenInputFromSections,\n  getV6InputValueFromSections: createDateStrForV6InputFromSections,\n  getActiveDateManager: (utils, state) => ({\n    date: state.value,\n    referenceDate: state.referenceValue,\n    getSections: sections => sections,\n    getNewValuesFromNewActiveDate: newActiveDate => ({\n      value: newActiveDate,\n      referenceValue: newActiveDate == null || !utils.isValid(newActiveDate) ? state.referenceValue : newActiveDate\n    })\n  }),\n  parseValueStr: (valueStr, referenceValue, parseDate) => parseDate(valueStr.trim(), referenceValue)\n};","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","areDatesEqual","getTodayDate","replaceInvalidDateByNull","getDefaultReferenceDate","createDateStrForV7HiddenInputFromSections","createDateStrForV6InputFromSections","singleItemValueManager","emptyValue","getTodayValue","getInitialReferenceValue","_ref","value","referenceDate","params","utils","isValid","cleanValue","areValuesEqual","isSameError","a","b","hasError","error","defaultErrorState","getTimezone","setTimezone","timezone","singleItemFieldValueManager","updateReferenceValue","prevReferenceValue","getSectionsFromValue","date","prevSections","getSectionsFromDate","shouldReUsePrevDateSections","getV7HiddenInputValueFromSections","getV6InputValueFromSections","getActiveDateManager","state","referenceValue","getSections","sections","getNewValuesFromNewActiveDate","newActiveDate","parseValueStr","valueStr","parseDate","trim"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-date-pickers/internals/utils/valueManagers.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"value\", \"referenceDate\"];\nimport { areDatesEqual, getTodayDate, replaceInvalidDateByNull } from './date-utils';\nimport { getDefaultReferenceDate } from './getDefaultReferenceDate';\nimport { createDateStrForV7HiddenInputFromSections, createDateStrForV6InputFromSections } from '../hooks/useField/useField.utils';\nexport const singleItemValueManager = {\n  emptyValue: null,\n  getTodayValue: getTodayDate,\n  getInitialReferenceValue: _ref => {\n    let {\n        value,\n        referenceDate\n      } = _ref,\n      params = _objectWithoutPropertiesLoose(_ref, _excluded);\n    if (value != null && params.utils.isValid(value)) {\n      return value;\n    }\n    if (referenceDate != null) {\n      return referenceDate;\n    }\n    return getDefaultReferenceDate(params);\n  },\n  cleanValue: replaceInvalidDateByNull,\n  areValuesEqual: areDatesEqual,\n  isSameError: (a, b) => a === b,\n  hasError: error => error != null,\n  defaultErrorState: null,\n  getTimezone: (utils, value) => value == null || !utils.isValid(value) ? null : utils.getTimezone(value),\n  setTimezone: (utils, timezone, value) => value == null ? null : utils.setTimezone(value, timezone)\n};\nexport const singleItemFieldValueManager = {\n  updateReferenceValue: (utils, value, prevReferenceValue) => value == null || !utils.isValid(value) ? prevReferenceValue : value,\n  getSectionsFromValue: (utils, date, prevSections, getSectionsFromDate) => {\n    const shouldReUsePrevDateSections = !utils.isValid(date) && !!prevSections;\n    if (shouldReUsePrevDateSections) {\n      return prevSections;\n    }\n    return getSectionsFromDate(date);\n  },\n  getV7HiddenInputValueFromSections: createDateStrForV7HiddenInputFromSections,\n  getV6InputValueFromSections: createDateStrForV6InputFromSections,\n  getActiveDateManager: (utils, state) => ({\n    date: state.value,\n    referenceDate: state.referenceValue,\n    getSections: sections => sections,\n    getNewValuesFromNewActiveDate: newActiveDate => ({\n      value: newActiveDate,\n      referenceValue: newActiveDate == null || !utils.isValid(newActiveDate) ? state.referenceValue : newActiveDate\n    })\n  }),\n  parseValueStr: (valueStr, referenceValue, parseDate) => parseDate(valueStr.trim(), referenceValue)\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}