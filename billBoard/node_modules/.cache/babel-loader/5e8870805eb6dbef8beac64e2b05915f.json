{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridDetailPanel = exports.detailPanelStateInitializer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _xDataGrid = require(\"@mui/x-data-grid\");\n\nvar _internals = require(\"@mui/x-data-grid/internals\");\n\nvar _gridDetailPanelToggleColDef = require(\"./gridDetailPanelToggleColDef\");\n\nvar _gridDetailPanelSelector = require(\"./gridDetailPanelSelector\");\n\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n      t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\n\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n\n  var t = _getRequireWildcardCache(r);\n\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n    __proto__: null\n  },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n\n  return n.default = e, t && t.set(e, n), n;\n} // FIXME: calling `api.updateDimensions()` here triggers a cycle where `updateDimensions` is\n// called 3 times when opening/closing a panel.\n\n\nconst detailPanelStateInitializer = (state, props) => {\n  return (0, _extends2.default)({}, state, {\n    detailPanel: {\n      heightCache: {},\n      expandedRowIds: props.detailPanelExpandedRowIds ?? props.initialState?.detailPanel?.expandedRowIds ?? []\n    }\n  });\n};\n\nexports.detailPanelStateInitializer = detailPanelStateInitializer;\n\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\n  if (typeof getDetailPanelContent !== 'function') {\n    return {};\n  } // TODO change to lazy approach using a Proxy\n  // only call getDetailPanelContent when asked for an id\n\n\n  const rowIds = (0, _xDataGrid.gridDataRowIdsSelector)(apiRef);\n  const contentCache = rowIds.reduce((acc, id) => {\n    const params = apiRef.current.getRowParams(id);\n    acc[id] = getDetailPanelContent(params);\n    return acc;\n  }, {});\n  const heightCache = rowIds.reduce((acc, id) => {\n    if (contentCache[id] == null) {\n      return acc;\n    }\n\n    const params = apiRef.current.getRowParams(id);\n    const height = getDetailPanelHeight(params);\n    const autoHeight = height === 'auto';\n    acc[id] = {\n      autoHeight,\n      height: autoHeight ? previousHeightCache[id]?.height : height\n    };\n    return acc;\n  }, {});\n  return {\n    contentCache,\n    heightCache\n  };\n}\n\nconst useGridDetailPanel = (apiRef, props) => {\n  const expandedRowIds = (0, _xDataGrid.useGridSelector)(apiRef, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector);\n  const contentCache = (0, _xDataGrid.useGridSelector)(apiRef, _gridDetailPanelSelector.gridDetailPanelExpandedRowsContentCacheSelector);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (params.field !== _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[params.id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    } // Ignore if the user didn't click specifically in the \"i\" button\n\n\n    if (event.target === event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.toggleDetailPanel(params.id);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    if (params.field === _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\n      apiRef.current.toggleDetailPanel(params.id);\n    }\n  }, [apiRef, props.getDetailPanelContent]);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellClick', handleCellClick);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellKeyDown', handleCellKeyDown);\n  apiRef.current.registerControlState({\n    stateId: 'detailPanels',\n    propModel: props.detailPanelExpandedRowIds,\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\n    stateSelector: _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector,\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\n  });\n  const toggleDetailPanel = React.useCallback(id => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n\n    const content = contentCache[id];\n\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n\n    const ids = apiRef.current.getExpandedDetailPanels();\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(rowId => rowId !== id) : [...ids, id]);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const getExpandedDetailPanels = React.useCallback(() => (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector)(apiRef.current.state), [apiRef]);\n  const setExpandedDetailPanels = React.useCallback(ids => {\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, {\n          expandedRowIds: ids\n        })\n      });\n    });\n    apiRef.current.updateDimensions();\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const storeDetailPanelHeight = React.useCallback((id, height) => {\n    const heightCache = (0, _gridDetailPanelSelector.gridDetailPanelRawHeightCacheSelector)(apiRef.current.state);\n\n    if (!heightCache[id] || heightCache[id].height === height) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, {\n          heightCache: (0, _extends2.default)({}, heightCache, {\n            [id]: (0, _extends2.default)({}, heightCache[id], {\n              height\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.updateDimensions();\n    apiRef.current.requestPipeProcessorsApplication('rowHeight');\n  }, [apiRef]);\n  const detailPanelHasAutoHeight = React.useCallback(id => {\n    const heightCache = (0, _gridDetailPanelSelector.gridDetailPanelRawHeightCacheSelector)(apiRef.current.state);\n    return heightCache[id] ? heightCache[id].autoHeight : false;\n  }, [apiRef]);\n  const detailPanelPubicApi = {\n    toggleDetailPanel,\n    getExpandedDetailPanels,\n    setExpandedDetailPanels\n  };\n  const detailPanelPrivateApi = {\n    storeDetailPanelHeight,\n    detailPanelHasAutoHeight\n  };\n  (0, _xDataGrid.useGridApiMethod)(apiRef, detailPanelPubicApi, 'public');\n  (0, _xDataGrid.useGridApiMethod)(apiRef, detailPanelPrivateApi, 'private');\n  React.useEffect(() => {\n    if (props.detailPanelExpandedRowIds) {\n      const currentModel = (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector)(apiRef.current.state);\n\n      if (currentModel !== props.detailPanelExpandedRowIds) {\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\n      }\n    }\n  }, [apiRef, props.detailPanelExpandedRowIds]);\n  const updateCachesAndForceUpdate = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.updateDimensions?.();\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\n  const previousGetDetailPanelContentProp = React.useRef();\n  const previousGetDetailPanelHeightProp = React.useRef();\n  const updateCachesIfNeeded = React.useCallback(() => {\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.updateDimensions?.();\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  const addDetailHeight = React.useCallback((initialValue, row) => {\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\n      initialValue.detail = 0;\n      return initialValue;\n    }\n\n    updateCachesIfNeeded();\n    const heightCache = (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowsHeightCacheSelector)(apiRef);\n    initialValue.detail = heightCache[row.id] ?? 0; // Fallback to zero because the cache might not be ready yet (for example page was changed)\n\n    return initialValue;\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'rowHeight', addDetailHeight);\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    updateCachesIfNeeded();\n  }\n};\n\nexports.useGridDetailPanel = useGridDetailPanel;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useGridDetailPanel","detailPanelStateInitializer","_extends2","React","_interopRequireWildcard","_xDataGrid","_internals","_gridDetailPanelToggleColDef","_gridDetailPanelSelector","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","state","props","detailPanel","heightCache","expandedRowIds","detailPanelExpandedRowIds","initialState","cacheContentAndHeight","apiRef","getDetailPanelContent","getDetailPanelHeight","previousHeightCache","rowIds","gridDataRowIdsSelector","contentCache","reduce","acc","id","params","current","getRowParams","height","autoHeight","useGridSelector","gridDetailPanelExpandedRowIdsSelector","gridDetailPanelExpandedRowsContentCacheSelector","handleCellClick","useCallback","event","field","GRID_DETAIL_PANEL_TOGGLE_FIELD","content","isValidElement","target","currentTarget","toggleDetailPanel","handleCellKeyDown","key","useGridApiEventHandler","registerControlState","stateId","propModel","propOnChange","onDetailPanelExpandedRowIdsChange","stateSelector","changeEvent","ids","getExpandedDetailPanels","setExpandedDetailPanels","includes","filter","rowId","setState","updateDimensions","forceUpdate","storeDetailPanelHeight","gridDetailPanelRawHeightCacheSelector","requestPipeProcessorsApplication","detailPanelHasAutoHeight","detailPanelPubicApi","detailPanelPrivateApi","useGridApiMethod","useEffect","currentModel","updateCachesAndForceUpdate","previousGetDetailPanelContentProp","useRef","previousGetDetailPanelHeightProp","updateCachesIfNeeded","addDetailHeight","initialValue","row","length","detail","gridDetailPanelExpandedRowsHeightCacheSelector","useGridRegisterPipeProcessor","isFirstRender"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-pro/hooks/features/detailPanel/useGridDetailPanel.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridDetailPanel = exports.detailPanelStateInitializer = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _xDataGrid = require(\"@mui/x-data-grid\");\nvar _internals = require(\"@mui/x-data-grid/internals\");\nvar _gridDetailPanelToggleColDef = require(\"./gridDetailPanelToggleColDef\");\nvar _gridDetailPanelSelector = require(\"./gridDetailPanelSelector\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n// FIXME: calling `api.updateDimensions()` here triggers a cycle where `updateDimensions` is\n// called 3 times when opening/closing a panel.\n\nconst detailPanelStateInitializer = (state, props) => {\n  return (0, _extends2.default)({}, state, {\n    detailPanel: {\n      heightCache: {},\n      expandedRowIds: props.detailPanelExpandedRowIds ?? props.initialState?.detailPanel?.expandedRowIds ?? []\n    }\n  });\n};\nexports.detailPanelStateInitializer = detailPanelStateInitializer;\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\n  if (typeof getDetailPanelContent !== 'function') {\n    return {};\n  }\n\n  // TODO change to lazy approach using a Proxy\n  // only call getDetailPanelContent when asked for an id\n  const rowIds = (0, _xDataGrid.gridDataRowIdsSelector)(apiRef);\n  const contentCache = rowIds.reduce((acc, id) => {\n    const params = apiRef.current.getRowParams(id);\n    acc[id] = getDetailPanelContent(params);\n    return acc;\n  }, {});\n  const heightCache = rowIds.reduce((acc, id) => {\n    if (contentCache[id] == null) {\n      return acc;\n    }\n    const params = apiRef.current.getRowParams(id);\n    const height = getDetailPanelHeight(params);\n    const autoHeight = height === 'auto';\n    acc[id] = {\n      autoHeight,\n      height: autoHeight ? previousHeightCache[id]?.height : height\n    };\n    return acc;\n  }, {});\n  return {\n    contentCache,\n    heightCache\n  };\n}\nconst useGridDetailPanel = (apiRef, props) => {\n  const expandedRowIds = (0, _xDataGrid.useGridSelector)(apiRef, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector);\n  const contentCache = (0, _xDataGrid.useGridSelector)(apiRef, _gridDetailPanelSelector.gridDetailPanelExpandedRowsContentCacheSelector);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (params.field !== _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\n      return;\n    }\n    const content = contentCache[params.id];\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n\n    // Ignore if the user didn't click specifically in the \"i\" button\n    if (event.target === event.currentTarget) {\n      return;\n    }\n    apiRef.current.toggleDetailPanel(params.id);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n    if (params.field === _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\n      apiRef.current.toggleDetailPanel(params.id);\n    }\n  }, [apiRef, props.getDetailPanelContent]);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellClick', handleCellClick);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'cellKeyDown', handleCellKeyDown);\n  apiRef.current.registerControlState({\n    stateId: 'detailPanels',\n    propModel: props.detailPanelExpandedRowIds,\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\n    stateSelector: _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector,\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\n  });\n  const toggleDetailPanel = React.useCallback(id => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n    const content = contentCache[id];\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n    const ids = apiRef.current.getExpandedDetailPanels();\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(rowId => rowId !== id) : [...ids, id]);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const getExpandedDetailPanels = React.useCallback(() => (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector)(apiRef.current.state), [apiRef]);\n  const setExpandedDetailPanels = React.useCallback(ids => {\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, {\n          expandedRowIds: ids\n        })\n      });\n    });\n    apiRef.current.updateDimensions();\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const storeDetailPanelHeight = React.useCallback((id, height) => {\n    const heightCache = (0, _gridDetailPanelSelector.gridDetailPanelRawHeightCacheSelector)(apiRef.current.state);\n    if (!heightCache[id] || heightCache[id].height === height) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, {\n          heightCache: (0, _extends2.default)({}, heightCache, {\n            [id]: (0, _extends2.default)({}, heightCache[id], {\n              height\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.updateDimensions();\n    apiRef.current.requestPipeProcessorsApplication('rowHeight');\n  }, [apiRef]);\n  const detailPanelHasAutoHeight = React.useCallback(id => {\n    const heightCache = (0, _gridDetailPanelSelector.gridDetailPanelRawHeightCacheSelector)(apiRef.current.state);\n    return heightCache[id] ? heightCache[id].autoHeight : false;\n  }, [apiRef]);\n  const detailPanelPubicApi = {\n    toggleDetailPanel,\n    getExpandedDetailPanels,\n    setExpandedDetailPanels\n  };\n  const detailPanelPrivateApi = {\n    storeDetailPanelHeight,\n    detailPanelHasAutoHeight\n  };\n  (0, _xDataGrid.useGridApiMethod)(apiRef, detailPanelPubicApi, 'public');\n  (0, _xDataGrid.useGridApiMethod)(apiRef, detailPanelPrivateApi, 'private');\n  React.useEffect(() => {\n    if (props.detailPanelExpandedRowIds) {\n      const currentModel = (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector)(apiRef.current.state);\n      if (currentModel !== props.detailPanelExpandedRowIds) {\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\n      }\n    }\n  }, [apiRef, props.detailPanelExpandedRowIds]);\n  const updateCachesAndForceUpdate = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.updateDimensions?.();\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  (0, _xDataGrid.useGridApiEventHandler)(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\n  const previousGetDetailPanelContentProp = React.useRef();\n  const previousGetDetailPanelHeightProp = React.useRef();\n  const updateCachesIfNeeded = React.useCallback(() => {\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        detailPanel: (0, _extends2.default)({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.updateDimensions?.();\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  const addDetailHeight = React.useCallback((initialValue, row) => {\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\n      initialValue.detail = 0;\n      return initialValue;\n    }\n    updateCachesIfNeeded();\n    const heightCache = (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowsHeightCacheSelector)(apiRef);\n    initialValue.detail = heightCache[row.id] ?? 0; // Fallback to zero because the cache might not be ready yet (for example page was changed)\n    return initialValue;\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\n  (0, _internals.useGridRegisterPipeProcessor)(apiRef, 'rowHeight', addDetailHeight);\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    updateCachesIfNeeded();\n  }\n};\nexports.useGridDetailPanel = useGridDetailPanel;"],"mappings":"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"},"metadata":{},"sourceType":"script"}