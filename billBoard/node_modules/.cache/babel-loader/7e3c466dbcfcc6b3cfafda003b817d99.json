{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\n\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\n\nvar isSamePropertyDescriptor = require('../helpers/isSamePropertyDescriptor');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\n\nvar IsDataDescriptor = require('./IsDataDescriptor');\n\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n\nvar SameValue = require('./SameValue');\n\nvar Type = require('./Type'); // https://262.ecma-international.org/6.0/#sec-validateandapplypropertydescriptor\n// https://262.ecma-international.org/8.0/#sec-validateandapplypropertydescriptor\n// eslint-disable-next-line max-lines-per-function, max-statements\n\n\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n  // this uses the ES2017+ logic, since it fixes a number of bugs in the ES2015 logic.\n  var oType = Type(O);\n\n  if (oType !== 'Undefined' && oType !== 'Object') {\n    throw new $TypeError('Assertion failed: O must be undefined or an Object');\n  }\n\n  if (typeof extensible !== 'boolean') {\n    throw new $TypeError('Assertion failed: extensible must be a Boolean');\n  }\n\n  if (!isPropertyDescriptor(Desc)) {\n    throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n  }\n\n  if (typeof current !== 'undefined' && !isPropertyDescriptor(current)) {\n    throw new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n  }\n\n  if (oType !== 'Undefined' && !IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: if O is not undefined, P must be a Property Key');\n  }\n\n  if (typeof current === 'undefined') {\n    if (!extensible) {\n      return false;\n    }\n\n    if (IsGenericDescriptor(Desc) || IsDataDescriptor(Desc)) {\n      if (oType !== 'Undefined') {\n        DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n          '[[Configurable]]': Desc['[[Configurable]]'],\n          '[[Enumerable]]': Desc['[[Enumerable]]'],\n          '[[Value]]': Desc['[[Value]]'],\n          '[[Writable]]': Desc['[[Writable]]']\n        });\n      }\n    } else {\n      if (!IsAccessorDescriptor(Desc)) {\n        throw new $TypeError('Assertion failed: Desc is not an accessor descriptor');\n      }\n\n      if (oType !== 'Undefined') {\n        return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n      }\n    }\n\n    return true;\n  }\n\n  if (IsGenericDescriptor(Desc) && !('[[Configurable]]' in Desc) && !('[[Enumerable]]' in Desc)) {\n    return true;\n  }\n\n  if (isSamePropertyDescriptor({\n    SameValue: SameValue\n  }, Desc, current)) {\n    return true; // removed by ES2017, but should still be correct\n  } // \"if every field in Desc is absent, return true\" can't really match the assertion that it's a Property Descriptor\n\n\n  if (!current['[[Configurable]]']) {\n    if (Desc['[[Configurable]]']) {\n      return false;\n    }\n\n    if ('[[Enumerable]]' in Desc && !Desc['[[Enumerable]]'] === !!current['[[Enumerable]]']) {\n      return false;\n    }\n  }\n\n  if (IsGenericDescriptor(Desc)) {// no further validation is required.\n  } else if (IsDataDescriptor(current) !== IsDataDescriptor(Desc)) {\n    if (!current['[[Configurable]]']) {\n      return false;\n    }\n\n    if (IsDataDescriptor(current)) {\n      if (oType !== 'Undefined') {\n        DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n          '[[Configurable]]': current['[[Configurable]]'],\n          '[[Enumerable]]': current['[[Enumerable]]'],\n          '[[Get]]': undefined\n        });\n      }\n    } else if (oType !== 'Undefined') {\n      DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, {\n        '[[Configurable]]': current['[[Configurable]]'],\n        '[[Enumerable]]': current['[[Enumerable]]'],\n        '[[Value]]': undefined\n      });\n    }\n  } else if (IsDataDescriptor(current) && IsDataDescriptor(Desc)) {\n    if (!current['[[Configurable]]'] && !current['[[Writable]]']) {\n      if ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n        return false;\n      }\n\n      if ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n        return false;\n      }\n\n      return true;\n    }\n  } else if (IsAccessorDescriptor(current) && IsAccessorDescriptor(Desc)) {\n    if (!current['[[Configurable]]']) {\n      if ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n        return false;\n      }\n\n      if ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n        return false;\n      }\n\n      return true;\n    }\n  } else {\n    throw new $TypeError('Assertion failed: current and Desc are not both data, both accessors, or one accessor and one data.');\n  }\n\n  if (oType !== 'Undefined') {\n    return DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, Desc);\n  }\n\n  return true;\n};","map":{"version":3,"names":["$TypeError","require","DefineOwnProperty","isPropertyDescriptor","isSamePropertyDescriptor","FromPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","IsPropertyKey","SameValue","Type","module","exports","ValidateAndApplyPropertyDescriptor","O","P","extensible","Desc","current","oType","undefined"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-abstract/2021/ValidateAndApplyPropertyDescriptor.js"],"sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar DefineOwnProperty = require('../helpers/DefineOwnProperty');\nvar isPropertyDescriptor = require('../helpers/records/property-descriptor');\nvar isSamePropertyDescriptor = require('../helpers/isSamePropertyDescriptor');\n\nvar FromPropertyDescriptor = require('./FromPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsGenericDescriptor = require('./IsGenericDescriptor');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\n\n// https://262.ecma-international.org/6.0/#sec-validateandapplypropertydescriptor\n// https://262.ecma-international.org/8.0/#sec-validateandapplypropertydescriptor\n\n// eslint-disable-next-line max-lines-per-function, max-statements\nmodule.exports = function ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current) {\n\t// this uses the ES2017+ logic, since it fixes a number of bugs in the ES2015 logic.\n\tvar oType = Type(O);\n\tif (oType !== 'Undefined' && oType !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be undefined or an Object');\n\t}\n\tif (typeof extensible !== 'boolean') {\n\t\tthrow new $TypeError('Assertion failed: extensible must be a Boolean');\n\t}\n\tif (!isPropertyDescriptor(Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (typeof current !== 'undefined' && !isPropertyDescriptor(current)) {\n\t\tthrow new $TypeError('Assertion failed: current must be a Property Descriptor, or undefined');\n\t}\n\tif (oType !== 'Undefined' && !IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: if O is not undefined, P must be a Property Key');\n\t}\n\tif (typeof current === 'undefined') {\n\t\tif (!extensible) {\n\t\t\treturn false;\n\t\t}\n\t\tif (IsGenericDescriptor(Desc) || IsDataDescriptor(Desc)) {\n\t\t\tif (oType !== 'Undefined') {\n\t\t\t\tDefineOwnProperty(\n\t\t\t\t\tIsDataDescriptor,\n\t\t\t\t\tSameValue,\n\t\t\t\t\tFromPropertyDescriptor,\n\t\t\t\t\tO,\n\t\t\t\t\tP,\n\t\t\t\t\t{\n\t\t\t\t\t\t'[[Configurable]]': Desc['[[Configurable]]'],\n\t\t\t\t\t\t'[[Enumerable]]': Desc['[[Enumerable]]'],\n\t\t\t\t\t\t'[[Value]]': Desc['[[Value]]'],\n\t\t\t\t\t\t'[[Writable]]': Desc['[[Writable]]']\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!IsAccessorDescriptor(Desc)) {\n\t\t\t\tthrow new $TypeError('Assertion failed: Desc is not an accessor descriptor');\n\t\t\t}\n\t\t\tif (oType !== 'Undefined') {\n\t\t\t\treturn DefineOwnProperty(\n\t\t\t\t\tIsDataDescriptor,\n\t\t\t\t\tSameValue,\n\t\t\t\t\tFromPropertyDescriptor,\n\t\t\t\t\tO,\n\t\t\t\t\tP,\n\t\t\t\t\tDesc\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tif (IsGenericDescriptor(Desc) && !('[[Configurable]]' in Desc) && !('[[Enumerable]]' in Desc)) {\n\t\treturn true;\n\t}\n\tif (isSamePropertyDescriptor({ SameValue: SameValue }, Desc, current)) {\n\t\treturn true; // removed by ES2017, but should still be correct\n\t}\n\t// \"if every field in Desc is absent, return true\" can't really match the assertion that it's a Property Descriptor\n\tif (!current['[[Configurable]]']) {\n\t\tif (Desc['[[Configurable]]']) {\n\t\t\treturn false;\n\t\t}\n\t\tif ('[[Enumerable]]' in Desc && !Desc['[[Enumerable]]'] === !!current['[[Enumerable]]']) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (IsGenericDescriptor(Desc)) {\n\t\t// no further validation is required.\n\t} else if (IsDataDescriptor(current) !== IsDataDescriptor(Desc)) {\n\t\tif (!current['[[Configurable]]']) {\n\t\t\treturn false;\n\t\t}\n\t\tif (IsDataDescriptor(current)) {\n\t\t\tif (oType !== 'Undefined') {\n\t\t\t\tDefineOwnProperty(\n\t\t\t\t\tIsDataDescriptor,\n\t\t\t\t\tSameValue,\n\t\t\t\t\tFromPropertyDescriptor,\n\t\t\t\t\tO,\n\t\t\t\t\tP,\n\t\t\t\t\t{\n\t\t\t\t\t\t'[[Configurable]]': current['[[Configurable]]'],\n\t\t\t\t\t\t'[[Enumerable]]': current['[[Enumerable]]'],\n\t\t\t\t\t\t'[[Get]]': undefined\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (oType !== 'Undefined') {\n\t\t\tDefineOwnProperty(\n\t\t\t\tIsDataDescriptor,\n\t\t\t\tSameValue,\n\t\t\t\tFromPropertyDescriptor,\n\t\t\t\tO,\n\t\t\t\tP,\n\t\t\t\t{\n\t\t\t\t\t'[[Configurable]]': current['[[Configurable]]'],\n\t\t\t\t\t'[[Enumerable]]': current['[[Enumerable]]'],\n\t\t\t\t\t'[[Value]]': undefined\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t} else if (IsDataDescriptor(current) && IsDataDescriptor(Desc)) {\n\t\tif (!current['[[Configurable]]'] && !current['[[Writable]]']) {\n\t\t\tif ('[[Writable]]' in Desc && Desc['[[Writable]]']) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Value]]' in Desc && !SameValue(Desc['[[Value]]'], current['[[Value]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t} else if (IsAccessorDescriptor(current) && IsAccessorDescriptor(Desc)) {\n\t\tif (!current['[[Configurable]]']) {\n\t\t\tif ('[[Set]]' in Desc && !SameValue(Desc['[[Set]]'], current['[[Set]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ('[[Get]]' in Desc && !SameValue(Desc['[[Get]]'], current['[[Get]]'])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tthrow new $TypeError('Assertion failed: current and Desc are not both data, both accessors, or one accessor and one data.');\n\t}\n\tif (oType !== 'Undefined') {\n\t\treturn DefineOwnProperty(\n\t\t\tIsDataDescriptor,\n\t\t\tSameValue,\n\t\t\tFromPropertyDescriptor,\n\t\t\tO,\n\t\t\tP,\n\t\t\tDesc\n\t\t);\n\t}\n\treturn true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}