{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $ArrayPrototype = GetIntrinsic('%Array.prototype%');\n\nvar $RangeError = require('es-errors/range');\n\nvar $SyntaxError = require('es-errors/syntax');\n\nvar $TypeError = require('es-errors/type');\n\nvar isInteger = require('../helpers/isInteger');\n\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\nvar hasProto = require('has-proto')();\n\nvar $setProto = GetIntrinsic('%Object.setPrototypeOf%', true) || (hasProto ? function (O, proto) {\n  O.__proto__ = proto; // eslint-disable-line no-proto, no-param-reassign\n\n  return O;\n} : null); // https://262.ecma-international.org/12.0/#sec-arraycreate\n\nmodule.exports = function ArrayCreate(length) {\n  if (!isInteger(length) || length < 0) {\n    throw new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n  }\n\n  if (length > MAX_ARRAY_LENGTH) {\n    throw new $RangeError('length is greater than (2**32 - 1)');\n  }\n\n  var proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n  var A = []; // steps 3, 5\n\n  if (proto !== $ArrayPrototype) {\n    // step 4\n    if (!$setProto) {\n      throw new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n    }\n\n    $setProto(A, proto);\n  }\n\n  if (length !== 0) {\n    // bypasses the need for step 6\n    A.length = length;\n  }\n  /* step 6, the above as a shortcut for the below\n  OrdinaryDefineOwnProperty(A, 'length', {\n  \t'[[Configurable]]': false,\n  \t'[[Enumerable]]': false,\n  \t'[[Value]]': length,\n  \t'[[Writable]]': true\n  });\n  */\n\n\n  return A;\n};","map":{"version":3,"names":["GetIntrinsic","require","$ArrayPrototype","$RangeError","$SyntaxError","$TypeError","isInteger","MAX_ARRAY_LENGTH","Math","pow","hasProto","$setProto","O","proto","__proto__","module","exports","ArrayCreate","length","arguments","A"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/es-abstract/2021/ArrayCreate.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $ArrayPrototype = GetIntrinsic('%Array.prototype%');\nvar $RangeError = require('es-errors/range');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar isInteger = require('../helpers/isInteger');\n\nvar MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n\nvar hasProto = require('has-proto')();\n\nvar $setProto = GetIntrinsic('%Object.setPrototypeOf%', true) || (\n\thasProto\n\t\t? function (O, proto) {\n\t\t\tO.__proto__ = proto; // eslint-disable-line no-proto, no-param-reassign\n\t\t\treturn O;\n\t\t}\n\t\t: null\n);\n\n// https://262.ecma-international.org/12.0/#sec-arraycreate\n\nmodule.exports = function ArrayCreate(length) {\n\tif (!isInteger(length) || length < 0) {\n\t\tthrow new $TypeError('Assertion failed: `length` must be an integer Number >= 0');\n\t}\n\tif (length > MAX_ARRAY_LENGTH) {\n\t\tthrow new $RangeError('length is greater than (2**32 - 1)');\n\t}\n\tvar proto = arguments.length > 1 ? arguments[1] : $ArrayPrototype;\n\tvar A = []; // steps 3, 5\n\tif (proto !== $ArrayPrototype) { // step 4\n\t\tif (!$setProto) {\n\t\t\tthrow new $SyntaxError('ArrayCreate: a `proto` argument that is not `Array.prototype` is not supported in an environment that does not support setting the [[Prototype]]');\n\t\t}\n\t\t$setProto(A, proto);\n\t}\n\tif (length !== 0) { // bypasses the need for step 6\n\t\tA.length = length;\n\t}\n\t/* step 6, the above as a shortcut for the below\n\tOrdinaryDefineOwnProperty(A, 'length', {\n\t\t'[[Configurable]]': false,\n\t\t'[[Enumerable]]': false,\n\t\t'[[Value]]': length,\n\t\t'[[Writable]]': true\n\t});\n\t*/\n\treturn A;\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,eAAe,GAAGF,YAAY,CAAC,mBAAD,CAAlC;;AACA,IAAIG,WAAW,GAAGF,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAII,UAAU,GAAGJ,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIK,SAAS,GAAGL,OAAO,CAAC,sBAAD,CAAvB;;AAEA,IAAIM,gBAAgB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAAzC;;AAEA,IAAIC,QAAQ,GAAGT,OAAO,CAAC,WAAD,CAAP,EAAf;;AAEA,IAAIU,SAAS,GAAGX,YAAY,CAAC,yBAAD,EAA4B,IAA5B,CAAZ,KACfU,QAAQ,GACL,UAAUE,CAAV,EAAaC,KAAb,EAAoB;EACrBD,CAAC,CAACE,SAAF,GAAcD,KAAd,CADqB,CACA;;EACrB,OAAOD,CAAP;AACA,CAJM,GAKL,IANY,CAAhB,C,CASA;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,MAArB,EAA6B;EAC7C,IAAI,CAACZ,SAAS,CAACY,MAAD,CAAV,IAAsBA,MAAM,GAAG,CAAnC,EAAsC;IACrC,MAAM,IAAIb,UAAJ,CAAe,2DAAf,CAAN;EACA;;EACD,IAAIa,MAAM,GAAGX,gBAAb,EAA+B;IAC9B,MAAM,IAAIJ,WAAJ,CAAgB,oCAAhB,CAAN;EACA;;EACD,IAAIU,KAAK,GAAGM,SAAS,CAACD,MAAV,GAAmB,CAAnB,GAAuBC,SAAS,CAAC,CAAD,CAAhC,GAAsCjB,eAAlD;EACA,IAAIkB,CAAC,GAAG,EAAR,CAR6C,CAQjC;;EACZ,IAAIP,KAAK,KAAKX,eAAd,EAA+B;IAAE;IAChC,IAAI,CAACS,SAAL,EAAgB;MACf,MAAM,IAAIP,YAAJ,CAAiB,kJAAjB,CAAN;IACA;;IACDO,SAAS,CAACS,CAAD,EAAIP,KAAJ,CAAT;EACA;;EACD,IAAIK,MAAM,KAAK,CAAf,EAAkB;IAAE;IACnBE,CAAC,CAACF,MAAF,GAAWA,MAAX;EACA;EACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;EACC,OAAOE,CAAP;AACA,CA3BD"},"metadata":{},"sourceType":"script"}