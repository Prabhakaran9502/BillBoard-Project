{"ast":null,"code":"import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = function (page) {\n  let pageCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (pageCount === 0) {\n    return page;\n  }\n\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","map":{"version":3,"names":["GridSignature","MAX_PAGE_SIZE","defaultPageSize","autoPageSize","getPageCount","rowCount","pageSize","page","Math","ceil","getDefaultGridPaginationModel","getValidPage","pageCount","max","min","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","Error","join"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js"],"sourcesContent":["import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};"],"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,MAAMC,aAAa,GAAG,GAAtB;AACA,OAAO,MAAMC,eAAe,GAAGC,YAAY,IAAIA,YAAY,GAAG,CAAH,GAAO,GAA3D;AACP,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,KAA8B;EACxD,IAAID,QAAQ,GAAG,CAAX,IAAgBD,QAAQ,GAAG,CAA/B,EAAkC;IAChC,OAAOG,IAAI,CAACC,IAAL,CAAUJ,QAAQ,GAAGC,QAArB,CAAP;EACD;;EACD,IAAID,QAAQ,KAAK,CAAC,CAAlB,EAAqB;IACnB;IACA,OAAOE,IAAI,GAAG,CAAd;EACD;;EACD,OAAO,CAAP;AACD,CATM;AAUP,OAAO,MAAMG,6BAA6B,GAAGP,YAAY,KAAK;EAC5DI,IAAI,EAAE,CADsD;EAE5DD,QAAQ,EAAEH,YAAY,GAAG,CAAH,GAAO;AAF+B,CAAL,CAAlD;AAIP,OAAO,MAAMQ,YAAY,GAAG,UAACJ,IAAD,EAAyB;EAAA,IAAlBK,SAAkB,uEAAN,CAAM;;EACnD,IAAIA,SAAS,KAAK,CAAlB,EAAqB;IACnB,OAAOL,IAAP;EACD;;EACD,OAAOC,IAAI,CAACK,GAAL,CAASL,IAAI,CAACM,GAAL,CAASP,IAAT,EAAeK,SAAS,GAAG,CAA3B,CAAT,EAAwC,CAAxC,CAAP;AACD,CALM;AAMP,OAAO,MAAMG,8BAA8B,GAAG,CAACT,QAAD,EAAWU,aAAX,KAA6B;EACzE,IAAIA,aAAa,KAAKhB,aAAa,CAACiB,QAAhC,IAA4CX,QAAQ,GAAGL,aAA3D,EAA0E;IACxE,MAAM,IAAIiB,KAAJ,CAAU,CAAC,yEAAD,EAA4E,yFAA5E,EAAuKC,IAAvK,CAA4K,IAA5K,CAAV,CAAN;EACD;AACF,CAJM"},"metadata":{},"sourceType":"module"}