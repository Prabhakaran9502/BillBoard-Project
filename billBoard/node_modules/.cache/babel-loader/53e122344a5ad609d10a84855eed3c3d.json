{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '@mui/x-data-grid';\nimport { getRowIdFromRowModel } from '@mui/x-data-grid/internals';\n\nfunction createPinnedRowsInternalCache(pinnedRows, getRowId) {\n  const cache = {\n    topIds: [],\n    bottomIds: [],\n    idLookup: {}\n  };\n  pinnedRows?.top?.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.topIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  pinnedRows?.bottom?.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.bottomIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  return cache;\n}\n\nexport const rowPinningStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(props.pinnedRows, props.getRowId);\n  return _extends({}, state, {\n    rows: _extends({}, state.rows, {\n      additionalRowGroups: _extends({}, state.rows?.additionalRowGroups, {\n        pinnedRows: {\n          top: [],\n          bottom: []\n        }\n      })\n    })\n  });\n};\nexport const useGridRowPinning = (apiRef, props) => {\n  const setPinnedRows = React.useCallback(newPinnedRows => {\n    apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(newPinnedRows, props.getRowId);\n    apiRef.current.requestPipeProcessorsApplication('hydrateRows');\n  }, [apiRef, props.getRowId]);\n  useGridApiMethod(apiRef, {\n    unstable_setPinnedRows: setPinnedRows\n  }, 'public');\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    apiRef.current.unstable_setPinnedRows(props.pinnedRows);\n  }, [apiRef, props.pinnedRows]);\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","getRowIdFromRowModel","createPinnedRowsInternalCache","pinnedRows","getRowId","cache","topIds","bottomIds","idLookup","top","forEach","rowModel","id","push","bottom","rowPinningStateInitializer","state","props","apiRef","current","caches","rows","additionalRowGroups","useGridRowPinning","setPinnedRows","useCallback","newPinnedRows","requestPipeProcessorsApplication","unstable_setPinnedRows","isFirstRender","useRef","useEffect"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-data-grid-pro/esm/hooks/features/rowPinning/useGridRowPinning.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '@mui/x-data-grid';\nimport { getRowIdFromRowModel } from '@mui/x-data-grid/internals';\nfunction createPinnedRowsInternalCache(pinnedRows, getRowId) {\n  const cache = {\n    topIds: [],\n    bottomIds: [],\n    idLookup: {}\n  };\n  pinnedRows?.top?.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.topIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  pinnedRows?.bottom?.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.bottomIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  return cache;\n}\nexport const rowPinningStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(props.pinnedRows, props.getRowId);\n  return _extends({}, state, {\n    rows: _extends({}, state.rows, {\n      additionalRowGroups: _extends({}, state.rows?.additionalRowGroups, {\n        pinnedRows: {\n          top: [],\n          bottom: []\n        }\n      })\n    })\n  });\n};\nexport const useGridRowPinning = (apiRef, props) => {\n  const setPinnedRows = React.useCallback(newPinnedRows => {\n    apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(newPinnedRows, props.getRowId);\n    apiRef.current.requestPipeProcessorsApplication('hydrateRows');\n  }, [apiRef, props.getRowId]);\n  useGridApiMethod(apiRef, {\n    unstable_setPinnedRows: setPinnedRows\n  }, 'public');\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    apiRef.current.unstable_setPinnedRows(props.pinnedRows);\n  }, [apiRef, props.pinnedRows]);\n};"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,oBAAT,QAAqC,4BAArC;;AACA,SAASC,6BAAT,CAAuCC,UAAvC,EAAmDC,QAAnD,EAA6D;EAC3D,MAAMC,KAAK,GAAG;IACZC,MAAM,EAAE,EADI;IAEZC,SAAS,EAAE,EAFC;IAGZC,QAAQ,EAAE;EAHE,CAAd;EAKAL,UAAU,EAAEM,GAAZ,EAAiBC,OAAjB,CAAyBC,QAAQ,IAAI;IACnC,MAAMC,EAAE,GAAGX,oBAAoB,CAACU,QAAD,EAAWP,QAAX,CAA/B;IACAC,KAAK,CAACC,MAAN,CAAaO,IAAb,CAAkBD,EAAlB;IACAP,KAAK,CAACG,QAAN,CAAeI,EAAf,IAAqBD,QAArB;EACD,CAJD;EAKAR,UAAU,EAAEW,MAAZ,EAAoBJ,OAApB,CAA4BC,QAAQ,IAAI;IACtC,MAAMC,EAAE,GAAGX,oBAAoB,CAACU,QAAD,EAAWP,QAAX,CAA/B;IACAC,KAAK,CAACE,SAAN,CAAgBM,IAAhB,CAAqBD,EAArB;IACAP,KAAK,CAACG,QAAN,CAAeI,EAAf,IAAqBD,QAArB;EACD,CAJD;EAKA,OAAON,KAAP;AACD;;AACD,OAAO,MAAMU,0BAA0B,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,MAAf,KAA0B;EAClEA,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBjB,UAAtB,GAAmCD,6BAA6B,CAACe,KAAK,CAACd,UAAP,EAAmBc,KAAK,CAACb,QAAzB,CAAhE;EACA,OAAON,QAAQ,CAAC,EAAD,EAAKkB,KAAL,EAAY;IACzBK,IAAI,EAAEvB,QAAQ,CAAC,EAAD,EAAKkB,KAAK,CAACK,IAAX,EAAiB;MAC7BC,mBAAmB,EAAExB,QAAQ,CAAC,EAAD,EAAKkB,KAAK,CAACK,IAAN,EAAYC,mBAAjB,EAAsC;QACjEnB,UAAU,EAAE;UACVM,GAAG,EAAE,EADK;UAEVK,MAAM,EAAE;QAFE;MADqD,CAAtC;IADA,CAAjB;EADW,CAAZ,CAAf;AAUD,CAZM;AAaP,OAAO,MAAMS,iBAAiB,GAAG,CAACL,MAAD,EAASD,KAAT,KAAmB;EAClD,MAAMO,aAAa,GAAGzB,KAAK,CAAC0B,WAAN,CAAkBC,aAAa,IAAI;IACvDR,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsBjB,UAAtB,GAAmCD,6BAA6B,CAACwB,aAAD,EAAgBT,KAAK,CAACb,QAAtB,CAAhE;IACAc,MAAM,CAACC,OAAP,CAAeQ,gCAAf,CAAgD,aAAhD;EACD,CAHqB,EAGnB,CAACT,MAAD,EAASD,KAAK,CAACb,QAAf,CAHmB,CAAtB;EAIAJ,gBAAgB,CAACkB,MAAD,EAAS;IACvBU,sBAAsB,EAAEJ;EADD,CAAT,EAEb,QAFa,CAAhB;EAGA,MAAMK,aAAa,GAAG9B,KAAK,CAAC+B,MAAN,CAAa,IAAb,CAAtB;EACA/B,KAAK,CAACgC,SAAN,CAAgB,MAAM;IACpB,IAAIF,aAAa,CAACV,OAAlB,EAA2B;MACzBU,aAAa,CAACV,OAAd,GAAwB,KAAxB;MACA;IACD;;IACDD,MAAM,CAACC,OAAP,CAAeS,sBAAf,CAAsCX,KAAK,CAACd,UAA5C;EACD,CAND,EAMG,CAACe,MAAD,EAASD,KAAK,CAACd,UAAf,CANH;AAOD,CAhBM"},"metadata":{},"sourceType":"module"}