{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kb\\\\Downloads\\\\billBoard\\\\billboard\\\\src\\\\Components\\\\Pages\\\\Users.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// export default function Users() {\n//     return (\n//         <div>\n//             <div> Users </div>\n//         </div>\n//     )\n// }\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: 'Email',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Active\\u00a0From',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'size',\n  label: 'Last\\u00a0Login',\n  minWidth: 170,\n  align: 'right'\n}, {\n  id: 'density',\n  label: 'Status',\n  minWidth: 170,\n  align: 'right'\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nexport default function Users() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Users \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 53\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","createData","name","code","population","size","density","rows","Users","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","map","column","slice","row","format","length"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/src/Components/Pages/Users.js"],"sourcesContent":["// import React from \"react\";\r\n\r\n// export default function Users() {\r\n//     return (\r\n//         <div>\r\n//             <div> Users </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\nimport * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'code', label: 'Email', minWidth: 100 },\r\n    {\r\n        id: 'population',\r\n        label: 'Active\\u00a0From',\r\n        minWidth: 170,\r\n        align: 'right',\r\n    },\r\n    {\r\n        id: 'size',\r\n        label: 'Last\\u00a0Login',\r\n        minWidth: 170,\r\n        align: 'right',\r\n    },\r\n    {\r\n        id: 'density',\r\n        label: 'Status',\r\n        minWidth: 170,\r\n        align: 'right',\r\n    },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n    const density = population / size;\r\n    return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n    createData('India', 'IN', 1324171354, 3287263),\r\n    createData('China', 'CN', 1403500365, 9596961),\r\n    createData('Italy', 'IT', 60483973, 301340),\r\n    createData('United States', 'US', 327167434, 9833520),\r\n    createData('Canada', 'CA', 37602103, 9984670),\r\n    createData('Australia', 'AU', 25475400, 7692024),\r\n    createData('Germany', 'DE', 83019200, 357578),\r\n    createData('Ireland', 'IE', 4857000, 70273),\r\n    createData('Mexico', 'MX', 126577691, 1972550),\r\n    createData('Japan', 'JP', 126317000, 377973),\r\n    createData('France', 'FR', 67022000, 640679),\r\n    createData('United Kingdom', 'GB', 67545757, 242495),\r\n    createData('Russia', 'RU', 146793744, 17098246),\r\n    createData('Nigeria', 'NG', 200962417, 923768),\r\n    createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nexport default function Users() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1> Users </h1>\r\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                <TableContainer sx={{ maxHeight: 440 }}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row) => {\r\n                                    return (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                            {columns.map((column) => {\r\n                                                const value = row[column.id];\r\n                                                return (\r\n                                                    <TableCell key={column.id} align={column.align}>\r\n                                                        {column.format && typeof value === 'number'\r\n                                                            ? column.format(value)\r\n                                                            : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}