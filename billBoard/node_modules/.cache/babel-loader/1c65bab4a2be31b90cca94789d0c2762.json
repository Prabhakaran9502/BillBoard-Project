{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst enUSPickers = {\n  // Calendar navigation\n  previousMonth: 'Previous month',\n  nextMonth: 'Next month',\n  // View navigation\n  openPreviousView: 'Open previous view',\n  openNextView: 'Open next view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange labels\n  start: 'Start',\n  end: 'End',\n  startDate: 'Start date',\n  startTime: 'Start time',\n  endDate: 'End date',\n  endTime: 'End time',\n  // Action bar\n  cancelButtonLabel: 'Cancel',\n  clearButtonLabel: 'Clear',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Today',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Select date',\n  dateTimePickerToolbarTitle: 'Select date & time',\n  timePickerToolbarTitle: 'Select time',\n  dateRangePickerToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} hours`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Digital clock labels\n  selectViewText: view => `Select ${view}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Week number',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Week ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choose date, selected date is ${utils.format(value, 'fullDate')}` : 'Choose date',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choose time, selected time is ${utils.format(value, 'fullTime')}` : 'Choose time',\n  fieldClearLabel: 'Clear value',\n  // Table labels\n  timeTableLabel: 'pick time',\n  dateTableLabel: 'pick date',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'DD',\n  fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa',\n  // View names\n  year: 'Year',\n  month: 'Month',\n  day: 'Day',\n  weekDay: 'Week day',\n  hours: 'Hours',\n  minutes: 'Minutes',\n  seconds: 'Seconds',\n  meridiem: 'Meridiem',\n  // Common\n  empty: 'Empty'\n};\nexport const DEFAULT_LOCALE = enUSPickers;\nexport const enUS = getPickersLocalization(enUSPickers);","map":{"version":3,"names":["getPickersLocalization","enUSPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","startDate","startTime","endDate","endTime","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","selectViewText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","fieldClearLabel","timeTableLabel","dateTableLabel","fieldYearPlaceholder","params","repeat","digitAmount","fieldMonthPlaceholder","contentType","fieldDayPlaceholder","fieldWeekDayPlaceholder","fieldHoursPlaceholder","fieldMinutesPlaceholder","fieldSecondsPlaceholder","fieldMeridiemPlaceholder","year","month","day","weekDay","meridiem","empty","DEFAULT_LOCALE","enUS"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/@mui/x-date-pickers/locales/enUS.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\n\n// This object is not Partial<PickersLocaleText> because it is the default values\n\nconst enUSPickers = {\n  // Calendar navigation\n  previousMonth: 'Previous month',\n  nextMonth: 'Next month',\n  // View navigation\n  openPreviousView: 'Open previous view',\n  openNextView: 'Open next view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange labels\n  start: 'Start',\n  end: 'End',\n  startDate: 'Start date',\n  startTime: 'Start time',\n  endDate: 'End date',\n  endTime: 'End time',\n  // Action bar\n  cancelButtonLabel: 'Cancel',\n  clearButtonLabel: 'Clear',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Today',\n  // Toolbar titles\n  datePickerToolbarTitle: 'Select date',\n  dateTimePickerToolbarTitle: 'Select date & time',\n  timePickerToolbarTitle: 'Select time',\n  dateRangePickerToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} hours`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Digital clock labels\n  selectViewText: view => `Select ${view}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Week number',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Week ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choose date, selected date is ${utils.format(value, 'fullDate')}` : 'Choose date',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choose time, selected time is ${utils.format(value, 'fullTime')}` : 'Choose time',\n  fieldClearLabel: 'Clear value',\n  // Table labels\n  timeTableLabel: 'pick time',\n  dateTableLabel: 'pick date',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'Y'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'DD',\n  fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa',\n  // View names\n  year: 'Year',\n  month: 'Month',\n  day: 'Day',\n  weekDay: 'Week day',\n  hours: 'Hours',\n  minutes: 'Minutes',\n  seconds: 'Seconds',\n  meridiem: 'Meridiem',\n  // Common\n  empty: 'Empty'\n};\nexport const DEFAULT_LOCALE = enUSPickers;\nexport const enUS = getPickersLocalization(enUSPickers);"],"mappings":"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"},"metadata":{},"sourceType":"module"}