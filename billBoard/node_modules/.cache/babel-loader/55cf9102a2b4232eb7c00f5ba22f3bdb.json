{"ast":null,"code":"import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","map":{"version":3,"names":["useGridRefs","useGridTheme","useGridLoggerFactory","useGridApiInitialization","useGridLocaleText","useGridPipeProcessing","useGridStrategyProcessing","useGridStateInitialization","useGridInitialization","inputApiRef","props","privateApiRef","current","register","rootProps"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js"],"sourcesContent":["import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,WAAD,EAAcC,KAAd,KAAwB;EAC3D,MAAMC,aAAa,GAAGR,wBAAwB,CAACM,WAAD,EAAcC,KAAd,CAA9C;EACAV,WAAW,CAACW,aAAD,CAAX;EACAV,YAAY,CAACU,aAAD,CAAZ;EACAT,oBAAoB,CAACS,aAAD,EAAgBD,KAAhB,CAApB;EACAH,0BAA0B,CAACI,aAAD,CAA1B;EACAN,qBAAqB,CAACM,aAAD,CAArB;EACAL,yBAAyB,CAACK,aAAD,CAAzB;EACAP,iBAAiB,CAACO,aAAD,EAAgBD,KAAhB,CAAjB;EACAC,aAAa,CAACC,OAAd,CAAsBC,QAAtB,CAA+B,SAA/B,EAA0C;IACxCC,SAAS,EAAEJ;EAD6B,CAA1C;EAGA,OAAOC,aAAP;AACD,CAbM"},"metadata":{},"sourceType":"module"}