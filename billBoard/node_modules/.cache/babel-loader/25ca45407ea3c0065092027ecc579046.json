{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateRowTree = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _xDataGrid = require(\"@mui/x-data-grid\");\n\nvar _internals = require(\"@mui/x-data-grid/internals\");\n\nvar _insertDataRowInTree = require(\"./insertDataRowInTree\");\n\nvar _removeDataRowFromTree = require(\"./removeDataRowFromTree\");\n\nvar _utils = require(\"./utils\");\n\nconst updateRowTree = params => {\n  const tree = (0, _extends2.default)({}, params.previousTree);\n  const treeDepths = (0, _extends2.default)({}, params.previousTreeDepth);\n  const updatedGroupsManager = (0, _utils.createUpdatedGroupsManager)();\n\n  for (let i = 0; i < params.nodes.inserted.length; i += 1) {\n    const {\n      id,\n      path\n    } = params.nodes.inserted[i];\n    (0, _insertDataRowInTree.insertDataRowInTree)({\n      previousTree: params.previousTree,\n      tree,\n      treeDepths,\n      updatedGroupsManager,\n      id,\n      path,\n      onDuplicatePath: params.onDuplicatePath,\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\n    });\n  }\n\n  for (let i = 0; i < params.nodes.removed.length; i += 1) {\n    const nodeId = params.nodes.removed[i];\n    (0, _removeDataRowFromTree.removeDataRowFromTree)({\n      tree,\n      treeDepths,\n      updatedGroupsManager,\n      id: nodeId\n    });\n  }\n\n  for (let i = 0; i < params.nodes.modified.length; i += 1) {\n    const {\n      id,\n      path\n    } = params.nodes.modified[i];\n    const pathInPreviousTree = (0, _utils.getNodePathInTree)({\n      tree,\n      id\n    });\n    const isInSameGroup = (0, _internals.isDeepEqual)(pathInPreviousTree, path);\n\n    if (!isInSameGroup) {\n      (0, _removeDataRowFromTree.removeDataRowFromTree)({\n        tree,\n        treeDepths,\n        updatedGroupsManager,\n        id\n      });\n      (0, _insertDataRowInTree.insertDataRowInTree)({\n        previousTree: params.previousTree,\n        tree,\n        treeDepths,\n        updatedGroupsManager,\n        id,\n        path,\n        onDuplicatePath: params.onDuplicatePath,\n        isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n        defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\n      });\n    } else {\n      updatedGroupsManager?.addAction(tree[id].parent, 'modifyChildren');\n    }\n  } // TODO rows v6: Avoid walking the whole tree, we should be able to generate the new list only using slices.\n\n\n  const dataRowIds = (0, _internals.getTreeNodeDescendants)(tree, _xDataGrid.GRID_ROOT_GROUP_ID, true);\n  return {\n    tree,\n    treeDepths,\n    groupingName: params.groupingName,\n    dataRowIds,\n    updatedGroupsManager\n  };\n};\n\nexports.updateRowTree = updateRowTree;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","updateRowTree","_extends2","_xDataGrid","_internals","_insertDataRowInTree","_removeDataRowFromTree","_utils","params","tree","default","previousTree","treeDepths","previousTreeDepth","updatedGroupsManager","createUpdatedGroupsManager","i","nodes","inserted","length","id","path","insertDataRowInTree","onDuplicatePath","isGroupExpandedByDefault","defaultGroupingExpansionDepth","removed","nodeId","removeDataRowFromTree","modified","pathInPreviousTree","getNodePathInTree","isInSameGroup","isDeepEqual","addAction","parent","dataRowIds","getTreeNodeDescendants","GRID_ROOT_GROUP_ID","groupingName"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-pro/utils/tree/updateRowTree.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateRowTree = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _xDataGrid = require(\"@mui/x-data-grid\");\nvar _internals = require(\"@mui/x-data-grid/internals\");\nvar _insertDataRowInTree = require(\"./insertDataRowInTree\");\nvar _removeDataRowFromTree = require(\"./removeDataRowFromTree\");\nvar _utils = require(\"./utils\");\nconst updateRowTree = params => {\n  const tree = (0, _extends2.default)({}, params.previousTree);\n  const treeDepths = (0, _extends2.default)({}, params.previousTreeDepth);\n  const updatedGroupsManager = (0, _utils.createUpdatedGroupsManager)();\n  for (let i = 0; i < params.nodes.inserted.length; i += 1) {\n    const {\n      id,\n      path\n    } = params.nodes.inserted[i];\n    (0, _insertDataRowInTree.insertDataRowInTree)({\n      previousTree: params.previousTree,\n      tree,\n      treeDepths,\n      updatedGroupsManager,\n      id,\n      path,\n      onDuplicatePath: params.onDuplicatePath,\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\n    });\n  }\n  for (let i = 0; i < params.nodes.removed.length; i += 1) {\n    const nodeId = params.nodes.removed[i];\n    (0, _removeDataRowFromTree.removeDataRowFromTree)({\n      tree,\n      treeDepths,\n      updatedGroupsManager,\n      id: nodeId\n    });\n  }\n  for (let i = 0; i < params.nodes.modified.length; i += 1) {\n    const {\n      id,\n      path\n    } = params.nodes.modified[i];\n    const pathInPreviousTree = (0, _utils.getNodePathInTree)({\n      tree,\n      id\n    });\n    const isInSameGroup = (0, _internals.isDeepEqual)(pathInPreviousTree, path);\n    if (!isInSameGroup) {\n      (0, _removeDataRowFromTree.removeDataRowFromTree)({\n        tree,\n        treeDepths,\n        updatedGroupsManager,\n        id\n      });\n      (0, _insertDataRowInTree.insertDataRowInTree)({\n        previousTree: params.previousTree,\n        tree,\n        treeDepths,\n        updatedGroupsManager,\n        id,\n        path,\n        onDuplicatePath: params.onDuplicatePath,\n        isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n        defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth\n      });\n    } else {\n      updatedGroupsManager?.addAction(tree[id].parent, 'modifyChildren');\n    }\n  }\n\n  // TODO rows v6: Avoid walking the whole tree, we should be able to generate the new list only using slices.\n  const dataRowIds = (0, _internals.getTreeNodeDescendants)(tree, _xDataGrid.GRID_ROOT_GROUP_ID, true);\n  return {\n    tree,\n    treeDepths,\n    groupingName: params.groupingName,\n    dataRowIds,\n    updatedGroupsManager\n  };\n};\nexports.updateRowTree = updateRowTree;"],"mappings":"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"},"metadata":{},"sourceType":"script"}