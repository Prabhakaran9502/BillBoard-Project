{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridDetailPanelPreProcessors = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _xDataGrid = require(\"@mui/x-data-grid\");\n\nvar _internals = require(\"@mui/x-data-grid/internals\");\n\nvar _gridDetailPanelToggleColDef = require(\"./gridDetailPanelToggleColDef\");\n\nvar _gridDetailPanelSelector = require(\"./gridDetailPanelSelector\");\n\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n      t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\n\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n\n  var t = _getRequireWildcardCache(r);\n\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n    __proto__: null\n  },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n\n  return n.default = e, t && t.set(e, n), n;\n}\n\nconst useGridDetailPanelPreProcessors = (privateApiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n\n      return columnsState;\n    } // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n\n\n    if (columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    } // Otherwise, add the toggle column at the beginning\n\n\n    columnsState.orderedFields = [_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\n    columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD] = (0, _extends2.default)({}, _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [privateApiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n\n    const expandedRowIds = (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector)(privateApiRef.current.state);\n\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n\n    return [...classes, _xDataGrid.gridClasses['row--detailPanelExpanded']];\n  }, [privateApiRef, props.getDetailPanelContent]);\n  (0, _internals.useGridRegisterPipeProcessor)(privateApiRef, 'hydrateColumns', addToggleColumn);\n  (0, _internals.useGridRegisterPipeProcessor)(privateApiRef, 'rowClassName', addExpandedClassToRow);\n};\n\nexports.useGridDetailPanelPreProcessors = useGridDetailPanelPreProcessors;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useGridDetailPanelPreProcessors","_extends2","React","_interopRequireWildcard","_xDataGrid","_internals","_gridDetailPanelToggleColDef","_gridDetailPanelSelector","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","privateApiRef","props","addToggleColumn","useCallback","columnsState","getDetailPanelContent","lookup","GRID_DETAIL_PANEL_TOGGLE_FIELD","orderedFields","filter","field","GRID_DETAIL_PANEL_TOGGLE_COL_DEF","headerName","current","getLocaleText","addExpandedClassToRow","classes","id","expandedRowIds","gridDetailPanelExpandedRowIdsSelector","state","includes","gridClasses","useGridRegisterPipeProcessor"],"sources":["C:/Users/kb/node_modules/@mui/x-data-grid-pro/hooks/features/detailPanel/useGridDetailPanelPreProcessors.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridDetailPanelPreProcessors = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _xDataGrid = require(\"@mui/x-data-grid\");\nvar _internals = require(\"@mui/x-data-grid/internals\");\nvar _gridDetailPanelToggleColDef = require(\"./gridDetailPanelToggleColDef\");\nvar _gridDetailPanelSelector = require(\"./gridDetailPanelSelector\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nconst useGridDetailPanelPreProcessors = (privateApiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n      return columnsState;\n    }\n\n    // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n    if (columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    }\n\n    // Otherwise, add the toggle column at the beginning\n    columnsState.orderedFields = [_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\n    columnsState.lookup[_gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_FIELD] = (0, _extends2.default)({}, _gridDetailPanelToggleColDef.GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [privateApiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n    const expandedRowIds = (0, _gridDetailPanelSelector.gridDetailPanelExpandedRowIdsSelector)(privateApiRef.current.state);\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n    return [...classes, _xDataGrid.gridClasses['row--detailPanelExpanded']];\n  }, [privateApiRef, props.getDetailPanelContent]);\n  (0, _internals.useGridRegisterPipeProcessor)(privateApiRef, 'hydrateColumns', addToggleColumn);\n  (0, _internals.useGridRegisterPipeProcessor)(privateApiRef, 'rowClassName', addExpandedClassToRow);\n};\nexports.useGridDetailPanelPreProcessors = useGridDetailPanelPreProcessors;"],"mappings":"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"},"metadata":{},"sourceType":"script"}