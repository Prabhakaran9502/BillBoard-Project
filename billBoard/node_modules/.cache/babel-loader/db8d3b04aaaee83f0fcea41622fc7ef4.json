{"ast":null,"code":"\"use strict\";\n\nexports.closestIndexTo = closestIndexTo;\n\nvar _index = require(\"./toDate.js\");\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateToCompare - The date to compare with\n * @param dates - The array to search\n *\n * @returns An index of the date closest to the given date or undefined if no valid value is given\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * const dateToCompare = new Date(2015, 8, 6)\n * const datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * const result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\n\n\nfunction closestIndexTo(dateToCompare, dates) {\n  const date = (0, _index.toDate)(dateToCompare);\n  if (isNaN(Number(date))) return NaN;\n  const timeToCompare = date.getTime();\n  let result;\n  let minDistance;\n  dates.forEach(function (dirtyDate, index) {\n    const currentDate = (0, _index.toDate)(dirtyDate);\n\n    if (isNaN(Number(currentDate))) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    const distance = Math.abs(timeToCompare - currentDate.getTime());\n\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n  return result;\n}","map":{"version":3,"names":["exports","closestIndexTo","_index","require","dateToCompare","dates","date","toDate","isNaN","Number","NaN","timeToCompare","getTime","result","minDistance","forEach","dirtyDate","index","currentDate","distance","Math","abs"],"sources":["C:/Users/kb/Downloads/billBoard/billboard/node_modules/date-fns/closestIndexTo.js"],"sourcesContent":["\"use strict\";\nexports.closestIndexTo = closestIndexTo;\nvar _index = require(\"./toDate.js\");\n\n/**\n * @name closestIndexTo\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateToCompare - The date to compare with\n * @param dates - The array to search\n *\n * @returns An index of the date closest to the given date or undefined if no valid value is given\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * const dateToCompare = new Date(2015, 8, 6)\n * const datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * const result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\nfunction closestIndexTo(dateToCompare, dates) {\n  const date = (0, _index.toDate)(dateToCompare);\n\n  if (isNaN(Number(date))) return NaN;\n\n  const timeToCompare = date.getTime();\n\n  let result;\n  let minDistance;\n  dates.forEach(function (dirtyDate, index) {\n    const currentDate = (0, _index.toDate)(dirtyDate);\n\n    if (isNaN(Number(currentDate))) {\n      result = NaN;\n      minDistance = NaN;\n      return;\n    }\n\n    const distance = Math.abs(timeToCompare - currentDate.getTime());\n    if (result == null || distance < minDistance) {\n      result = index;\n      minDistance = distance;\n    }\n  });\n\n  return result;\n}\n"],"mappings":"AAAA;;AACAA,OAAO,CAACC,cAAR,GAAyBA,cAAzB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBG,aAAxB,EAAuCC,KAAvC,EAA8C;EAC5C,MAAMC,IAAI,GAAG,CAAC,GAAGJ,MAAM,CAACK,MAAX,EAAmBH,aAAnB,CAAb;EAEA,IAAII,KAAK,CAACC,MAAM,CAACH,IAAD,CAAP,CAAT,EAAyB,OAAOI,GAAP;EAEzB,MAAMC,aAAa,GAAGL,IAAI,CAACM,OAAL,EAAtB;EAEA,IAAIC,MAAJ;EACA,IAAIC,WAAJ;EACAT,KAAK,CAACU,OAAN,CAAc,UAAUC,SAAV,EAAqBC,KAArB,EAA4B;IACxC,MAAMC,WAAW,GAAG,CAAC,GAAGhB,MAAM,CAACK,MAAX,EAAmBS,SAAnB,CAApB;;IAEA,IAAIR,KAAK,CAACC,MAAM,CAACS,WAAD,CAAP,CAAT,EAAgC;MAC9BL,MAAM,GAAGH,GAAT;MACAI,WAAW,GAAGJ,GAAd;MACA;IACD;;IAED,MAAMS,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASV,aAAa,GAAGO,WAAW,CAACN,OAAZ,EAAzB,CAAjB;;IACA,IAAIC,MAAM,IAAI,IAAV,IAAkBM,QAAQ,GAAGL,WAAjC,EAA8C;MAC5CD,MAAM,GAAGI,KAAT;MACAH,WAAW,GAAGK,QAAd;IACD;EACF,CAdD;EAgBA,OAAON,MAAP;AACD"},"metadata":{},"sourceType":"script"}